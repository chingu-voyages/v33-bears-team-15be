var COMPODOC_SEARCH_INDEX = {
    "index": {"version":"2.3.9","fields":["title","body"],"fieldVectors":[["title/interfaces/ApiOptions.html",[0,1.995,1,2.656]],["body/interfaces/ApiOptions.html",[1,3.147,2,1.714,3,0.254,4,0.141,5,0.089,6,1.807,7,1.114,8,2.829,9,3.255,10,2.829,11,2.829,12,3.255,13,2.548,14,3.255,15,2.829,16,3.255,17,2.548,18,0.271,19,0.996,20,1.285,21,5.617,22,4.824,23,5.291,24,5.291,25,6.089,26,5.059,27,4.72,28,1.791,29,2.657,30,0.014,31,4.101,32,4.72,33,2.254,34,4.72,35,4.72,36,4.72,37,3.694,38,0.627,39,5.617,40,3.255,41,6.741,42,2.548,43,2.548,44,2.829,45,4.101,46,4.72,47,3.694,48,3.694,49,0.866,50,3.255,51,3.255,52,2.485,53,3.255,54,3.255,55,3.255,56,2.829,57,2.031,58,3.255,59,3.39,60,3.255,61,2.944,62,2.17,63,2.548,64,2.829,65,0.008,66,0.008]],["title/modules/AppModule.html",[67,2.097,68,2.861]],["body/modules/AppModule.html",[3,0.171,4,0.189,5,0.12,30,0.014,65,0.01,66,0.01,68,5.863,69,1.993,70,2.641,71,3.797,72,3.797,73,4.609,74,4.609,75,4.609,76,4.609,77,4.609,78,4.609,79,4.609,80,4.609,81,2.9,82,2.188,83,2.086,84,4.369,85,4.369]],["title/controllers/AuthController.html",[86,2.339,87,2.861]],["body/controllers/AuthController.html",[3,0.15,4,0.166,5,0.105,18,0.319,20,1.141,30,0.014,38,0.576,65,0.009,66,0.009,87,2.75,88,1.671,89,3.327,90,1.501,91,2.736,92,5.294,93,5.294,94,2.156,95,4.6,96,4.6,97,3.829,98,5.124,99,2.076,100,3.829,101,1.856,102,1.331,103,3.829,104,1.789,105,3.829,106,3.829,107,3.829,108,3.829,109,4.046,110,3.303,111,3.829,112,3.135,113,3.303,114,3.829,115,3.303,116,3.829,117,3.829,118,3.829,119,3.829,120,2.939,121,3.829,122,4.046,123,3.829,124,2.553,125,2.553,126,2.553,127,2.553,128,3.829]],["title/classes/AuthDto.html",[109,2.656,129,1.129]],["body/classes/AuthDto.html",[3,0.186,4,0.205,5,0.13,7,2.087,18,0.394,19,1.287,28,1.795,30,0.013,38,0.537,49,1.014,65,0.011,66,0.011,99,1.934,109,3.156,130,1.393,131,4.113,132,5.299,133,5.299,134,4.774,135,5.865,136,4.113,137,3.554,138,3.399,139,4.113,140,2.953,141,3.156,142,4.113,143,4.113,144,4.113,145,3.399,146,4.113,147,4.113,148,2.953]],["title/modules/AuthModule.html",[67,2.097,73,2.656]],["body/modules/AuthModule.html",[3,0.185,4,0.204,5,0.129,30,0.013,65,0.011,66,0.011,69,2.149,70,2.774,73,5.353,81,3.046,82,2.36,83,2.25,87,3.384,88,2.056,149,4.094,150,4.094,151,4.094,152,5.241,153,4.745,154,4.745,155,3.951,156,4.711,157,2.766,158,3.688]],["title/interfaces/AuthOptions.html",[0,1.995,159,2.656]],["body/interfaces/AuthOptions.html",[2,1.869,3,0.139,4,0.154,5,0.097,6,1.97,7,1.214,8,3.084,15,3.084,18,0.295,19,1.06,20,1.338,28,1.044,29,1.549,30,0.013,37,2.778,38,0.611,49,1.081,52,2.644,57,2.214,65,0.009,66,0.009,138,2.549,159,3.348,160,3.084,161,3.549,162,5.826,163,5.826,164,5.826,165,5.826,166,4.8,167,5.826,168,5.021,169,1.484,170,4.363,171,5.021,172,5.021,173,5.021,174,5.021,175,3.084,176,3.549,177,3.549,178,3.084,179,3.084,180,5.826,181,3.549,182,3.549,183,3.549,184,3.549,185,3.549,186,3.549,187,1.313,188,3.084,189,5.021,190,3.549,191,5.021,192,5.021,193,3.549,194,3.549,195,3.549,196,3.549,197,3.549,198,3.549,199,3.549,200,3.549,201,3.084,202,3.549,203,3.549]],["title/injectables/AuthService.html",[152,2.656,204,1.473]],["body/injectables/AuthService.html",[3,0.141,4,0.155,5,0.098,18,0.298,20,1.214,30,0.013,38,0.613,49,1.039,65,0.009,66,0.009,90,1.434,91,2.812,94,2.292,95,4.396,96,4.396,101,1.974,102,1.415,104,1.834,109,3.373,120,3.532,122,3.373,132,2.576,152,2.391,155,3.252,169,1.5,205,1.327,206,3.117,207,5.058,208,2.777,209,5.058,210,5.058,211,1.275,212,3.117,213,6.364,214,3.532,215,3.587,216,3.117,217,3.587,218,3.959,219,3.587,220,3.587,221,3.373,222,3.633,223,3.587,224,5.058,225,3.959]],["title/controllers/AuthorController.html",[86,2.339,226,2.861]],["body/controllers/AuthorController.html",[3,0.131,4,0.144,5,0.131,7,1.924,18,0.512,20,1.073,30,0.014,38,0.542,49,0.966,65,0.008,66,0.008,88,1.453,90,1.36,99,2.068,101,1.745,102,1.251,104,1.782,110,2.077,112,3.422,113,4.069,115,2.077,124,2.22,125,2.22,126,2.22,127,2.22,169,2.84,187,1.774,226,2.391,227,2.606,228,2.291,229,2.403,230,2.663,231,2.893,232,3.755,233,4.102,234,3.33,235,2.893,236,2.893,237,4.401,238,3.33,239,2.391,240,4.102,241,4.102,242,4.419,243,4.039,244,3.749,245,3.749,246,2.391,247,2.606,248,1.848,249,3.755,250,2.606,251,1.848,252,4.102,253,2.606]],["title/classes/AuthorEntity.html",[129,1.129,254,3.118]],["body/classes/AuthorEntity.html",[3,0.158,4,0.174,5,0.11,18,0.335,19,1.156,20,1.166,28,1.612,30,0.014,38,0.65,49,0.951,65,0.01,66,0.01,94,2.474,99,2.218,102,1.114,130,1.184,245,2.683,254,3.15,255,2.891,256,2.016,257,2.234,258,3.653,259,3.935,260,3.935,261,2.291,262,3.418,263,2.891,264,4.458,265,3.653,266,3.418,267,4.153,268,3.8,269,3.653,270,3.15,271,2.683,272,2.683,273,2.511,274,2.683,275,2.511,276,2.511]],["title/modules/AuthorModule.html",[67,2.097,74,2.656]],["body/modules/AuthorModule.html",[3,0.207,4,0.228,5,0.144,30,0.013,65,0.011,66,0.011,69,2.404,70,2.978,74,5.248,81,3.27,82,2.64,83,2.517,88,2.3,157,3.095,226,3.785,277,4.58,278,4.58,279,4.626,280,4.943,281,5.27]],["title/injectables/AuthorRepository.html",[204,1.473,279,2.485]],["body/injectables/AuthorRepository.html",[3,0.116,4,0.128,5,0.081,18,0.246,19,0.928,20,1.208,28,0.869,29,1.289,30,0.014,33,1.411,38,0.623,49,0.827,65,0.008,66,0.008,90,1.246,91,2.906,94,2.486,101,1.964,102,1.408,104,1.843,112,2.97,187,1.625,205,1.093,208,1.918,211,1.05,228,2.099,256,1.48,261,1.837,279,1.843,282,2.567,283,1.64,284,2.742,285,2.742,286,2.742,287,2.742,288,2.742,289,2.099,290,2.954,291,2.742,292,2.954,293,1.843,294,2.742,295,1.843,296,3.378,297,1.843,298,4.323,299,3.626,300,1.843,301,1.843,302,4.062,303,3.626,304,1.843,305,2.742,306,1.843,307,2.742,308,2.742,309,1.843,310,1.735,311,1.843]],["title/injectables/AuthorService.html",[204,1.473,280,2.656]],["body/injectables/AuthorService.html",[3,0.138,4,0.153,5,0.159,18,0.293,20,1.207,30,0.014,38,0.61,49,1.035,65,0.009,66,0.009,90,1.417,91,2.949,94,2.47,101,1.963,102,1.407,104,1.892,120,3.7,169,2.427,187,1.848,205,1.304,208,2.18,211,1.253,229,2.503,230,2.773,231,3.063,232,4.942,233,3.331,248,1.957,251,1.957,252,4.21,279,3.621,280,2.35,289,2.386,296,1.766,312,3.063,313,3.87,314,4.996,315,3.525,316,2.35,317,3.525,318,4.996]],["title/classes/BaseEntitySchema.html",[129,1.129,257,2.211]],["body/classes/BaseEntitySchema.html",[3,0.223,4,0.246,5,0.156,18,0.473,19,1.442,30,0.013,38,0.5,65,0.012,66,0.012,99,1.801,130,1.671,257,3.153,261,2.857,262,4.264,275,3.544,276,3.544,319,4.936]],["title/controllers/BookController.html",[86,2.339,320,2.861]],["body/controllers/BookController.html",[3,0.129,4,0.143,5,0.09,7,1.913,18,0.51,20,1.068,30,0.014,38,0.615,49,1.036,65,0.008,66,0.008,88,1.439,90,1.351,99,2.06,101,1.737,102,1.245,104,1.775,110,2.057,112,3.415,113,4.053,115,2.057,124,2.199,125,2.199,126,2.199,127,2.199,169,2.831,187,1.762,228,2.275,229,2.386,230,2.644,235,2.865,236,2.865,237,4.377,239,2.368,240,4.084,241,4.084,242,4.399,243,4.016,246,2.368,247,2.581,248,1.83,249,3.728,250,2.581,251,1.83,253,2.581,320,2.368,321,2.865,322,2.865,323,3.176,324,4.084,325,3.297,326,3.297,327,2.368,328,3.104,329,4.084]],["title/classes/BookEntity.html",[129,1.129,271,2.656]],["body/classes/BookEntity.html",[3,0.122,4,0.135,5,0.085,7,1.564,18,0.259,19,0.965,28,1.345,30,0.014,33,2.183,38,0.685,49,1.001,52,3.14,65,0.008,66,0.008,99,2.396,102,0.929,130,0.917,244,3.048,245,2.078,256,1.561,257,1.73,261,1.911,262,2.852,264,4.99,266,3.962,267,3.977,268,4.094,269,3.048,271,2.078,272,3.048,274,2.078,275,1.944,276,1.944,330,2.238,331,3.283,332,3.973,333,3.973,334,3.578,335,3.973,336,3.283,337,3.973,338,3.973,339,3.973,340,3.973,341,2.439,342,2.439,343,4.572,344,3.116,345,2.439,346,2.238,347,3.116]],["title/modules/BookModule.html",[67,2.097,75,2.656]],["body/modules/BookModule.html",[3,0.207,4,0.228,5,0.144,30,0.013,65,0.011,66,0.011,69,2.404,70,2.978,75,5.248,81,3.27,82,2.64,83,2.517,88,2.3,157,3.095,320,3.785,348,4.58,349,4.58,350,4.353,351,4.943,352,5.27]],["title/injectables/BookRepository.html",[204,1.473,350,2.339]],["body/injectables/BookRepository.html",[3,0.116,4,0.128,5,0.081,18,0.246,19,0.928,20,1.208,28,0.869,29,1.289,30,0.014,33,1.411,38,0.623,49,0.827,65,0.008,66,0.008,90,1.246,91,2.906,94,2.486,101,1.964,102,1.408,104,1.843,112,2.97,187,1.625,205,1.093,208,1.918,211,1.05,228,2.099,256,1.48,261,1.837,283,1.64,284,2.742,285,2.742,286,2.742,287,2.742,288,2.742,289,2.099,291,2.742,293,1.843,294,2.742,295,1.843,296,3.378,297,1.843,298,4.323,299,3.626,300,1.843,301,1.843,302,4.062,303,3.626,304,1.843,305,2.742,306,1.843,307,2.742,308,2.742,309,1.843,310,1.735,311,1.843,350,1.735,353,2.567,354,2.954,355,2.954]],["title/injectables/BookService.html",[204,1.473,351,2.656]],["body/injectables/BookService.html",[3,0.137,4,0.152,5,0.096,18,0.291,20,1.204,30,0.014,38,0.608,49,1.033,65,0.009,66,0.009,90,1.41,91,2.946,94,2.466,101,1.959,102,1.404,104,1.888,120,3.834,169,2.417,187,1.839,205,1.295,208,2.17,211,1.245,229,2.49,230,2.76,248,1.943,251,1.943,289,2.374,313,3.855,316,2.334,322,3.042,323,4.197,324,3.315,327,2.514,329,4.197,350,3.395,351,2.334,356,3.042,357,4.972,358,3.501,359,4.321,360,3.501,361,4.972,362,3.501]],["title/controllers/CategoryController.html",[86,2.339,363,2.861]],["body/controllers/CategoryController.html",[3,0.134,4,0.148,5,0.094,7,1.952,18,0.518,20,1.086,30,0.014,38,0.548,49,0.975,65,0.009,66,0.009,88,1.492,90,1.386,99,2.089,101,1.766,102,1.266,104,1.801,110,2.133,112,3.44,113,4.111,115,2.133,124,2.279,125,2.279,126,2.279,127,2.279,169,2.865,187,1.808,228,2.335,229,2.449,230,2.714,237,4.467,239,2.455,240,4.152,241,4.152,242,4.473,243,4.099,246,2.455,247,2.676,248,1.898,249,3.826,250,2.676,251,1.898,253,2.676,363,2.455,364,2.676,365,3.419,366,3.805,367,3.419,368,3.419,369,3.419,370,4.467,371,4.152]],["title/classes/CategoryEntity.html",[129,1.129,372,2.861]],["body/classes/CategoryEntity.html",[3,0.174,4,0.192,5,0.121,7,1.997,18,0.368,19,1.232,28,1.302,30,0.014,38,0.636,49,0.831,65,0.01,66,0.01,99,2.203,102,1.187,130,1.302,245,2.951,256,2.217,257,2.457,261,2.441,262,3.643,263,3.179,264,4.356,265,2.951,266,3.643,267,3.893,268,3.803,269,3.893,270,3.464,272,3.893,273,2.761,275,2.761,276,2.761,331,3.179,340,3.846,346,3.179,372,4.193,373,3.179,374,5.074,375,3.464]],["title/modules/CategoryModule.html",[67,2.097,76,2.656]],["body/modules/CategoryModule.html",[3,0.207,4,0.228,5,0.144,30,0.013,65,0.011,66,0.011,69,2.404,70,2.978,76,5.248,81,3.27,82,2.64,83,2.517,88,2.3,157,3.095,363,3.785,376,4.58,377,4.58,378,4.626,379,4.943,380,5.27]],["title/injectables/CategoryRepository.html",[204,1.473,378,2.485]],["body/injectables/CategoryRepository.html",[3,0.116,4,0.128,5,0.081,18,0.246,19,0.928,20,1.208,28,0.869,29,1.289,30,0.014,33,1.411,38,0.623,49,0.827,65,0.008,66,0.008,90,1.246,91,2.906,94,2.486,101,1.964,102,1.408,104,1.843,112,2.97,187,1.625,205,1.093,208,1.918,211,1.05,228,2.099,256,1.48,261,1.837,283,1.64,284,2.742,285,2.742,286,2.742,287,2.742,288,2.742,289,2.099,291,2.742,293,1.843,294,2.742,295,1.843,296,3.378,297,1.843,298,4.323,299,3.626,300,1.843,301,1.843,302,4.062,303,3.626,304,1.843,305,2.742,306,1.843,307,2.742,308,2.742,309,1.843,310,1.735,311,1.843,378,1.843,381,2.567,382,2.954,383,2.954]],["title/injectables/CategoryService.html",[204,1.473,379,2.656]],["body/injectables/CategoryService.html",[3,0.151,4,0.166,5,0.105,18,0.32,20,1.2,30,0.014,38,0.606,49,1.012,65,0.009,66,0.009,90,1.505,91,2.939,94,2.514,101,1.951,102,1.399,104,1.881,120,3.82,169,2.542,187,1.963,205,1.421,211,1.367,229,2.659,230,2.946,248,2.133,251,2.133,289,2.535,313,4.054,316,2.562,366,3.539,371,4.372,378,3.793,379,2.562,384,3.34,385,3.843,386,3.843,387,3.34]],["title/modules/ConfigModule.html",[67,2.097,77,2.656]],["body/modules/ConfigModule.html",[3,0.217,4,0.239,5,0.151,30,0.013,65,0.012,66,0.012,69,2.521,70,3.066,77,5.025,81,3.367,82,2.768,83,2.639,158,4.326,214,4.288,388,4.803,389,4.803,390,5.527]],["title/classes/ConfigService.html",[129,1.129,214,2.211]],["body/classes/ConfigService.html",[1,4.043,3,0.184,4,0.203,5,0.129,18,0.39,19,1.28,30,0.013,38,0.413,65,0.011,66,0.011,90,1.719,104,1.657,130,1.38,159,4.043,208,3.289,211,2.156,214,2.603,261,2.535,391,4.075,392,5.269,393,6.72,394,5.26,395,6.064,396,6.064,397,6.064,398,6.064,399,5.269,400,4.355,401,4.69,402,4.69,403,4.69,404,4.69,405,4.69,406,4.69]],["title/interfaces/ConnectionOptions.html",[0,1.995,407,3.118]],["body/interfaces/ConnectionOptions.html",[2,2.747,3,0.205,4,0.226,5,0.143,6,2.896,18,0.434,19,1.369,20,1.288,22,4.533,30,0.013,38,0.571,49,1.102,65,0.011,66,0.011,407,4.083,408,7.061,409,7.061,410,5.637,411,4.659,412,5.217]],["title/classes/CreateAuthorDto.html",[129,1.129,233,2.656]],["body/classes/CreateAuthorDto.html",[3,0.162,4,0.179,5,0.113,18,0.343,19,1.175,20,1.177,28,1.638,30,0.013,38,0.64,49,0.897,61,3.474,65,0.01,66,0.01,99,2.141,102,1.282,130,1.213,137,3.32,140,3.474,148,2.572,233,2.748,244,4.846,258,4.204,259,5.065,260,4.529,268,2.171,270,3.226,271,2.748,328,3.091,413,3.582,414,3.226,415,4.502,416,3.226,417,4.122,418,3.226,419,3.582,420,2.961,421,4.122,422,4.122,423,3.582,424,4.122,425,4.839,426,4.122,427,4.122]],["title/classes/CreateBookDto.html",[129,1.129,324,2.656]],["body/classes/CreateBookDto.html",[3,0.127,4,0.14,5,0.088,7,2.372,18,0.268,19,0.989,28,2.04,30,0.014,38,0.663,49,0.916,52,2.907,65,0.008,66,0.008,99,2.198,102,1.409,130,0.949,137,3.65,140,4.325,169,1.348,244,4.622,268,1.698,274,2.15,324,2.15,328,3.848,331,3.966,332,5.596,334,4.322,335,4.073,342,2.524,345,2.524,346,2.316,370,3.668,415,4.622,420,2.316,423,2.802,425,4.798,428,2.524,429,2.15,430,4.687,431,2.802,432,3.225,433,3.225,434,3.225,435,3.668,436,3.225,437,2.802,438,3.225,439,3.225,440,3.225,441,2.802,442,4.322,443,5.522,444,3.225,445,2.15,446,3.225]],["title/classes/CreateCategoryDto.html",[129,1.129,366,2.656]],["body/classes/CreateCategoryDto.html",[3,0.167,4,0.185,5,0.117,7,2.563,18,0.354,19,1.201,28,1.886,30,0.013,38,0.628,49,0.81,65,0.01,66,0.01,99,2.033,102,1.523,130,1.253,137,3.603,140,3.551,263,3.059,273,2.658,274,2.84,342,3.334,346,3.059,366,2.84,370,5.018,372,3.059,374,5.571,415,4.274,419,3.702,435,4.455,441,3.702,447,3.702,448,3.334,449,4.26,450,4.26,451,5.692,452,4.26,453,4.26,454,4.26,455,4.26,456,4.26,457,4.26]],["title/classes/CreateReadingListDto.html",[129,1.129,458,2.485]],["body/classes/CreateReadingListDto.html",[3,0.181,4,0.2,5,0.126,7,2.05,18,0.383,19,1.265,20,1.045,30,0.014,38,0.621,49,0.948,65,0.01,66,0.01,99,2.237,102,1.524,130,1.355,137,3.715,148,3.739,260,4.304,273,2.873,274,3.071,375,3.604,458,2.873,459,4.002,460,4.002,461,5.208,462,4.605,463,4.605,464,4.605,465,4.605,466,4.605,467,4.002,468,4.605,469,4.605,470,4.605]],["title/classes/CreateReviewDto.html",[129,1.129,471,2.656]],["body/classes/CreateReviewDto.html",[3,0.188,4,0.208,5,0.132,18,0.399,19,1.299,20,1.073,28,1.412,30,0.013,38,0.598,49,0.683,52,3.241,61,3.84,65,0.011,66,0.011,99,1.951,130,1.412,137,2.527,140,2.995,265,3.2,328,3.417,415,4.104,435,3.757,445,3.2,471,3.2,472,4.171,473,3.757,474,6.589,475,5.904,476,6.155,477,4.8,478,4.8,479,3.757,480,4.8,481,3.447]],["title/classes/CreateUserDto.html",[122,2.656,129,1.129]],["body/classes/CreateUserDto.html",[3,0.222,4,0.182,5,0.115,7,2.179,18,0.35,19,1.191,28,1.875,30,0.013,38,0.561,49,1.04,65,0.01,66,0.01,99,2.02,102,1.384,122,2.805,130,1.238,132,5.1,133,5.1,134,4.986,135,5.536,136,3.656,137,3.739,138,3.022,139,3.656,140,2.625,141,3.764,142,3.656,143,3.656,144,3.656,145,3.022,146,3.656,147,3.656,148,3.522,225,4.418,482,3.656,483,3.293,484,4.207,485,4.207,486,4.207,487,3.293,488,4.207,489,4.207]],["title/modules/DatabaseModule.html",[67,2.097,78,2.656]],["body/modules/DatabaseModule.html",[3,0.207,4,0.228,5,0.144,30,0.013,65,0.011,66,0.011,69,2.404,70,2.978,78,5.177,81,3.27,82,2.64,83,2.517,157,3.095,158,4.125,490,4.58,491,4.58,492,4.58,493,5.346,494,5.27]],["title/injectables/DatabaseService.html",[204,1.473,493,2.656]],["body/injectables/DatabaseService.html",[3,0.216,4,0.238,5,0.151,18,0.457,20,0.958,30,0.013,38,0.484,65,0.012,66,0.012,90,1.9,101,1.559,102,1.118,104,1.502,205,2.033,211,1.955,411,5.403,493,3.665,495,4.777,496,7.227,497,5.497]],["title/classes/EntityRepository.html",[129,1.129,283,2.211]],["body/classes/EntityRepository.html",[3,0.117,4,0.129,5,0.081,18,0.247,19,0.932,20,1.21,28,0.874,29,1.297,30,0.014,33,1.419,38,0.624,49,0.829,65,0.008,66,0.008,90,1.251,91,2.91,94,2.489,101,1.968,102,1.411,104,1.846,112,2.976,130,0.874,187,1.632,208,1.926,211,1.057,228,2.108,261,1.845,283,1.649,284,2.754,285,2.754,286,2.754,287,2.754,288,2.754,289,2.108,291,2.754,293,1.854,294,2.754,295,1.854,296,3.384,297,1.854,298,4.33,299,3.636,300,1.854,301,1.854,302,4.071,303,3.636,304,1.854,305,2.754,306,1.854,307,2.754,308,2.754,309,1.854,310,1.745,311,1.854,498,2.582,499,2.971,500,2.971]],["title/injectables/GoogleAuthGuard.html",[204,1.473,501,3.118]],["body/injectables/GoogleAuthGuard.html",[3,0.24,4,0.265,5,0.168,30,0.012,65,0.012,66,0.012,205,2.265,501,4.792,502,5.321]],["title/injectables/GoogleStrategy.html",[153,2.656,204,1.473]],["body/injectables/GoogleStrategy.html",[3,0.195,4,0.215,5,0.136,18,0.413,20,1.096,30,0.013,38,0.554,49,1.032,65,0.011,66,0.011,90,1.783,91,2.42,94,2.07,101,1.783,102,1.278,104,1.356,153,3.309,205,1.836,211,1.765,214,3.831,218,5.679,296,2.486,394,4.921,503,4.313,504,4.313,505,4.963,506,6.288,507,4.963]],["title/interfaces/IProcessFile.html",[0,1.995,508,2.861]],["body/interfaces/IProcessFile.html",[2,2.224,3,0.166,4,0.183,5,0.195,18,0.352,19,1.195,20,1.325,28,1.666,29,2.47,30,0.013,38,0.644,49,1.012,65,0.01,66,0.01,102,1.151,508,3.034,509,2.636,510,2.636,511,6.384,512,6.384,513,6.384,514,6.384,515,5.548,516,4.431,517,3.671,518,5.661,519,4.225,520,3.671,521,3.671,522,4.997,523,3.306,524,4.919,525,4.431,526,4.225,527,3.671,528,4.225,529,3.306]],["title/interfaces/IResizeImageArgs.html",[0,1.995,530,2.861]],["body/interfaces/IResizeImageArgs.html",[2,2.665,3,0.199,4,0.219,5,0.139,18,0.421,19,1.344,20,1.11,30,0.014,38,0.613,49,1.04,52,3.848,65,0.011,66,0.011,509,3.158,510,3.158,530,3.635,531,6.965,532,6.965,533,6.052,534,6.366]],["title/injectables/JwtAuthGuard.html",[204,1.473,535,3.118]],["body/injectables/JwtAuthGuard.html",[3,0.24,4,0.265,5,0.168,30,0.012,65,0.012,66,0.012,205,2.265,535,4.792,536,5.321]],["title/injectables/JwtStrategy.html",[154,2.656,204,1.473]],["body/injectables/JwtStrategy.html",[3,0.205,4,0.226,5,0.143,18,0.434,20,1.131,30,0.013,38,0.571,65,0.011,66,0.011,90,1.839,91,2.497,94,2.136,101,1.839,102,1.319,104,1.426,120,2.896,154,3.478,205,1.929,211,1.855,214,3.919,394,5.078,504,4.533,537,4.533,538,5.217,539,5.217]],["title/classes/ProcessFile.html",[129,1.129,540,3.118]],["body/classes/ProcessFile.html",[3,0.139,4,0.153,5,0.159,7,1.21,18,0.294,19,1.057,20,1.014,28,1.041,29,1.544,30,0.013,38,0.641,49,0.712,59,4.176,65,0.009,66,0.009,90,1.42,91,2.668,94,2.198,101,1.649,102,1.182,104,1.589,130,1.041,208,3.346,211,1.258,261,3.139,265,2.358,296,2.913,310,2.941,508,3.597,509,2.207,510,2.207,515,4.352,516,2.768,521,4.352,522,3.92,524,3.074,525,2.768,530,3.597,533,3.074,540,2.768,541,5.009,542,5.009,543,5.009,544,5.009,545,5.815,546,3.537,547,3.537,548,3.537,549,3.537,550,3.537,551,3.537,552,3.537,553,3.074,554,3.537,555,5.009]],["title/controllers/ReviewController.html",[86,2.339,556,2.861]],["body/controllers/ReviewController.html",[3,0.109,4,0.12,5,0.076,18,0.23,20,1.108,30,0.014,38,0.56,49,1.114,65,0.007,66,0.007,88,1.209,90,1.187,99,2.093,101,1.802,102,1.292,104,1.804,110,1.728,112,3.557,113,4.118,115,4.118,169,1.158,187,1.549,229,2.097,240,4.238,241,3.366,289,2,313,3.366,316,1.847,471,3.752,556,1.989,557,2.168,558,3.639,559,3.639,560,3.639,561,2.407,562,5.251,563,2.77,564,2.77,565,6.6,566,6.6,567,2.77,568,4.89,569,2.77,570,2.77,571,2.407,572,2.77,573,2.77,574,2.407,575,5.523,576,2.77,577,2.77,578,2.407,579,4.188,580,4.188,581,2.77,582,2.407,583,3.752,584,2.77]],["title/classes/ReviewEntity.html",[129,1.129,585,3.118]],["body/classes/ReviewEntity.html",[3,0.158,4,0.174,5,0.11,18,0.335,19,1.156,28,1.612,30,0.014,33,1.922,38,0.685,49,0.886,52,2.885,65,0.01,66,0.01,99,2.341,130,1.184,141,3.653,222,2.891,256,2.016,257,2.234,261,2.291,262,3.418,264,4.812,266,4.171,267,3.653,268,3.957,269,2.683,272,2.683,275,2.511,276,2.511,474,4.761,475,4.761,479,3.15,585,3.15,586,2.891,587,5.479,588,5.479,589,4.025,590,3.497]],["title/modules/ReviewModule.html",[67,2.097,79,2.656]],["body/modules/ReviewModule.html",[3,0.207,4,0.228,5,0.144,30,0.013,65,0.011,66,0.011,69,2.404,70,2.978,79,5.248,81,3.27,82,2.64,83,2.517,88,2.3,157,3.095,556,3.785,591,4.58,592,4.58,593,4.626,594,4.943,595,5.27]],["title/injectables/ReviewRepository.html",[204,1.473,593,2.485]],["body/injectables/ReviewRepository.html",[3,0.116,4,0.128,5,0.081,18,0.246,19,0.928,20,1.208,28,0.869,29,1.289,30,0.014,33,1.411,38,0.623,49,0.827,65,0.008,66,0.008,90,1.246,91,2.906,94,2.486,101,1.964,102,1.408,104,1.843,112,2.97,187,1.625,205,1.093,208,1.918,211,1.05,228,2.099,256,1.48,261,1.837,283,1.64,284,2.742,285,2.742,286,2.742,287,2.742,288,2.742,289,2.099,291,2.742,293,1.843,294,2.742,295,1.843,296,3.378,297,1.843,298,4.323,299,3.626,300,1.843,301,1.843,302,4.062,303,3.626,304,1.843,305,2.742,306,1.843,307,2.742,308,2.742,309,1.843,310,1.735,311,1.843,593,1.843,596,2.567,597,2.954,598,2.954]],["title/injectables/ReviewService.html",[204,1.473,594,2.656]],["body/injectables/ReviewService.html",[3,0.126,4,0.139,5,0.088,18,0.267,20,1.208,30,0.014,38,0.61,49,1.134,65,0.008,66,0.008,90,1.326,91,2.95,94,1.54,101,1.964,102,1.408,104,1.893,120,3.845,169,1.344,187,1.73,205,1.189,211,1.143,216,4.064,229,2.342,289,2.233,313,3.675,316,2.143,350,3.554,471,3.118,558,4.064,559,4.064,560,4.064,561,2.793,562,5.589,568,5.26,571,2.793,574,2.793,575,5.832,578,2.793,582,2.793,583,4.035,593,3.439,594,2.143,599,2.793,600,3.214]],["title/guards/RolesGuard.html",[601,3.118,602,3.118]],["body/guards/RolesGuard.html",[3,0.207,4,0.228,5,0.144,18,0.439,20,1.138,30,0.013,38,0.575,65,0.011,66,0.011,90,1.851,101,1.851,102,1.327,104,1.44,211,1.874,602,4.125,603,5.27,604,4.58,605,6.529,606,5.27,607,7.094,608,5.27,609,6.529,610,5.27,611,5.27]],["title/interfaces/RuntimeSetismConfig.html",[0,1.995,400,2.861]],["body/interfaces/RuntimeSetismConfig.html",[0,2.382,1,4.51,2,2.504,3,0.187,4,0.206,5,0.13,6,2.64,7,1.627,10,4.132,11,4.132,17,3.722,18,0.396,19,1.291,21,4.132,23,4.132,24,4.132,30,0.013,37,3.722,38,0.596,57,2.967,61,4.719,64,5.317,65,0.011,66,0.011,159,4.51,399,5.878,400,3.415,410,4.132,411,3.415,612,4.132,613,6.765,614,4.755,615,4.755,616,4.132,617,4.755,618,4.755,619,4.755]],["title/interfaces/SuperadminCredentials.html",[0,1.995,166,2.861]],["body/interfaces/SuperadminCredentials.html",[2,2.895,3,0.216,4,0.238,5,0.151,6,3.051,18,0.457,19,1.414,28,1.617,29,2.399,30,0.013,38,0.484,49,0.953,57,3.43,65,0.012,66,0.012,133,5.403,166,3.948,187,2.033,188,5.822,620,5.497]],["title/interfaces/SwaggerOptions.html",[0,1.995,621,3.118]],["body/interfaces/SwaggerOptions.html",[2,2.588,3,0.27,4,0.213,5,0.135,6,2.728,7,2.473,18,0.409,19,1.319,20,1.33,30,0.013,38,0.605,49,1.085,62,4.581,63,4.891,65,0.011,66,0.011,437,6.283,621,3.847,622,7.23,623,4.915]],["title/classes/UpdateAuthorDto.html",[129,1.129,252,2.656]],["body/classes/UpdateAuthorDto.html",[3,0.239,4,0.264,5,0.167,30,0.012,65,0.012,66,0.012,130,1.791,252,4.058,414,4.764,624,5.289]],["title/classes/UpdateBookDto.html",[129,1.129,329,2.656]],["body/classes/UpdateBookDto.html",[3,0.15,4,0.165,5,0.166,18,0.317,19,1.114,20,1.329,30,0.014,38,0.653,49,0.861,52,3.189,59,4.929,61,4.282,65,0.009,66,0.009,99,2.176,130,1.122,137,2.008,169,1.595,268,2.008,328,3.81,329,2.543,333,4.589,336,4.695,337,4.589,338,4.589,339,4.589,415,4.576,416,2.985,420,2.74,429,2.543,431,3.315,445,2.543,481,3.792,553,3.315,625,3.315,626,4.74,627,3.814,628,6.056,629,2.985,630,5.281,631,5.281,632,3.814,633,3.814]],["title/classes/UpdateCategoryDto.html",[129,1.129,371,2.656]],["body/classes/UpdateCategoryDto.html",[3,0.239,4,0.264,5,0.167,30,0.012,65,0.012,66,0.012,130,1.791,371,4.058,448,4.764,634,5.289]],["title/classes/UpdateReviewDto.html",[129,1.129,583,2.656]],["body/classes/UpdateReviewDto.html",[3,0.239,4,0.264,5,0.167,30,0.012,65,0.012,66,0.012,130,1.791,473,4.764,583,4.058,635,5.289]],["title/classes/UpdateUserDto.html",[129,1.129,636,2.656]],["body/classes/UpdateUserDto.html",[3,0.15,4,0.166,5,0.105,7,2.351,18,0.319,19,1.117,20,1.33,30,0.014,38,0.605,49,1.036,52,2.016,61,4.288,65,0.009,66,0.009,99,2.179,130,1.127,134,5.379,137,3.195,138,2.75,141,4.046,148,3.303,258,4.046,259,4.702,328,2.125,375,2.997,416,4.144,418,2.997,442,4.75,483,2.997,487,2.997,636,2.553,637,3.327,638,5.689,639,5.294,640,5.972,641,3.829,642,3.829,643,2.75,644,3.829,645,3.327,646,3.829,647,3.829]],["title/classes/UploadBookDto.html",[129,1.129,323,2.656]],["body/classes/UploadBookDto.html",[3,0.217,4,0.239,5,0.199,18,0.46,19,1.419,20,1.314,30,0.013,38,0.592,65,0.012,66,0.012,130,1.626,232,5.261,323,3.685,429,3.685,629,5.261,648,4.803]],["title/controllers/UserController.html",[86,2.339,649,2.861]],["body/controllers/UserController.html",[3,0.132,4,0.146,5,0.092,7,1.934,18,0.514,20,1.078,30,0.014,38,0.618,49,1.069,65,0.008,66,0.008,88,1.467,90,1.37,99,2.076,101,1.752,102,1.256,104,1.789,110,2.098,112,3.429,113,4.084,115,2.098,124,2.242,125,2.242,126,2.242,127,2.242,141,3.77,169,2.936,228,2.307,229,2.42,230,2.682,239,2.415,240,4.121,241,4.121,242,4.439,243,4.061,246,2.415,248,1.866,251,1.866,458,3.856,636,4.121,649,2.415,650,2.922,651,4.198,652,2.922,653,3.363,654,3.363,655,3.363,656,3.363,657,3.363,658,3.363]],["title/classes/UserEntity.html",[129,1.129,659,3.118]],["body/classes/UserEntity.html",[3,0.102,4,0.113,5,0.071,18,0.217,19,0.844,28,1.731,30,0.014,38,0.661,49,1.049,65,0.007,66,0.007,94,2.624,99,2.379,130,0.767,132,2.872,133,2.872,221,2.666,222,1.873,225,3.13,245,1.738,256,1.306,257,1.447,258,2.666,259,2.872,261,1.672,262,2.495,263,3.918,264,4.139,266,4.032,267,4.446,268,3.98,269,1.738,272,1.738,273,1.627,275,1.627,276,1.627,418,2.041,442,3.807,458,1.627,590,2.266,638,3.475,640,3.475,645,3.475,659,2.041,660,1.873,661,3.999,662,3.999,663,3.999,664,3.999,665,3.999,666,3.999,667,4.865,668,5.883,669,2.607,670,3.999,671,2.607]],["title/modules/UserModule.html",[67,2.097,80,2.656]],["body/modules/UserModule.html",[3,0.207,4,0.228,5,0.144,30,0.013,65,0.011,66,0.011,69,2.404,70,2.978,80,5.248,81,3.27,82,2.64,83,2.517,88,2.3,155,4.115,157,3.095,649,3.785,672,4.58,673,4.58,674,4.943,675,5.27]],["title/injectables/UserRepository.html",[155,2.211,204,1.473]],["body/injectables/UserRepository.html",[3,0.116,4,0.128,5,0.081,18,0.246,19,0.928,20,1.208,28,0.869,29,1.289,30,0.014,33,1.411,38,0.623,49,0.827,65,0.008,66,0.008,90,1.246,91,2.906,94,2.486,101,1.964,102,1.408,104,1.843,112,2.97,155,1.64,187,1.625,205,1.093,208,1.918,211,1.05,228,2.099,256,1.48,261,1.837,283,1.64,284,2.742,285,2.742,286,2.742,287,2.742,288,2.742,289,2.099,291,2.742,293,1.843,294,2.742,295,1.843,296,3.378,297,1.843,298,4.323,299,3.626,300,1.843,301,1.843,302,4.062,303,3.626,304,1.843,305,2.742,306,1.843,307,2.742,308,2.742,309,1.843,310,1.735,311,1.843,676,2.567,677,2.954,678,2.954]],["title/injectables/UserService.html",[204,1.473,674,2.656]],["body/injectables/UserService.html",[3,0.149,4,0.164,5,0.104,18,0.542,20,1.193,30,0.013,38,0.603,49,1.053,65,0.009,66,0.009,90,1.49,91,2.931,94,2.507,101,1.941,102,1.391,104,1.87,120,3.799,155,3.348,169,2.724,205,1.4,211,1.346,212,3.29,229,2.631,230,2.916,248,2.102,251,2.102,458,4.065,636,4.344,651,4.565,652,3.29,674,2.524,679,3.29,680,5.253,681,3.786]],["title/contributing.html",[682,2.388,683,2.388,684,2.602]],["body/contributing.html",[7,1.438,30,0.01,31,2.42,42,2.18,45,2.42,47,2.18,48,2.18,57,1.738,65,0.007,66,0.007,98,2.18,148,1.738,187,1.555,228,1.33,359,2.42,445,1.857,481,2,529,2.18,612,2.42,626,3.291,643,4.351,682,3.02,683,3.02,684,2.18,685,4.402,686,3.654,687,5.746,688,4.205,689,2.785,690,4.205,691,2.785,692,2.785,693,2.785,694,2.785,695,2.785,696,2.785,697,3.654,698,3.654,699,4.205,700,2.42,701,2.42,702,2.785,703,2.785,704,3.654,705,3.654,706,2.785,707,2.42,708,2.42,709,2.785,710,2.42,711,2.785,712,2.785,713,2.42,714,2.785,715,5.066,716,4.205,717,2.785,718,2.785,719,2.785,720,3.965,721,2.785,722,2.785,723,2.42,724,5.066,725,3.654,726,2.785,727,2.785,728,2.785,729,2.785,730,5.643,731,2.785,732,5.746,733,2.785,734,2.42,735,2.785,736,2.785,737,2.42,738,4.205,739,5.264,740,2.785,741,3.654,742,2.785,743,2.785,744,2.42,745,2.42,746,2.785,747,5.643,748,4.205,749,2.785,750,2.785,751,4.205,752,2.785,753,2.42,754,2.785,755,2.785,756,2.785,757,2.785,758,2.785,759,3.654,760,2.785,761,2.42,762,2.785,763,2.785,764,2.785,765,2.785,766,2.785,767,4.205,768,4.205,769,2.785,770,4.205,771,2.785,772,2.785,773,2.785,774,4.205,775,2.785,776,2.785,777,2.785,778,4.205,779,2.785,780,2.42,781,2.785,782,2.785,783,2.785,784,4.205,785,4.904,786,2.785,787,4.205,788,3.654,789,2.42,790,2.785,791,2.785,792,2.785,793,4.205,794,2.785,795,2.785,796,2.785,797,2.785,798,2.785,799,2.42,800,2.785,801,2.785]],["title/coverage.html",[802,4.727]],["body/coverage.html",[0,2.786,1,1.071,5,0.044,6,2.763,30,0.014,33,3.847,38,0.141,62,1.071,65,0.005,66,0.005,86,2.923,87,1.154,89,1.396,109,1.071,122,1.071,129,2.031,131,1.396,152,1.071,153,1.071,154,1.071,155,0.892,159,1.071,166,1.154,204,2.496,206,1.396,214,0.892,226,1.154,227,2.118,233,1.071,252,1.071,254,1.258,255,1.944,257,0.892,271,1.071,279,1.003,280,1.071,282,1.396,283,0.892,312,1.396,319,1.396,320,1.154,321,1.396,323,1.071,324,1.071,329,1.071,330,1.944,350,0.944,351,1.071,353,1.396,356,1.396,363,1.154,364,2.118,366,1.071,371,1.071,372,1.154,373,1.944,378,1.003,379,1.071,381,1.396,384,1.396,391,1.396,400,1.154,407,1.258,413,1.396,414,2.118,428,2.745,429,3.062,447,1.396,448,2.118,458,1.003,459,1.396,460,1.396,471,1.071,472,1.396,473,2.118,479,2.745,482,1.396,483,2.118,493,1.071,495,1.396,498,1.396,501,1.258,502,1.396,503,1.396,508,1.154,509,2.567,510,2.567,530,1.154,535,1.258,536,1.396,537,1.396,540,1.258,556,1.154,557,2.118,583,1.071,585,1.258,586,1.944,593,1.003,594,1.071,596,1.396,599,1.396,601,1.258,602,1.258,604,1.396,621,1.258,624,1.396,625,1.396,634,1.396,635,1.396,636,1.071,637,1.396,643,1.154,648,1.396,649,1.154,650,1.396,659,1.258,660,1.944,674,1.071,676,1.396,679,1.396,799,1.396,802,1.396,803,1.607,804,1.607,805,4.593,806,3.507,807,2.352,808,6.548,809,1.396,810,7.351,811,1.396,812,5.296,813,3.507,814,5.296,815,3.047,816,4.593,817,1.396,818,5.296,819,1.396,820,1.396,821,1.607,822,1.396,823,1.396,824,2.707,825,1.607,826,1.607,827,1.607,828,1.607,829,1.607,830,1.607,831,1.607,832,2.118,833,5.296,834,1.258,835,2.352,836,1.396,837,1.607,838,1.396,839,1.396,840,1.607,841,1.396,842,3.576,843,3.576,844,1.396,845,1.396,846,1.396,847,1.396,848,1.396,849,1.396,850,1.607,851,1.607,852,1.607,853,1.607]],["title/dependencies.html",[70,2.186,707,2.889]],["body/dependencies.html",[26,3.253,30,0.014,43,4.382,65,0.01,66,0.01,70,1.896,129,1.587,170,3.611,178,3.611,520,3.611,854,4.156,855,6.775,856,4.156,857,4.156,858,4.156,859,4.156,860,4.156,861,5.599,862,4.156,863,4.156,864,4.156,865,4.156,866,4.156,867,4.156,868,4.156,869,4.156,870,4.156,871,4.156,872,4.156,873,4.156,874,4.156,875,4.156,876,4.156,877,4.156,878,3.611,879,4.156,880,4.156,881,4.156,882,6.332,883,4.156,884,4.156,885,4.156,886,4.156,887,4.156,888,4.156,889,4.156,890,4.156,891,4.156,892,4.156,893,4.156,894,4.156,895,4.156,896,4.156,897,4.156,898,4.156]],["title/miscellaneous/enumerations.html",[899,1.845,900,4.164]],["body/miscellaneous/enumerations.html",[6,2.425,18,0.364,29,3.485,30,0.014,33,2.086,47,4.531,48,4.531,65,0.01,66,0.01,94,1.439,145,3.138,201,5.031,208,1.907,221,4.609,244,3.86,273,2.726,334,3.419,345,3.419,487,3.419,899,2.425,900,3.797,901,4.369,902,5.031,903,3.797,904,5.031,905,5.031,906,5.789,907,5.789,908,3.797,909,5.642,910,3.797,911,4.369,912,4.369,913,5.789,914,4.369,915,3.797]],["title/miscellaneous/functions.html",[899,1.845,916,4.164]],["body/miscellaneous/functions.html",[5,0.19,7,2.208,18,0.27,20,1.174,30,0.013,38,0.593,49,1.061,59,5.11,65,0.008,66,0.008,101,1.909,102,1.446,104,1.84,265,2.164,266,2.938,268,1.709,296,3.045,328,3.375,522,5.053,523,4.337,527,2.82,734,4.092,761,2.82,832,2.54,834,4.337,838,2.82,839,4.092,842,2.82,843,5.61,844,4.092,845,4.092,846,4.092,847,4.092,848,2.82,849,4.092,899,1.801,916,2.82,917,2.82,918,3.245,919,6.08,920,3.245,921,3.245,922,4.709,923,3.245,924,3.245,925,6.08,926,3.245,927,3.245,928,3.245,929,3.245,930,3.245,931,3.245,932,3.245,933,3.245,934,2.82,935,3.245,936,3.245]],["title/index.html",[18,0.277,682,2.388,683,2.388]],["body/index.html",[3,0.135,5,0.059,13,1.677,17,1.677,26,1.677,30,0.013,39,1.862,42,3.834,44,4.257,56,1.862,57,1.337,62,1.429,63,1.677,65,0.006,66,0.006,94,0.705,98,1.677,160,1.862,175,1.862,179,2.98,208,0.935,218,2.684,260,3.849,327,2.463,328,2.974,336,1.539,392,1.862,420,2.463,445,1.429,481,2.463,523,1.677,529,1.677,626,2.684,643,1.539,684,3.355,685,1.862,686,1.862,687,1.862,697,4.257,698,3.725,700,1.862,701,1.862,704,3.725,705,1.862,710,1.862,713,1.862,720,1.677,723,3.725,725,2.98,732,3.725,737,2.98,739,1.862,741,1.862,744,1.862,745,1.862,753,1.862,759,2.98,780,2.98,785,1.862,788,3.725,789,1.862,878,1.862,934,1.862,937,4.286,938,2.143,939,2.143,940,3.429,941,4.899,942,3.355,943,3.429,944,2.143,945,2.143,946,2.143,947,2.143,948,2.143,949,2.143,950,2.143,951,2.143,952,2.143,953,2.143,954,2.143,955,2.143,956,2.143,957,3.429,958,2.98,959,3.429,960,2.143,961,2.143,962,2.143,963,4.657,964,2.143,965,2.143,966,2.143,967,2.143,968,2.143,969,1.862,970,6.002,971,2.143,972,3.429,973,2.143,974,2.143,975,2.143,976,2.143,977,2.143,978,4.286,979,3.429,980,2.143,981,2.143,982,4.286,983,2.143,984,2.143,985,2.143,986,2.143,987,2.143,988,2.143,989,2.143,990,2.143,991,2.143,992,2.143,993,3.429,994,4.899,995,2.143,996,2.143,997,2.143,998,2.143,999,2.143,1000,2.143,1001,1.862,1002,2.143,1003,2.143,1004,2.98,1005,1.862,1006,2.143,1007,2.143,1008,2.143,1009,2.143,1010,2.143,1011,2.143,1012,2.143,1013,3.429,1014,2.143,1015,2.143,1016,1.862,1017,2.143,1018,2.143,1019,2.143,1020,2.143,1021,2.143,1022,2.143,1023,2.143,1024,2.143,1025,2.143,1026,2.143,1027,2.143,1028,2.143,1029,2.143,1030,2.143,1031,2.143,1032,2.143,1033,2.143,1034,2.143,1035,2.143,1036,2.143,1037,2.143,1038,2.143,1039,2.143,1040,2.143,1041,2.143,1042,2.143,1043,2.143,1044,2.143,1045,2.143,1046,3.429,1047,2.143,1048,3.429,1049,2.143,1050,2.143,1051,2.143,1052,3.429,1053,2.143,1054,2.143,1055,2.143,1056,2.143,1057,2.143,1058,2.143,1059,2.143,1060,2.143,1061,2.143,1062,2.143,1063,3.429,1064,2.143,1065,2.143,1066,2.143,1067,2.143,1068,2.143,1069,2.143,1070,2.143,1071,2.143,1072,2.143,1073,2.143,1074,2.143,1075,2.143,1076,2.143,1077,2.143,1078,2.143,1079,2.143,1080,2.143,1081,2.143,1082,1.862,1083,2.143,1084,2.143,1085,2.143,1086,2.143,1087,2.143,1088,2.143,1089,2.143,1090,2.143,1091,2.143,1092,2.98,1093,2.143,1094,2.143,1095,2.143,1096,2.143,1097,2.143,1098,2.143,1099,2.143]],["title/license.html",[682,2.388,683,2.388,942,2.602]],["body/license.html",[30,0.01,43,3.163,62,2.694,65,0.01,66,0.01,83,1.93,327,2.902,341,3.163,387,3.511,411,2.902,461,3.511,616,4.774,708,3.511,720,4.3,942,3.163,958,3.511,969,3.511,1082,3.511,1092,3.511,1100,6.241,1101,4.041,1102,5.493,1103,4.041,1104,4.041,1105,4.041,1106,4.041,1107,4.041,1108,5.493,1109,7.626,1110,4.041,1111,4.041,1112,5.424,1113,4.041,1114,4.041,1115,4.041,1116,4.041,1117,4.041,1118,4.041,1119,4.041,1120,4.041,1121,4.041,1122,4.041,1123,5.493,1124,4.041,1125,4.041,1126,4.041,1127,4.041,1128,4.041,1129,4.041,1130,5.493,1131,5.493,1132,4.041,1133,4.041,1134,4.041,1135,4.041,1136,4.041,1137,4.041,1138,4.041,1139,4.041,1140,4.041,1141,4.041,1142,4.041,1143,4.041,1144,4.041,1145,4.041,1146,4.041,1147,3.511,1148,4.041,1149,4.041,1150,4.041,1151,4.041,1152,4.041,1153,4.041,1154,4.041,1155,4.041,1156,4.041]],["title/modules.html",[69,2.481]],["body/modules.html",[30,0.011,65,0.011,66,0.011,68,3.547,69,2.253,73,3.293,74,3.293,75,3.293,76,3.293,77,3.293,78,3.293,79,3.293,80,3.293,1005,6.889,1157,7.928,1158,7.928,1159,7.928]],["title/overview.html",[1160,4.727]],["body/overview.html",[2,1.512,30,0.014,65,0.007,66,0.007,68,5.548,69,1.31,70,1.962,71,2.495,72,2.495,73,4.906,74,4.454,75,4.454,76,4.454,77,3.82,78,4.296,79,4.454,80,4.454,81,2.155,82,1.438,83,1.371,88,1.253,130,0.845,145,2.062,149,2.495,150,2.495,151,2.495,152,4.454,153,3.44,154,3.44,155,3.181,205,1.062,214,3.181,277,2.495,278,2.495,279,3.219,280,3.44,348,2.495,349,2.495,350,3.029,351,3.44,376,2.495,377,2.495,378,3.219,379,3.44,388,2.495,389,2.495,490,2.495,491,2.495,492,2.495,493,4.454,591,2.495,592,2.495,593,3.219,594,3.44,601,2.247,672,2.495,673,2.495,674,3.44,909,2.495,1160,2.495,1161,2.871,1162,2.871,1163,2.871,1164,2.871]],["title/miscellaneous/typealiases.html",[899,1.845,1165,4.792]],["body/miscellaneous/typealiases.html",[5,0.122,18,0.371,30,0.013,38,0.393,65,0.01,66,0.01,221,3.915,222,5.007,255,3.206,258,2.977,330,3.206,373,3.206,467,5.103,509,2.785,510,4.349,516,4.596,517,3.879,525,4.596,586,3.206,629,3.494,660,3.206,899,2.478,902,3.879,903,3.879,904,5.103,905,5.103,908,3.879,910,3.879,915,3.879,1016,3.879,1166,4.464,1167,5.872,1168,3.879,1169,5.872,1170,3.879,1171,5.872,1172,3.879,1173,5.702,1174,5.872,1175,3.879,1176,6.562,1177,5.872,1178,3.879,1179,4.464,1180,4.464]],["title/miscellaneous/variables.html",[899,1.845,1181,4.164]],["body/miscellaneous/variables.html",[13,2.388,18,0.254,28,2.235,29,3.314,30,0.014,38,0.616,49,0.995,65,0.009,66,0.008,221,2.034,227,2.388,255,2.191,330,2.191,331,2.191,336,2.191,341,2.388,364,2.388,373,2.191,428,2.388,429,3.566,509,1.904,510,2.808,557,2.388,586,2.191,660,2.191,807,2.651,809,3.911,811,3.911,815,5.725,817,3.911,819,3.911,820,3.911,822,3.911,823,3.911,832,2.388,834,2.388,835,5.13,836,3.911,841,3.911,899,1.694,917,2.651,963,2.651,1001,2.651,1004,2.651,1112,2.651,1147,2.651,1168,2.651,1170,2.651,1172,2.651,1173,2.651,1175,2.651,1178,2.651,1181,2.651,1182,4.501,1183,3.051,1184,3.051,1185,3.051,1186,4.501,1187,3.051,1188,3.051,1189,5.348,1190,3.051,1191,3.051,1192,3.051,1193,3.051,1194,3.051,1195,3.051,1196,3.051,1197,3.051,1198,3.051,1199,3.051,1200,3.051,1201,3.051,1202,3.051,1203,3.051,1204,3.051,1205,3.051,1206,3.051,1207,3.051,1208,3.051,1209,3.051,1210,3.051,1211,3.051,1212,3.051,1213,3.051,1214,4.501,1215,3.051,1216,3.051]]],"invertedIndex":[["",{"_index":30,"title":{},"body":{"interfaces/ApiOptions.html":{},"modules/AppModule.html":{},"controllers/AuthController.html":{},"classes/AuthDto.html":{},"modules/AuthModule.html":{},"interfaces/AuthOptions.html":{},"injectables/AuthService.html":{},"controllers/AuthorController.html":{},"classes/AuthorEntity.html":{},"modules/AuthorModule.html":{},"injectables/AuthorRepository.html":{},"injectables/AuthorService.html":{},"classes/BaseEntitySchema.html":{},"controllers/BookController.html":{},"classes/BookEntity.html":{},"modules/BookModule.html":{},"injectables/BookRepository.html":{},"injectables/BookService.html":{},"controllers/CategoryController.html":{},"classes/CategoryEntity.html":{},"modules/CategoryModule.html":{},"injectables/CategoryRepository.html":{},"injectables/CategoryService.html":{},"modules/ConfigModule.html":{},"classes/ConfigService.html":{},"interfaces/ConnectionOptions.html":{},"classes/CreateAuthorDto.html":{},"classes/CreateBookDto.html":{},"classes/CreateCategoryDto.html":{},"classes/CreateReadingListDto.html":{},"classes/CreateReviewDto.html":{},"classes/CreateUserDto.html":{},"modules/DatabaseModule.html":{},"injectables/DatabaseService.html":{},"classes/EntityRepository.html":{},"injectables/GoogleAuthGuard.html":{},"injectables/GoogleStrategy.html":{},"interfaces/IProcessFile.html":{},"interfaces/IResizeImageArgs.html":{},"injectables/JwtAuthGuard.html":{},"injectables/JwtStrategy.html":{},"classes/ProcessFile.html":{},"controllers/ReviewController.html":{},"classes/ReviewEntity.html":{},"modules/ReviewModule.html":{},"injectables/ReviewRepository.html":{},"injectables/ReviewService.html":{},"guards/RolesGuard.html":{},"interfaces/RuntimeSetismConfig.html":{},"interfaces/SuperadminCredentials.html":{},"interfaces/SwaggerOptions.html":{},"classes/UpdateAuthorDto.html":{},"classes/UpdateBookDto.html":{},"classes/UpdateCategoryDto.html":{},"classes/UpdateReviewDto.html":{},"classes/UpdateUserDto.html":{},"classes/UploadBookDto.html":{},"controllers/UserController.html":{},"classes/UserEntity.html":{},"modules/UserModule.html":{},"injectables/UserRepository.html":{},"injectables/UserService.html":{},"contributing.html":{},"coverage.html":{},"dependencies.html":{},"miscellaneous/enumerations.html":{},"miscellaneous/functions.html":{},"index.html":{},"license.html":{},"modules.html":{},"overview.html":{},"miscellaneous/typealiases.html":{},"miscellaneous/variables.html":{}}}],["0",{"_index":33,"title":{},"body":{"interfaces/ApiOptions.html":{},"injectables/AuthorRepository.html":{},"classes/BookEntity.html":{},"injectables/BookRepository.html":{},"injectables/CategoryRepository.html":{},"classes/EntityRepository.html":{},"classes/ReviewEntity.html":{},"injectables/ReviewRepository.html":{},"injectables/UserRepository.html":{},"coverage.html":{},"miscellaneous/enumerations.html":{}}}],["0.1.13",{"_index":889,"title":{},"body":{"dependencies.html":{}}}],["0.13.1",{"_index":871,"title":{},"body":{"dependencies.html":{}}}],["0.28.2",{"_index":867,"title":{},"body":{"dependencies.html":{}}}],["0.29.1",{"_index":895,"title":{},"body":{"dependencies.html":{}}}],["0.4.0",{"_index":869,"title":{},"body":{"dependencies.html":{}}}],["0.4.1",{"_index":883,"title":{},"body":{"dependencies.html":{}}}],["0/1",{"_index":810,"title":{},"body":{"coverage.html":{}}}],["0/10",{"_index":818,"title":{},"body":{"coverage.html":{}}}],["0/14",{"_index":821,"title":{},"body":{"coverage.html":{}}}],["0/17",{"_index":840,"title":{},"body":{"coverage.html":{}}}],["0/2",{"_index":831,"title":{},"body":{"coverage.html":{}}}],["0/3",{"_index":812,"title":{},"body":{"coverage.html":{}}}],["0/4",{"_index":813,"title":{},"body":{"coverage.html":{}}}],["0/5",{"_index":805,"title":{},"body":{"coverage.html":{}}}],["0/6",{"_index":814,"title":{},"body":{"coverage.html":{}}}],["0/7",{"_index":806,"title":{},"body":{"coverage.html":{}}}],["0/8",{"_index":816,"title":{},"body":{"coverage.html":{}}}],["0/9",{"_index":837,"title":{},"body":{"coverage.html":{}}}],["0})@isoptional()@ispositive({message",{"_index":480,"title":{},"body":{"classes/CreateReviewDto.html":{}}}],["1",{"_index":909,"title":{},"body":{"miscellaneous/enumerations.html":{},"overview.html":{}}}],["1.0.1",{"_index":857,"title":{},"body":{"dependencies.html":{}}}],["1.11.0",{"_index":873,"title":{},"body":{"dependencies.html":{}}}],["1.4.3",{"_index":881,"title":{},"body":{"dependencies.html":{}}}],["1/2",{"_index":828,"title":{},"body":{"coverage.html":{}}}],["100",{"_index":479,"title":{},"body":{"classes/CreateReviewDto.html":{},"classes/ReviewEntity.html":{},"coverage.html":{}}}],["1024",{"_index":466,"title":{},"body":{"classes/CreateReadingListDto.html":{}}}],["10h",{"_index":203,"title":{},"body":{"interfaces/AuthOptions.html":{}}}],["12",{"_index":418,"title":{},"body":{"classes/CreateAuthorDto.html":{},"classes/UpdateUserDto.html":{},"classes/UserEntity.html":{}}}],["13",{"_index":344,"title":{},"body":{"classes/BookEntity.html":{}}}],["13''})@isdefined({message",{"_index":438,"title":{},"body":{"classes/CreateBookDto.html":{}}}],["1519211809934})@isnumberstring",{"_index":444,"title":{},"body":{"classes/CreateBookDto.html":{}}}],["16",{"_index":1162,"title":{},"body":{"overview.html":{}}}],["2",{"_index":201,"title":{},"body":{"interfaces/AuthOptions.html":{},"miscellaneous/enumerations.html":{}}}],["2.0.0",{"_index":885,"title":{},"body":{"dependencies.html":{}}}],["2/3",{"_index":826,"title":{},"body":{"coverage.html":{}}}],["20",{"_index":375,"title":{},"body":{"classes/CategoryEntity.html":{},"classes/CreateReadingListDto.html":{},"classes/UpdateUserDto.html":{}}}],["200",{"_index":35,"title":{},"body":{"interfaces/ApiOptions.html":{}}}],["2021",{"_index":1101,"title":{},"body":{"license.html":{}}}],["2048",{"_index":270,"title":{},"body":{"classes/AuthorEntity.html":{},"classes/CategoryEntity.html":{},"classes/CreateAuthorDto.html":{}}}],["22",{"_index":1163,"title":{},"body":{"overview.html":{}}}],["256",{"_index":346,"title":{},"body":{"classes/BookEntity.html":{},"classes/CategoryEntity.html":{},"classes/CreateBookDto.html":{},"classes/CreateCategoryDto.html":{}}}],["26",{"_index":489,"title":{},"body":{"classes/CreateUserDto.html":{}}}],["3",{"_index":273,"title":{},"body":{"classes/AuthorEntity.html":{},"classes/CategoryEntity.html":{},"classes/CreateCategoryDto.html":{},"classes/CreateReadingListDto.html":{},"classes/UserEntity.html":{},"miscellaneous/enumerations.html":{}}}],["3.0.2",{"_index":891,"title":{},"body":{"dependencies.html":{}}}],["3/4",{"_index":830,"title":{},"body":{"coverage.html":{}}}],["3000",{"_index":53,"title":{},"body":{"interfaces/ApiOptions.html":{}}}],["32",{"_index":147,"title":{},"body":{"classes/AuthDto.html":{},"classes/CreateUserDto.html":{}}}],["33",{"_index":977,"title":{},"body":{"index.html":{}}}],["4",{"_index":487,"title":{},"body":{"classes/CreateUserDto.html":{},"classes/UpdateUserDto.html":{},"miscellaneous/enumerations.html":{}}}],["4.0.0",{"_index":886,"title":{},"body":{"dependencies.html":{}}}],["4.1.6",{"_index":897,"title":{},"body":{"dependencies.html":{}}}],["4.6.0",{"_index":877,"title":{},"body":{"dependencies.html":{}}}],["4/4",{"_index":827,"title":{},"body":{"coverage.html":{}}}],["4000",{"_index":589,"title":{},"body":{"classes/ReviewEntity.html":{}}}],["4096",{"_index":342,"title":{},"body":{"classes/BookEntity.html":{},"classes/CreateBookDto.html":{},"classes/CreateCategoryDto.html":{}}}],["5",{"_index":345,"title":{},"body":{"classes/BookEntity.html":{},"classes/CreateBookDto.html":{},"miscellaneous/enumerations.html":{}}}],["5.0.9",{"_index":865,"title":{},"body":{"dependencies.html":{}}}],["5.13.8",{"_index":879,"title":{},"body":{"dependencies.html":{}}}],["5/6",{"_index":851,"title":{},"body":{"coverage.html":{}}}],["50",{"_index":799,"title":{},"body":{"contributing.html":{},"coverage.html":{}}}],["54",{"_index":274,"title":{},"body":{"classes/AuthorEntity.html":{},"classes/BookEntity.html":{},"classes/CreateBookDto.html":{},"classes/CreateCategoryDto.html":{},"classes/CreateReadingListDto.html":{}}}],["55",{"_index":981,"title":{},"body":{"index.html":{}}}],["6",{"_index":145,"title":{},"body":{"classes/AuthDto.html":{},"classes/CreateUserDto.html":{},"miscellaneous/enumerations.html":{},"overview.html":{}}}],["6.0.2",{"_index":875,"title":{},"body":{"dependencies.html":{}}}],["60",{"_index":200,"title":{},"body":{"interfaces/AuthOptions.html":{}}}],["66",{"_index":825,"title":{},"body":{"coverage.html":{}}}],["7.2.0",{"_index":893,"title":{},"body":{"dependencies.html":{}}}],["7/7",{"_index":824,"title":{},"body":{"coverage.html":{}}}],["70",{"_index":984,"title":{},"body":{"index.html":{}}}],["75",{"_index":829,"title":{},"body":{"coverage.html":{}}}],["7d",{"_index":189,"title":{},"body":{"interfaces/AuthOptions.html":{}}}],["8",{"_index":1164,"title":{},"body":{"overview.html":{}}}],["8.0.0",{"_index":855,"title":{},"body":{"dependencies.html":{}}}],["8.0.1",{"_index":861,"title":{},"body":{"dependencies.html":{}}}],["8.3.2",{"_index":898,"title":{},"body":{"dependencies.html":{}}}],["83",{"_index":850,"title":{},"body":{"coverage.html":{}}}],["9",{"_index":1161,"title":{},"body":{"overview.html":{}}}],["9780062574350})@isisbn(13",{"_index":436,"title":{},"body":{"classes/CreateBookDto.html":{}}}],["__v",{"_index":311,"title":{},"body":{"injectables/AuthorRepository.html":{},"injectables/BookRepository.html":{},"injectables/CategoryRepository.html":{},"classes/EntityRepository.html":{},"injectables/ReviewRepository.html":{},"injectables/UserRepository.html":{}}}],["_accesstoken",{"_index":507,"title":{},"body":{"injectables/GoogleStrategy.html":{}}}],["_id",{"_index":262,"title":{},"body":{"classes/AuthorEntity.html":{},"classes/BaseEntitySchema.html":{},"classes/BookEntity.html":{},"classes/CategoryEntity.html":{},"classes/ReviewEntity.html":{},"classes/UserEntity.html":{}}}],["_refreshtoken",{"_index":506,"title":{},"body":{"injectables/GoogleStrategy.html":{}}}],["_req",{"_index":103,"title":{},"body":{"controllers/AuthController.html":{}}}],["ability",{"_index":1192,"title":{},"body":{"miscellaneous/variables.html":{}}}],["above",{"_index":1129,"title":{},"body":{"license.html":{}}}],["absolute",{"_index":925,"title":{},"body":{"miscellaneous/functions.html":{}}}],["acceptable",{"_index":719,"title":{},"body":{"contributing.html":{}}}],["access",{"_index":179,"title":{},"body":{"interfaces/AuthOptions.html":{},"index.html":{}}}],["accessible",{"_index":973,"title":{},"body":{"index.html":{}}}],["accessors",{"_index":395,"title":{},"body":{"classes/ConfigService.html":{}}}],["according",{"_index":1057,"title":{},"body":{"index.html":{}}}],["account",{"_index":620,"title":{},"body":{"interfaces/SuperadminCredentials.html":{}}}],["acknowledgements",{"_index":943,"title":{},"body":{"index.html":{}}}],["acquired",{"_index":1205,"title":{},"body":{"miscellaneous/variables.html":{}}}],["action",{"_index":1151,"title":{},"body":{"license.html":{}}}],["action.'})@apiforbiddenresponse({description",{"_index":118,"title":{},"body":{"controllers/AuthController.html":{}}}],["add",{"_index":792,"title":{},"body":{"contributing.html":{}}}],["added",{"_index":644,"title":{},"body":{"classes/UpdateUserDto.html":{}}}],["address",{"_index":135,"title":{},"body":{"classes/AuthDto.html":{},"classes/CreateUserDto.html":{}}}],["admin",{"_index":912,"title":{},"body":{"miscellaneous/enumerations.html":{}}}],["agree",{"_index":717,"title":{},"body":{"contributing.html":{}}}],["aliases",{"_index":1166,"title":{},"body":{"miscellaneous/typealiases.html":{}}}],["allowing",{"_index":14,"title":{},"body":{"interfaces/ApiOptions.html":{}}}],["allows",{"_index":1021,"title":{},"body":{"index.html":{}}}],["along",{"_index":972,"title":{},"body":{"index.html":{}}}],["amazing",{"_index":690,"title":{},"body":{"contributing.html":{}}}],["and/or",{"_index":1121,"title":{},"body":{"license.html":{}}}],["andrei",{"_index":1087,"title":{},"body":{"index.html":{}}}],["anyone",{"_index":974,"title":{},"body":{"index.html":{}}}],["anytime",{"_index":938,"title":{},"body":{"index.html":{}}}],["anywhere",{"_index":939,"title":{},"body":{"index.html":{}}}],["api",{"_index":3,"title":{},"body":{"interfaces/ApiOptions.html":{},"modules/AppModule.html":{},"controllers/AuthController.html":{},"classes/AuthDto.html":{},"modules/AuthModule.html":{},"interfaces/AuthOptions.html":{},"injectables/AuthService.html":{},"controllers/AuthorController.html":{},"classes/AuthorEntity.html":{},"modules/AuthorModule.html":{},"injectables/AuthorRepository.html":{},"injectables/AuthorService.html":{},"classes/BaseEntitySchema.html":{},"controllers/BookController.html":{},"classes/BookEntity.html":{},"modules/BookModule.html":{},"injectables/BookRepository.html":{},"injectables/BookService.html":{},"controllers/CategoryController.html":{},"classes/CategoryEntity.html":{},"modules/CategoryModule.html":{},"injectables/CategoryRepository.html":{},"injectables/CategoryService.html":{},"modules/ConfigModule.html":{},"classes/ConfigService.html":{},"interfaces/ConnectionOptions.html":{},"classes/CreateAuthorDto.html":{},"classes/CreateBookDto.html":{},"classes/CreateCategoryDto.html":{},"classes/CreateReadingListDto.html":{},"classes/CreateReviewDto.html":{},"classes/CreateUserDto.html":{},"modules/DatabaseModule.html":{},"injectables/DatabaseService.html":{},"classes/EntityRepository.html":{},"injectables/GoogleAuthGuard.html":{},"injectables/GoogleStrategy.html":{},"interfaces/IProcessFile.html":{},"interfaces/IResizeImageArgs.html":{},"injectables/JwtAuthGuard.html":{},"injectables/JwtStrategy.html":{},"classes/ProcessFile.html":{},"controllers/ReviewController.html":{},"classes/ReviewEntity.html":{},"modules/ReviewModule.html":{},"injectables/ReviewRepository.html":{},"injectables/ReviewService.html":{},"guards/RolesGuard.html":{},"interfaces/RuntimeSetismConfig.html":{},"interfaces/SuperadminCredentials.html":{},"interfaces/SwaggerOptions.html":{},"classes/UpdateAuthorDto.html":{},"classes/UpdateBookDto.html":{},"classes/UpdateCategoryDto.html":{},"classes/UpdateReviewDto.html":{},"classes/UpdateUserDto.html":{},"classes/UploadBookDto.html":{},"controllers/UserController.html":{},"classes/UserEntity.html":{},"modules/UserModule.html":{},"injectables/UserRepository.html":{},"injectables/UserService.html":{},"index.html":{}}}],["apibody({type",{"_index":110,"title":{},"body":{"controllers/AuthController.html":{},"controllers/AuthorController.html":{},"controllers/BookController.html":{},"controllers/CategoryController.html":{},"controllers/ReviewController.html":{},"controllers/UserController.html":{}}}],["apiokresponse({description",{"_index":240,"title":{},"body":{"controllers/AuthorController.html":{},"controllers/BookController.html":{},"controllers/CategoryController.html":{},"controllers/ReviewController.html":{},"controllers/UserController.html":{}}}],["apioptions",{"_index":1,"title":{"interfaces/ApiOptions.html":{}},"body":{"interfaces/ApiOptions.html":{},"classes/ConfigService.html":{},"interfaces/RuntimeSetismConfig.html":{},"coverage.html":{}}}],["apiproperty({description",{"_index":415,"title":{},"body":{"classes/CreateAuthorDto.html":{},"classes/CreateBookDto.html":{},"classes/CreateCategoryDto.html":{},"classes/CreateReviewDto.html":{},"classes/UpdateBookDto.html":{}}}],["apiproperty({type",{"_index":134,"title":{},"body":{"classes/AuthDto.html":{},"classes/CreateUserDto.html":{},"classes/UpdateUserDto.html":{}}}],["apis",{"_index":11,"title":{},"body":{"interfaces/ApiOptions.html":{},"interfaces/RuntimeSetismConfig.html":{}}}],["app",{"_index":761,"title":{},"body":{"contributing.html":{},"miscellaneous/functions.html":{}}}],["application",{"_index":172,"title":{},"body":{"interfaces/AuthOptions.html":{}}}],["appmodule",{"_index":68,"title":{"modules/AppModule.html":{}},"body":{"modules/AppModule.html":{},"modules.html":{},"overview.html":{}}}],["appreciated",{"_index":1068,"title":{},"body":{"index.html":{}}}],["argon2",{"_index":866,"title":{},"body":{"dependencies.html":{}}}],["args",{"_index":547,"title":{},"body":{"classes/ProcessFile.html":{}}}],["arising",{"_index":1155,"title":{},"body":{"license.html":{}}}],["articulate",{"_index":999,"title":{},"body":{"index.html":{}}}],["arturo",{"_index":1089,"title":{},"body":{"index.html":{}}}],["assets",{"_index":1044,"title":{},"body":{"index.html":{}}}],["associated",{"_index":1110,"title":{},"body":{"license.html":{}}}],["async",{"_index":91,"title":{},"body":{"controllers/AuthController.html":{},"injectables/AuthService.html":{},"injectables/AuthorRepository.html":{},"injectables/AuthorService.html":{},"injectables/BookRepository.html":{},"injectables/BookService.html":{},"injectables/CategoryRepository.html":{},"injectables/CategoryService.html":{},"classes/EntityRepository.html":{},"injectables/GoogleStrategy.html":{},"injectables/JwtStrategy.html":{},"classes/ProcessFile.html":{},"injectables/ReviewRepository.html":{},"injectables/ReviewService.html":{},"injectables/UserRepository.html":{},"injectables/UserService.html":{}}}],["authcontroller",{"_index":87,"title":{"controllers/AuthController.html":{}},"body":{"controllers/AuthController.html":{},"modules/AuthModule.html":{},"coverage.html":{}}}],["authdto",{"_index":109,"title":{"classes/AuthDto.html":{}},"body":{"controllers/AuthController.html":{},"classes/AuthDto.html":{},"injectables/AuthService.html":{},"coverage.html":{}}}],["authdto})@apiokresponse({description",{"_index":111,"title":{},"body":{"controllers/AuthController.html":{}}}],["authentication",{"_index":160,"title":{},"body":{"interfaces/AuthOptions.html":{},"index.html":{}}}],["authmodule",{"_index":73,"title":{"modules/AuthModule.html":{}},"body":{"modules/AppModule.html":{},"modules/AuthModule.html":{},"modules.html":{},"overview.html":{}}}],["authoptions",{"_index":159,"title":{"interfaces/AuthOptions.html":{}},"body":{"interfaces/AuthOptions.html":{},"classes/ConfigService.html":{},"interfaces/RuntimeSetismConfig.html":{},"coverage.html":{}}}],["author",{"_index":244,"title":{},"body":{"controllers/AuthorController.html":{},"classes/BookEntity.html":{},"classes/CreateAuthorDto.html":{},"classes/CreateBookDto.html":{},"miscellaneous/enumerations.html":{}}}],["author's",{"_index":421,"title":{},"body":{"classes/CreateAuthorDto.html":{}}}],["author.dto.ts",{"_index":414,"title":{},"body":{"classes/CreateAuthorDto.html":{},"classes/UpdateAuthorDto.html":{},"coverage.html":{}}}],["authorcontroller",{"_index":226,"title":{"controllers/AuthorController.html":{}},"body":{"controllers/AuthorController.html":{},"modules/AuthorModule.html":{},"coverage.html":{}}}],["authordocument",{"_index":1167,"title":{},"body":{"miscellaneous/typealiases.html":{}}}],["authorentity",{"_index":254,"title":{"classes/AuthorEntity.html":{}},"body":{"classes/AuthorEntity.html":{},"coverage.html":{}}}],["authorentityschema",{"_index":817,"title":{},"body":{"coverage.html":{},"miscellaneous/variables.html":{}}}],["authorization",{"_index":37,"title":{},"body":{"interfaces/ApiOptions.html":{},"interfaces/AuthOptions.html":{},"interfaces/RuntimeSetismConfig.html":{}}}],["authormodel",{"_index":292,"title":{},"body":{"injectables/AuthorRepository.html":{}}}],["authormodule",{"_index":74,"title":{"modules/AuthorModule.html":{}},"body":{"modules/AppModule.html":{},"modules/AuthorModule.html":{},"modules.html":{},"overview.html":{}}}],["authorname",{"_index":318,"title":{},"body":{"injectables/AuthorService.html":{}}}],["authorrepository",{"_index":279,"title":{"injectables/AuthorRepository.html":{}},"body":{"modules/AuthorModule.html":{},"injectables/AuthorRepository.html":{},"injectables/AuthorService.html":{},"coverage.html":{},"overview.html":{}}}],["authors",{"_index":341,"title":{},"body":{"classes/BookEntity.html":{},"license.html":{},"miscellaneous/variables.html":{}}}],["authorservice",{"_index":280,"title":{"injectables/AuthorService.html":{}},"body":{"modules/AuthorModule.html":{},"injectables/AuthorService.html":{},"coverage.html":{},"overview.html":{}}}],["authservice",{"_index":152,"title":{"injectables/AuthService.html":{}},"body":{"modules/AuthModule.html":{},"injectables/AuthService.html":{},"coverage.html":{},"overview.html":{}}}],["automatically",{"_index":1055,"title":{},"body":{"index.html":{}}}],["available",{"_index":50,"title":{},"body":{"interfaces/ApiOptions.html":{}}}],["avatar",{"_index":258,"title":{},"body":{"classes/AuthorEntity.html":{},"classes/CreateAuthorDto.html":{},"classes/UpdateUserDto.html":{},"classes/UserEntity.html":{},"miscellaneous/typealiases.html":{}}}],["avoiding",{"_index":1199,"title":{},"body":{"miscellaneous/variables.html":{}}}],["b",{"_index":359,"title":{},"body":{"injectables/BookService.html":{},"contributing.html":{}}}],["back",{"_index":1036,"title":{},"body":{"index.html":{}}}],["backend",{"_index":948,"title":{},"body":{"index.html":{}}}],["base",{"_index":56,"title":{},"body":{"interfaces/ApiOptions.html":{},"index.html":{}}}],["baseentityschema",{"_index":257,"title":{"classes/BaseEntitySchema.html":{}},"body":{"classes/AuthorEntity.html":{},"classes/BaseEntitySchema.html":{},"classes/BookEntity.html":{},"classes/CategoryEntity.html":{},"classes/ReviewEntity.html":{},"classes/UserEntity.html":{},"coverage.html":{}}}],["baseprojection",{"_index":284,"title":{},"body":{"injectables/AuthorRepository.html":{},"injectables/BookRepository.html":{},"injectables/CategoryRepository.html":{},"classes/EntityRepository.html":{},"injectables/ReviewRepository.html":{},"injectables/UserRepository.html":{}}}],["being",{"_index":700,"title":{},"body":{"contributing.html":{},"index.html":{}}}],["believe",{"_index":985,"title":{},"body":{"index.html":{}}}],["belongs",{"_index":456,"title":{},"body":{"classes/CreateCategoryDto.html":{}}}],["biography",{"_index":259,"title":{},"body":{"classes/AuthorEntity.html":{},"classes/CreateAuthorDto.html":{},"classes/UpdateUserDto.html":{},"classes/UserEntity.html":{}}}],["birthday",{"_index":638,"title":{},"body":{"classes/UpdateUserDto.html":{},"classes/UserEntity.html":{}}}],["book",{"_index":328,"title":{},"body":{"controllers/BookController.html":{},"classes/CreateAuthorDto.html":{},"classes/CreateBookDto.html":{},"classes/CreateReviewDto.html":{},"classes/UpdateBookDto.html":{},"classes/UpdateUserDto.html":{},"miscellaneous/functions.html":{},"index.html":{}}}],["book.dto.ts",{"_index":429,"title":{},"body":{"classes/CreateBookDto.html":{},"classes/UpdateBookDto.html":{},"classes/UploadBookDto.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["book_description",{"_index":819,"title":{},"body":{"coverage.html":{},"miscellaneous/variables.html":{}}}],["book_description})@isstring({message",{"_index":432,"title":{},"body":{"classes/CreateBookDto.html":{}}}],["book_name",{"_index":820,"title":{},"body":{"coverage.html":{},"miscellaneous/variables.html":{}}}],["book_name})@isstring({message",{"_index":439,"title":{},"body":{"classes/CreateBookDto.html":{}}}],["bookcontroller",{"_index":320,"title":{"controllers/BookController.html":{}},"body":{"controllers/BookController.html":{},"modules/BookModule.html":{},"coverage.html":{}}}],["bookdocument",{"_index":1169,"title":{},"body":{"miscellaneous/typealiases.html":{}}}],["bookentity",{"_index":271,"title":{"classes/BookEntity.html":{}},"body":{"classes/AuthorEntity.html":{},"classes/BookEntity.html":{},"classes/CreateAuthorDto.html":{},"coverage.html":{}}}],["bookentityschema",{"_index":822,"title":{},"body":{"coverage.html":{},"miscellaneous/variables.html":{}}}],["bookid",{"_index":562,"title":{},"body":{"controllers/ReviewController.html":{},"injectables/ReviewService.html":{}}}],["bookmodel",{"_index":355,"title":{},"body":{"injectables/BookRepository.html":{}}}],["bookmodule",{"_index":75,"title":{"modules/BookModule.html":{}},"body":{"modules/AppModule.html":{},"modules/BookModule.html":{},"modules.html":{},"overview.html":{}}}],["bookname",{"_index":361,"title":{},"body":{"injectables/BookService.html":{}}}],["bookrepository",{"_index":350,"title":{"injectables/BookRepository.html":{}},"body":{"modules/BookModule.html":{},"injectables/BookRepository.html":{},"injectables/BookService.html":{},"injectables/ReviewService.html":{},"coverage.html":{},"overview.html":{}}}],["books",{"_index":260,"title":{},"body":{"classes/AuthorEntity.html":{},"classes/CreateAuthorDto.html":{},"classes/CreateReadingListDto.html":{},"index.html":{}}}],["bookservice",{"_index":351,"title":{"injectables/BookService.html":{}},"body":{"modules/BookModule.html":{},"injectables/BookService.html":{},"coverage.html":{},"overview.html":{}}}],["boolean",{"_index":611,"title":{},"body":{"guards/RolesGuard.html":{}}}],["bootstrap",{"_index":834,"title":{},"body":{"coverage.html":{},"miscellaneous/functions.html":{},"miscellaneous/variables.html":{}}}],["borwser",{"_index":1008,"title":{},"body":{"index.html":{}}}],["both",{"_index":58,"title":{},"body":{"interfaces/ApiOptions.html":{}}}],["brain",{"_index":990,"title":{},"body":{"index.html":{}}}],["branch",{"_index":784,"title":{},"body":{"contributing.html":{}}}],["branching",{"_index":783,"title":{},"body":{"contributing.html":{}}}],["browse",{"_index":1159,"title":{},"body":{"modules.html":{}}}],["browser",{"_index":1005,"title":{},"body":{"index.html":{},"modules.html":{}}}],["buffer",{"_index":522,"title":{},"body":{"interfaces/IProcessFile.html":{},"classes/ProcessFile.html":{},"miscellaneous/functions.html":{}}}],["bug",{"_index":730,"title":{},"body":{"contributing.html":{}}}],["bugs",{"_index":1073,"title":{},"body":{"index.html":{}}}],["build",{"_index":966,"title":{},"body":{"index.html":{}}}],["built",{"_index":1031,"title":{},"body":{"index.html":{}}}],["c",{"_index":387,"title":{},"body":{"injectables/CategoryService.html":{},"license.html":{}}}],["canactivate",{"_index":605,"title":{},"body":{"guards/RolesGuard.html":{}}}],["canactivate(context",{"_index":608,"title":{},"body":{"guards/RolesGuard.html":{}}}],["careers",{"_index":987,"title":{},"body":{"index.html":{}}}],["categories",{"_index":331,"title":{},"body":{"classes/BookEntity.html":{},"classes/CategoryEntity.html":{},"classes/CreateBookDto.html":{},"miscellaneous/variables.html":{}}}],["category",{"_index":370,"title":{},"body":{"controllers/CategoryController.html":{},"classes/CreateBookDto.html":{},"classes/CreateCategoryDto.html":{}}}],["category.dto.ts",{"_index":448,"title":{},"body":{"classes/CreateCategoryDto.html":{},"classes/UpdateCategoryDto.html":{},"coverage.html":{}}}],["categorycontroller",{"_index":363,"title":{"controllers/CategoryController.html":{}},"body":{"controllers/CategoryController.html":{},"modules/CategoryModule.html":{},"coverage.html":{}}}],["categorydocument",{"_index":1171,"title":{},"body":{"miscellaneous/typealiases.html":{}}}],["categoryentity",{"_index":372,"title":{"classes/CategoryEntity.html":{}},"body":{"classes/CategoryEntity.html":{},"classes/CreateCategoryDto.html":{},"coverage.html":{}}}],["categoryentityschema",{"_index":823,"title":{},"body":{"coverage.html":{},"miscellaneous/variables.html":{}}}],["categorymodel",{"_index":383,"title":{},"body":{"injectables/CategoryRepository.html":{}}}],["categorymodule",{"_index":76,"title":{"modules/CategoryModule.html":{}},"body":{"modules/AppModule.html":{},"modules/CategoryModule.html":{},"modules.html":{},"overview.html":{}}}],["categoryrepository",{"_index":378,"title":{"injectables/CategoryRepository.html":{}},"body":{"modules/CategoryModule.html":{},"injectables/CategoryRepository.html":{},"injectables/CategoryService.html":{},"coverage.html":{},"overview.html":{}}}],["categoryservice",{"_index":379,"title":{"injectables/CategoryService.html":{}},"body":{"modules/CategoryModule.html":{},"injectables/CategoryService.html":{},"coverage.html":{},"overview.html":{}}}],["changes",{"_index":789,"title":{},"body":{"contributing.html":{},"index.html":{}}}],["characters",{"_index":148,"title":{},"body":{"classes/AuthDto.html":{},"classes/CreateAuthorDto.html":{},"classes/CreateReadingListDto.html":{},"classes/CreateUserDto.html":{},"classes/UpdateUserDto.html":{},"contributing.html":{}}}],["characters!'})@isdefined({message",{"_index":435,"title":{},"body":{"classes/CreateBookDto.html":{},"classes/CreateCategoryDto.html":{},"classes/CreateReviewDto.html":{}}}],["characters!'})@maxlength(14",{"_index":647,"title":{},"body":{"classes/UpdateUserDto.html":{}}}],["characters!'})@maxlength(2048",{"_index":419,"title":{},"body":{"classes/CreateAuthorDto.html":{},"classes/CreateCategoryDto.html":{}}}],["characters!'})@maxlength(256",{"_index":441,"title":{},"body":{"classes/CreateBookDto.html":{},"classes/CreateCategoryDto.html":{}}}],["characters!'})@maxlength(26",{"_index":488,"title":{},"body":{"classes/CreateUserDto.html":{}}}],["characters!'})@maxlength(32",{"_index":146,"title":{},"body":{"classes/AuthDto.html":{},"classes/CreateUserDto.html":{}}}],["characters!'})@maxlength(4096",{"_index":434,"title":{},"body":{"classes/CreateBookDto.html":{}}}],["characters'})@maxlength(1024",{"_index":465,"title":{},"body":{"classes/CreateReadingListDto.html":{}}}],["characters'})@maxlength(54",{"_index":470,"title":{},"body":{"classes/CreateReadingListDto.html":{}}}],["charge",{"_index":1105,"title":{},"body":{"license.html":{}}}],["checked",{"_index":1075,"title":{},"body":{"index.html":{}}}],["checkout",{"_index":786,"title":{},"body":{"contributing.html":{}}}],["chirila",{"_index":1088,"title":{},"body":{"index.html":{}}}],["claim",{"_index":1147,"title":{},"body":{"license.html":{},"miscellaneous/variables.html":{}}}],["class",{"_index":129,"title":{"classes/AuthDto.html":{},"classes/AuthorEntity.html":{},"classes/BaseEntitySchema.html":{},"classes/BookEntity.html":{},"classes/CategoryEntity.html":{},"classes/ConfigService.html":{},"classes/CreateAuthorDto.html":{},"classes/CreateBookDto.html":{},"classes/CreateCategoryDto.html":{},"classes/CreateReadingListDto.html":{},"classes/CreateReviewDto.html":{},"classes/CreateUserDto.html":{},"classes/EntityRepository.html":{},"classes/ProcessFile.html":{},"classes/ReviewEntity.html":{},"classes/UpdateAuthorDto.html":{},"classes/UpdateBookDto.html":{},"classes/UpdateCategoryDto.html":{},"classes/UpdateReviewDto.html":{},"classes/UpdateUserDto.html":{},"classes/UploadBookDto.html":{},"classes/UserEntity.html":{}},"body":{"coverage.html":{},"dependencies.html":{}}}],["classes",{"_index":130,"title":{},"body":{"classes/AuthDto.html":{},"classes/AuthorEntity.html":{},"classes/BaseEntitySchema.html":{},"classes/BookEntity.html":{},"classes/CategoryEntity.html":{},"classes/ConfigService.html":{},"classes/CreateAuthorDto.html":{},"classes/CreateBookDto.html":{},"classes/CreateCategoryDto.html":{},"classes/CreateReadingListDto.html":{},"classes/CreateReviewDto.html":{},"classes/CreateUserDto.html":{},"classes/EntityRepository.html":{},"classes/ProcessFile.html":{},"classes/ReviewEntity.html":{},"classes/UpdateAuthorDto.html":{},"classes/UpdateBookDto.html":{},"classes/UpdateCategoryDto.html":{},"classes/UpdateReviewDto.html":{},"classes/UpdateUserDto.html":{},"classes/UploadBookDto.html":{},"classes/UserEntity.html":{},"overview.html":{}}}],["click",{"_index":743,"title":{},"body":{"contributing.html":{}}}],["client",{"_index":168,"title":{},"body":{"interfaces/AuthOptions.html":{}}}],["clone",{"_index":776,"title":{},"body":{"contributing.html":{}}}],["cluster_appmodule",{"_index":71,"title":{},"body":{"modules/AppModule.html":{},"overview.html":{}}}],["cluster_appmodule_imports",{"_index":72,"title":{},"body":{"modules/AppModule.html":{},"overview.html":{}}}],["cluster_authmodule",{"_index":149,"title":{},"body":{"modules/AuthModule.html":{},"overview.html":{}}}],["cluster_authmodule_exports",{"_index":150,"title":{},"body":{"modules/AuthModule.html":{},"overview.html":{}}}],["cluster_authmodule_providers",{"_index":151,"title":{},"body":{"modules/AuthModule.html":{},"overview.html":{}}}],["cluster_authormodule",{"_index":277,"title":{},"body":{"modules/AuthorModule.html":{},"overview.html":{}}}],["cluster_authormodule_providers",{"_index":278,"title":{},"body":{"modules/AuthorModule.html":{},"overview.html":{}}}],["cluster_bookmodule",{"_index":348,"title":{},"body":{"modules/BookModule.html":{},"overview.html":{}}}],["cluster_bookmodule_providers",{"_index":349,"title":{},"body":{"modules/BookModule.html":{},"overview.html":{}}}],["cluster_categorymodule",{"_index":376,"title":{},"body":{"modules/CategoryModule.html":{},"overview.html":{}}}],["cluster_categorymodule_providers",{"_index":377,"title":{},"body":{"modules/CategoryModule.html":{},"overview.html":{}}}],["cluster_configmodule",{"_index":388,"title":{},"body":{"modules/ConfigModule.html":{},"overview.html":{}}}],["cluster_configmodule_exports",{"_index":389,"title":{},"body":{"modules/ConfigModule.html":{},"overview.html":{}}}],["cluster_databasemodule",{"_index":490,"title":{},"body":{"modules/DatabaseModule.html":{},"overview.html":{}}}],["cluster_databasemodule_exports",{"_index":491,"title":{},"body":{"modules/DatabaseModule.html":{},"overview.html":{}}}],["cluster_databasemodule_providers",{"_index":492,"title":{},"body":{"modules/DatabaseModule.html":{},"overview.html":{}}}],["cluster_reviewmodule",{"_index":591,"title":{},"body":{"modules/ReviewModule.html":{},"overview.html":{}}}],["cluster_reviewmodule_providers",{"_index":592,"title":{},"body":{"modules/ReviewModule.html":{},"overview.html":{}}}],["cluster_usermodule",{"_index":672,"title":{},"body":{"modules/UserModule.html":{},"overview.html":{}}}],["cluster_usermodule_providers",{"_index":673,"title":{},"body":{"modules/UserModule.html":{},"overview.html":{}}}],["code",{"_index":697,"title":{},"body":{"contributing.html":{},"index.html":{}}}],["codebase",{"_index":701,"title":{},"body":{"contributing.html":{},"index.html":{}}}],["comment",{"_index":474,"title":{},"body":{"classes/CreateReviewDto.html":{},"classes/ReviewEntity.html":{}}}],["commit",{"_index":788,"title":{},"body":{"contributing.html":{},"index.html":{}}}],["commitlint",{"_index":1062,"title":{},"body":{"index.html":{}}}],["common",{"_index":1058,"title":{},"body":{"index.html":{}}}],["community",{"_index":688,"title":{},"body":{"contributing.html":{}}}],["compodoc",{"_index":1046,"title":{},"body":{"index.html":{}}}],["conditions",{"_index":1128,"title":{},"body":{"license.html":{}}}],["config",{"_index":392,"title":{},"body":{"classes/ConfigService.html":{},"index.html":{}}}],["configmodule",{"_index":77,"title":{"modules/ConfigModule.html":{}},"body":{"modules/AppModule.html":{},"modules/ConfigModule.html":{},"modules.html":{},"overview.html":{}}}],["configservice",{"_index":214,"title":{"classes/ConfigService.html":{}},"body":{"injectables/AuthService.html":{},"modules/ConfigModule.html":{},"classes/ConfigService.html":{},"injectables/GoogleStrategy.html":{},"injectables/JwtStrategy.html":{},"coverage.html":{},"overview.html":{}}}],["configuration",{"_index":613,"title":{},"body":{"interfaces/RuntimeSetismConfig.html":{}}}],["configures",{"_index":185,"title":{},"body":{"interfaces/AuthOptions.html":{}}}],["conflict.'})@apiforbiddenresponse({description",{"_index":127,"title":{},"body":{"controllers/AuthController.html":{},"controllers/AuthorController.html":{},"controllers/BookController.html":{},"controllers/CategoryController.html":{},"controllers/UserController.html":{}}}],["connect",{"_index":619,"title":{},"body":{"interfaces/RuntimeSetismConfig.html":{}}}],["connection",{"_index":411,"title":{},"body":{"interfaces/ConnectionOptions.html":{},"injectables/DatabaseService.html":{},"interfaces/RuntimeSetismConfig.html":{},"license.html":{}}}],["connectionoptions",{"_index":407,"title":{"interfaces/ConnectionOptions.html":{}},"body":{"interfaces/ConnectionOptions.html":{},"coverage.html":{}}}],["connectionuri",{"_index":408,"title":{},"body":{"interfaces/ConnectionOptions.html":{}}}],["consists",{"_index":1032,"title":{},"body":{"index.html":{}}}],["constructor",{"_index":211,"title":{},"body":{"injectables/AuthService.html":{},"injectables/AuthorRepository.html":{},"injectables/AuthorService.html":{},"injectables/BookRepository.html":{},"injectables/BookService.html":{},"injectables/CategoryRepository.html":{},"injectables/CategoryService.html":{},"classes/ConfigService.html":{},"injectables/DatabaseService.html":{},"classes/EntityRepository.html":{},"injectables/GoogleStrategy.html":{},"injectables/JwtStrategy.html":{},"classes/ProcessFile.html":{},"injectables/ReviewRepository.html":{},"injectables/ReviewService.html":{},"guards/RolesGuard.html":{},"injectables/UserRepository.html":{},"injectables/UserService.html":{}}}],["constructor(args",{"_index":546,"title":{},"body":{"classes/ProcessFile.html":{}}}],["constructor(authormodel",{"_index":290,"title":{},"body":{"injectables/AuthorRepository.html":{}}}],["constructor(authorrepository",{"_index":315,"title":{},"body":{"injectables/AuthorService.html":{}}}],["constructor(bookmodel",{"_index":354,"title":{},"body":{"injectables/BookRepository.html":{}}}],["constructor(bookrepository",{"_index":358,"title":{},"body":{"injectables/BookService.html":{}}}],["constructor(categorymodel",{"_index":382,"title":{},"body":{"injectables/CategoryRepository.html":{}}}],["constructor(categoryrepository",{"_index":385,"title":{},"body":{"injectables/CategoryService.html":{}}}],["constructor(configservice",{"_index":504,"title":{},"body":{"injectables/GoogleStrategy.html":{},"injectables/JwtStrategy.html":{}}}],["constructor(connection",{"_index":497,"title":{},"body":{"injectables/DatabaseService.html":{}}}],["constructor(entitymodal",{"_index":499,"title":{},"body":{"classes/EntityRepository.html":{}}}],["constructor(reflector",{"_index":606,"title":{},"body":{"guards/RolesGuard.html":{}}}],["constructor(reviewmodel",{"_index":597,"title":{},"body":{"injectables/ReviewRepository.html":{}}}],["constructor(reviewrepository",{"_index":600,"title":{},"body":{"injectables/ReviewService.html":{}}}],["constructor(usermodel",{"_index":677,"title":{},"body":{"injectables/UserRepository.html":{}}}],["constructor(userrepository",{"_index":212,"title":{},"body":{"injectables/AuthService.html":{},"injectables/UserService.html":{}}}],["containing",{"_index":931,"title":{},"body":{"miscellaneous/functions.html":{}}}],["content",{"_index":1007,"title":{},"body":{"index.html":{}}}],["context",{"_index":610,"title":{},"body":{"guards/RolesGuard.html":{}}}],["contract",{"_index":1152,"title":{},"body":{"license.html":{}}}],["contribute",{"_index":1080,"title":{},"body":{"index.html":{}}}],["contributing",{"_index":684,"title":{"contributing.html":{}},"body":{"contributing.html":{},"index.html":{}}}],["contributions",{"_index":685,"title":{},"body":{"contributing.html":{},"index.html":{}}}],["contributors",{"_index":941,"title":{},"body":{"index.html":{}}}],["controller",{"_index":86,"title":{"controllers/AuthController.html":{},"controllers/AuthorController.html":{},"controllers/BookController.html":{},"controllers/CategoryController.html":{},"controllers/ReviewController.html":{},"controllers/UserController.html":{}},"body":{"coverage.html":{}}}],["controller_name",{"_index":815,"title":{},"body":{"coverage.html":{},"miscellaneous/variables.html":{}}}],["controllers",{"_index":88,"title":{},"body":{"controllers/AuthController.html":{},"modules/AuthModule.html":{},"controllers/AuthorController.html":{},"modules/AuthorModule.html":{},"controllers/BookController.html":{},"modules/BookModule.html":{},"controllers/CategoryController.html":{},"modules/CategoryModule.html":{},"controllers/ReviewController.html":{},"modules/ReviewModule.html":{},"controllers/UserController.html":{},"modules/UserModule.html":{},"overview.html":{}}}],["conventional",{"_index":1063,"title":{},"body":{"index.html":{}}}],["copies",{"_index":1123,"title":{},"body":{"license.html":{}}}],["copy",{"_index":1108,"title":{},"body":{"license.html":{}}}],["copyright",{"_index":1100,"title":{},"body":{"license.html":{}}}],["cors",{"_index":21,"title":{},"body":{"interfaces/ApiOptions.html":{},"interfaces/RuntimeSetismConfig.html":{}}}],["corsoptions",{"_index":27,"title":{},"body":{"interfaces/ApiOptions.html":{}}}],["counthelpful",{"_index":587,"title":{},"body":{"classes/ReviewEntity.html":{}}}],["cover",{"_index":629,"title":{},"body":{"classes/UpdateBookDto.html":{},"classes/UploadBookDto.html":{},"miscellaneous/typealiases.html":{}}}],["coverage",{"_index":802,"title":{"coverage.html":{}},"body":{"coverage.html":{}}}],["covers",{"_index":1081,"title":{},"body":{"index.html":{}}}],["create",{"_index":187,"title":{},"body":{"interfaces/AuthOptions.html":{},"controllers/AuthorController.html":{},"injectables/AuthorRepository.html":{},"injectables/AuthorService.html":{},"controllers/BookController.html":{},"injectables/BookRepository.html":{},"injectables/BookService.html":{},"controllers/CategoryController.html":{},"injectables/CategoryRepository.html":{},"injectables/CategoryService.html":{},"classes/EntityRepository.html":{},"controllers/ReviewController.html":{},"injectables/ReviewRepository.html":{},"injectables/ReviewService.html":{},"interfaces/SuperadminCredentials.html":{},"injectables/UserRepository.html":{},"contributing.html":{}}}],["create(c",{"_index":386,"title":{},"body":{"injectables/CategoryService.html":{}}}],["create(createcategorydto",{"_index":365,"title":{},"body":{"controllers/CategoryController.html":{}}}],["create(createentitydata",{"_index":293,"title":{},"body":{"injectables/AuthorRepository.html":{},"injectables/BookRepository.html":{},"injectables/CategoryRepository.html":{},"classes/EntityRepository.html":{},"injectables/ReviewRepository.html":{},"injectables/UserRepository.html":{}}}],["create(file",{"_index":231,"title":{},"body":{"controllers/AuthorController.html":{},"injectables/AuthorService.html":{}}}],["create(files",{"_index":322,"title":{},"body":{"controllers/BookController.html":{},"injectables/BookService.html":{}}}],["create(userid",{"_index":561,"title":{},"body":{"controllers/ReviewController.html":{},"injectables/ReviewService.html":{}}}],["create.dto.ts",{"_index":460,"title":{},"body":{"classes/CreateReadingListDto.html":{},"coverage.html":{}}}],["createauthordto",{"_index":233,"title":{"classes/CreateAuthorDto.html":{}},"body":{"controllers/AuthorController.html":{},"injectables/AuthorService.html":{},"classes/CreateAuthorDto.html":{},"coverage.html":{}}}],["createauthordto})@apicreatedresponse({description",{"_index":234,"title":{},"body":{"controllers/AuthorController.html":{}}}],["createbookdto",{"_index":324,"title":{"classes/CreateBookDto.html":{}},"body":{"controllers/BookController.html":{},"injectables/BookService.html":{},"classes/CreateBookDto.html":{},"coverage.html":{}}}],["createbookdto})@apicreatedresponse({description",{"_index":325,"title":{},"body":{"controllers/BookController.html":{}}}],["createcategorydto",{"_index":366,"title":{"classes/CreateCategoryDto.html":{}},"body":{"controllers/CategoryController.html":{},"injectables/CategoryService.html":{},"classes/CreateCategoryDto.html":{},"coverage.html":{}}}],["createcategorydto})@apicreatedresponse({description",{"_index":367,"title":{},"body":{"controllers/CategoryController.html":{}}}],["created",{"_index":928,"title":{},"body":{"miscellaneous/functions.html":{}}}],["created.'})@apibadrequestresponse({description",{"_index":124,"title":{},"body":{"controllers/AuthController.html":{},"controllers/AuthorController.html":{},"controllers/BookController.html":{},"controllers/CategoryController.html":{},"controllers/UserController.html":{}}}],["created.'})@apinotfoundresponse({description",{"_index":564,"title":{},"body":{"controllers/ReviewController.html":{}}}],["createdocument",{"_index":839,"title":{},"body":{"coverage.html":{},"miscellaneous/functions.html":{}}}],["createdocument(app",{"_index":921,"title":{},"body":{"miscellaneous/functions.html":{}}}],["createentitydata",{"_index":295,"title":{},"body":{"injectables/AuthorRepository.html":{},"injectables/BookRepository.html":{},"injectables/CategoryRepository.html":{},"classes/EntityRepository.html":{},"injectables/ReviewRepository.html":{},"injectables/UserRepository.html":{}}}],["createlist",{"_index":651,"title":{},"body":{"controllers/UserController.html":{},"injectables/UserService.html":{}}}],["createlist(id",{"_index":652,"title":{},"body":{"controllers/UserController.html":{},"injectables/UserService.html":{}}}],["createreadinglistdto",{"_index":458,"title":{"classes/CreateReadingListDto.html":{}},"body":{"classes/CreateReadingListDto.html":{},"controllers/UserController.html":{},"classes/UserEntity.html":{},"injectables/UserService.html":{},"coverage.html":{}}}],["createreadinglistdto})@apicreatedresponse({description",{"_index":653,"title":{},"body":{"controllers/UserController.html":{}}}],["createreviewdto",{"_index":471,"title":{"classes/CreateReviewDto.html":{}},"body":{"classes/CreateReviewDto.html":{},"controllers/ReviewController.html":{},"injectables/ReviewService.html":{},"coverage.html":{}}}],["createreviewdto})@apiokresponse({description",{"_index":563,"title":{},"body":{"controllers/ReviewController.html":{}}}],["createuserdto",{"_index":122,"title":{"classes/CreateUserDto.html":{}},"body":{"controllers/AuthController.html":{},"injectables/AuthService.html":{},"classes/CreateUserDto.html":{},"coverage.html":{}}}],["createuserdto})@apicreatedresponse({description",{"_index":123,"title":{},"body":{"controllers/AuthController.html":{}}}],["creating",{"_index":1012,"title":{},"body":{"index.html":{}}}],["credentials",{"_index":186,"title":{},"body":{"interfaces/AuthOptions.html":{}}}],["critic",{"_index":914,"title":{},"body":{"miscellaneous/enumerations.html":{}}}],["critics",{"_index":1023,"title":{},"body":{"index.html":{}}}],["csurf",{"_index":872,"title":{},"body":{"dependencies.html":{}}}],["current",{"_index":623,"title":{},"body":{"interfaces/SwaggerOptions.html":{}}}],["currently",{"_index":763,"title":{},"body":{"contributing.html":{}}}],["custom",{"_index":518,"title":{},"body":{"interfaces/IProcessFile.html":{}}}],["customext",{"_index":511,"title":{},"body":{"interfaces/IProcessFile.html":{}}}],["customname",{"_index":512,"title":{},"body":{"interfaces/IProcessFile.html":{}}}],["customoptions",{"_index":531,"title":{},"body":{"interfaces/IResizeImageArgs.html":{}}}],["damages",{"_index":1148,"title":{},"body":{"license.html":{}}}],["dark/light",{"_index":1026,"title":{},"body":{"index.html":{}}}],["data",{"_index":523,"title":{},"body":{"interfaces/IProcessFile.html":{},"miscellaneous/functions.html":{},"index.html":{}}}],["database",{"_index":410,"title":{},"body":{"interfaces/ConnectionOptions.html":{},"interfaces/RuntimeSetismConfig.html":{}}}],["databasemodule",{"_index":78,"title":{"modules/DatabaseModule.html":{}},"body":{"modules/AppModule.html":{},"modules/DatabaseModule.html":{},"modules.html":{},"overview.html":{}}}],["databaseservice",{"_index":493,"title":{"injectables/DatabaseService.html":{}},"body":{"modules/DatabaseModule.html":{},"injectables/DatabaseService.html":{},"coverage.html":{},"overview.html":{}}}],["date",{"_index":442,"title":{},"body":{"classes/CreateBookDto.html":{},"classes/UpdateUserDto.html":{},"classes/UserEntity.html":{}}}],["days",{"_index":202,"title":{},"body":{"interfaces/AuthOptions.html":{}}}],["dboptions",{"_index":399,"title":{},"body":{"classes/ConfigService.html":{},"interfaces/RuntimeSetismConfig.html":{}}}],["deal",{"_index":1111,"title":{},"body":{"license.html":{}}}],["dealings",{"_index":1156,"title":{},"body":{"license.html":{}}}],["deals",{"_index":991,"title":{},"body":{"index.html":{}}}],["decoding",{"_index":176,"title":{},"body":{"interfaces/AuthOptions.html":{}}}],["decorators",{"_index":99,"title":{},"body":{"controllers/AuthController.html":{},"classes/AuthDto.html":{},"controllers/AuthorController.html":{},"classes/AuthorEntity.html":{},"classes/BaseEntitySchema.html":{},"controllers/BookController.html":{},"classes/BookEntity.html":{},"controllers/CategoryController.html":{},"classes/CategoryEntity.html":{},"classes/CreateAuthorDto.html":{},"classes/CreateBookDto.html":{},"classes/CreateCategoryDto.html":{},"classes/CreateReadingListDto.html":{},"classes/CreateReviewDto.html":{},"classes/CreateUserDto.html":{},"controllers/ReviewController.html":{},"classes/ReviewEntity.html":{},"classes/UpdateBookDto.html":{},"classes/UpdateUserDto.html":{},"controllers/UserController.html":{},"classes/UserEntity.html":{}}}],["default",{"_index":28,"title":{},"body":{"interfaces/ApiOptions.html":{},"classes/AuthDto.html":{},"interfaces/AuthOptions.html":{},"classes/AuthorEntity.html":{},"injectables/AuthorRepository.html":{},"classes/BookEntity.html":{},"injectables/BookRepository.html":{},"classes/CategoryEntity.html":{},"injectables/CategoryRepository.html":{},"classes/CreateAuthorDto.html":{},"classes/CreateBookDto.html":{},"classes/CreateCategoryDto.html":{},"classes/CreateReviewDto.html":{},"classes/CreateUserDto.html":{},"classes/EntityRepository.html":{},"interfaces/IProcessFile.html":{},"classes/ProcessFile.html":{},"classes/ReviewEntity.html":{},"injectables/ReviewRepository.html":{},"interfaces/SuperadminCredentials.html":{},"classes/UserEntity.html":{},"injectables/UserRepository.html":{},"miscellaneous/variables.html":{}}}],["define",{"_index":8,"title":{},"body":{"interfaces/ApiOptions.html":{},"interfaces/AuthOptions.html":{}}}],["defined",{"_index":614,"title":{},"body":{"interfaces/RuntimeSetismConfig.html":{}}}],["dekoo",{"_index":958,"title":{},"body":{"index.html":{},"license.html":{}}}],["dekoo.tk",{"_index":947,"title":{},"body":{"index.html":{}}}],["deletemany",{"_index":285,"title":{},"body":{"injectables/AuthorRepository.html":{},"injectables/BookRepository.html":{},"injectables/CategoryRepository.html":{},"classes/EntityRepository.html":{},"injectables/ReviewRepository.html":{},"injectables/UserRepository.html":{}}}],["deletemany(entityfilterquery",{"_index":297,"title":{},"body":{"injectables/AuthorRepository.html":{},"injectables/BookRepository.html":{},"injectables/CategoryRepository.html":{},"classes/EntityRepository.html":{},"injectables/ReviewRepository.html":{},"injectables/UserRepository.html":{}}}],["deleteone",{"_index":286,"title":{},"body":{"injectables/AuthorRepository.html":{},"injectables/BookRepository.html":{},"injectables/CategoryRepository.html":{},"classes/EntityRepository.html":{},"injectables/ReviewRepository.html":{},"injectables/UserRepository.html":{}}}],["deleteone(entityfilterquery",{"_index":300,"title":{},"body":{"injectables/AuthorRepository.html":{},"injectables/BookRepository.html":{},"injectables/CategoryRepository.html":{},"classes/EntityRepository.html":{},"injectables/ReviewRepository.html":{},"injectables/UserRepository.html":{}}}],["dependencies",{"_index":70,"title":{"dependencies.html":{}},"body":{"modules/AppModule.html":{},"modules/AuthModule.html":{},"modules/AuthorModule.html":{},"modules/BookModule.html":{},"modules/CategoryModule.html":{},"modules/ConfigModule.html":{},"modules/DatabaseModule.html":{},"modules/ReviewModule.html":{},"modules/UserModule.html":{},"dependencies.html":{},"overview.html":{}}}],["depression",{"_index":992,"title":{},"body":{"index.html":{}}}],["depressive",{"_index":996,"title":{},"body":{"index.html":{}}}],["describing",{"_index":195,"title":{},"body":{"interfaces/AuthOptions.html":{}}}],["description",{"_index":7,"title":{},"body":{"interfaces/ApiOptions.html":{},"classes/AuthDto.html":{},"interfaces/AuthOptions.html":{},"controllers/AuthorController.html":{},"controllers/BookController.html":{},"classes/BookEntity.html":{},"controllers/CategoryController.html":{},"classes/CategoryEntity.html":{},"classes/CreateBookDto.html":{},"classes/CreateCategoryDto.html":{},"classes/CreateReadingListDto.html":{},"classes/CreateUserDto.html":{},"classes/ProcessFile.html":{},"interfaces/RuntimeSetismConfig.html":{},"interfaces/SwaggerOptions.html":{},"classes/UpdateUserDto.html":{},"controllers/UserController.html":{},"contributing.html":{},"miscellaneous/functions.html":{}}}],["detailed",{"_index":800,"title":{},"body":{"contributing.html":{}}}],["details",{"_index":1086,"title":{},"body":{"index.html":{}}}],["development",{"_index":47,"title":{},"body":{"interfaces/ApiOptions.html":{},"contributing.html":{},"miscellaneous/enumerations.html":{}}}],["dir",{"_index":551,"title":{},"body":{"classes/ProcessFile.html":{}}}],["directly",{"_index":1077,"title":{},"body":{"index.html":{}}}],["directory",{"_index":527,"title":{},"body":{"interfaces/IProcessFile.html":{},"miscellaneous/functions.html":{}}}],["discuss",{"_index":755,"title":{},"body":{"contributing.html":{}}}],["discussing",{"_index":731,"title":{},"body":{"contributing.html":{}}}],["discussion",{"_index":714,"title":{},"body":{"contributing.html":{}}}],["discussions",{"_index":716,"title":{},"body":{"contributing.html":{}}}],["distribute",{"_index":1119,"title":{},"body":{"license.html":{}}}],["docs",{"_index":44,"title":{},"body":{"interfaces/ApiOptions.html":{},"index.html":{}}}],["docs.dekoo.tk",{"_index":949,"title":{},"body":{"index.html":{}}}],["document",{"_index":1079,"title":{},"body":{"index.html":{}}}],["documentation",{"_index":62,"title":{},"body":{"interfaces/ApiOptions.html":{},"interfaces/SwaggerOptions.html":{},"coverage.html":{},"index.html":{},"license.html":{}}}],["doespathexist",{"_index":844,"title":{},"body":{"coverage.html":{},"miscellaneous/functions.html":{}}}],["doespathexist(path",{"_index":924,"title":{},"body":{"miscellaneous/functions.html":{}}}],["doing",{"_index":1197,"title":{},"body":{"miscellaneous/variables.html":{}}}],["done",{"_index":1194,"title":{},"body":{"miscellaneous/variables.html":{}}}],["download",{"_index":1015,"title":{},"body":{"index.html":{}}}],["drucker",{"_index":1190,"title":{},"body":{"miscellaneous/variables.html":{}}}],["ducasse",{"_index":1090,"title":{},"body":{"index.html":{}}}],["e2e",{"_index":1049,"title":{},"body":{"index.html":{}}}],["effective",{"_index":1209,"title":{},"body":{"miscellaneous/variables.html":{}}}],["eg",{"_index":199,"title":{},"body":{"interfaces/AuthOptions.html":{}}}],["email",{"_index":132,"title":{},"body":{"classes/AuthDto.html":{},"injectables/AuthService.html":{},"classes/CreateUserDto.html":{},"classes/UserEntity.html":{}}}],["email!'})@isdefined({message",{"_index":139,"title":{},"body":{"classes/AuthDto.html":{},"classes/CreateUserDto.html":{}}}],["empty",{"_index":140,"title":{},"body":{"classes/AuthDto.html":{},"classes/CreateAuthorDto.html":{},"classes/CreateBookDto.html":{},"classes/CreateCategoryDto.html":{},"classes/CreateReviewDto.html":{},"classes/CreateUserDto.html":{}}}],["empty!'})@minlength(4",{"_index":486,"title":{},"body":{"classes/CreateUserDto.html":{}}}],["empty!'})@minlength(6",{"_index":143,"title":{},"body":{"classes/AuthDto.html":{},"classes/CreateUserDto.html":{}}}],["end",{"_index":1037,"title":{},"body":{"index.html":{}}}],["ensure",{"_index":751,"title":{},"body":{"contributing.html":{}}}],["entire",{"_index":710,"title":{},"body":{"contributing.html":{},"index.html":{}}}],["entityfilterquery",{"_index":299,"title":{},"body":{"injectables/AuthorRepository.html":{},"injectables/BookRepository.html":{},"injectables/CategoryRepository.html":{},"classes/EntityRepository.html":{},"injectables/ReviewRepository.html":{},"injectables/UserRepository.html":{}}}],["entityid",{"_index":305,"title":{},"body":{"injectables/AuthorRepository.html":{},"injectables/BookRepository.html":{},"injectables/CategoryRepository.html":{},"classes/EntityRepository.html":{},"injectables/ReviewRepository.html":{},"injectables/UserRepository.html":{}}}],["entitymodal",{"_index":500,"title":{},"body":{"classes/EntityRepository.html":{}}}],["entityrepository",{"_index":283,"title":{"classes/EntityRepository.html":{}},"body":{"injectables/AuthorRepository.html":{},"injectables/BookRepository.html":{},"injectables/CategoryRepository.html":{},"classes/EntityRepository.html":{},"injectables/ReviewRepository.html":{},"injectables/UserRepository.html":{},"coverage.html":{}}}],["entry",{"_index":424,"title":{},"body":{"classes/CreateAuthorDto.html":{}}}],["enum",{"_index":590,"title":{},"body":{"classes/ReviewEntity.html":{},"classes/UserEntity.html":{}}}],["enumerations",{"_index":900,"title":{"miscellaneous/enumerations.html":{}},"body":{"miscellaneous/enumerations.html":{}}}],["env",{"_index":22,"title":{},"body":{"interfaces/ApiOptions.html":{},"interfaces/ConnectionOptions.html":{}}}],["envalid",{"_index":874,"title":{},"body":{"dependencies.html":{}}}],["environment",{"_index":48,"title":{},"body":{"interfaces/ApiOptions.html":{},"contributing.html":{},"miscellaneous/enumerations.html":{}}}],["eslint",{"_index":1059,"title":{},"body":{"index.html":{}}}],["esteem",{"_index":1003,"title":{},"body":{"index.html":{}}}],["etc",{"_index":618,"title":{},"body":{"interfaces/RuntimeSetismConfig.html":{}}}],["event",{"_index":1144,"title":{},"body":{"license.html":{}}}],["everyone",{"_index":975,"title":{},"body":{"index.html":{}}}],["example",{"_index":934,"title":{},"body":{"miscellaneous/functions.html":{},"index.html":{}}}],["executioncontext",{"_index":609,"title":{},"body":{"guards/RolesGuard.html":{}}}],["executive",{"_index":1189,"title":{},"body":{"miscellaneous/variables.html":{}}}],["expect",{"_index":722,"title":{},"body":{"contributing.html":{}}}],["exports",{"_index":158,"title":{},"body":{"modules/AuthModule.html":{},"modules/ConfigModule.html":{},"modules/DatabaseModule.html":{}}}],["exposed",{"_index":12,"title":{},"body":{"interfaces/ApiOptions.html":{}}}],["exposedheaders",{"_index":36,"title":{},"body":{"interfaces/ApiOptions.html":{}}}],["express",{"_index":43,"title":{},"body":{"interfaces/ApiOptions.html":{},"dependencies.html":{},"license.html":{}}}],["express.multer.file",{"_index":232,"title":{},"body":{"controllers/AuthorController.html":{},"injectables/AuthorService.html":{},"classes/UploadBookDto.html":{}}}],["expressed",{"_index":194,"title":{},"body":{"interfaces/AuthOptions.html":{}}}],["ext",{"_index":541,"title":{},"body":{"classes/ProcessFile.html":{}}}],["extended",{"_index":16,"title":{},"body":{"interfaces/ApiOptions.html":{}}}],["extends",{"_index":256,"title":{},"body":{"classes/AuthorEntity.html":{},"injectables/AuthorRepository.html":{},"classes/BookEntity.html":{},"injectables/BookRepository.html":{},"classes/CategoryEntity.html":{},"injectables/CategoryRepository.html":{},"classes/ReviewEntity.html":{},"injectables/ReviewRepository.html":{},"classes/UserEntity.html":{},"injectables/UserRepository.html":{}}}],["extension",{"_index":519,"title":{},"body":{"interfaces/IProcessFile.html":{}}}],["extra",{"_index":181,"title":{},"body":{"interfaces/AuthOptions.html":{}}}],["f",{"_index":362,"title":{},"body":{"injectables/BookService.html":{}}}],["fact",{"_index":964,"title":{},"body":{"index.html":{}}}],["failed",{"_index":115,"title":{},"body":{"controllers/AuthController.html":{},"controllers/AuthorController.html":{},"controllers/BookController.html":{},"controllers/CategoryController.html":{},"controllers/ReviewController.html":{},"controllers/UserController.html":{}}}],["false",{"_index":265,"title":{},"body":{"classes/AuthorEntity.html":{},"classes/CategoryEntity.html":{},"classes/CreateReviewDto.html":{},"classes/ProcessFile.html":{},"miscellaneous/functions.html":{}}}],["false})@isoptional",{"_index":416,"title":{},"body":{"classes/CreateAuthorDto.html":{},"classes/UpdateBookDto.html":{},"classes/UpdateUserDto.html":{}}}],["false})@isoptional()@isdate({message",{"_index":642,"title":{},"body":{"classes/UpdateUserDto.html":{}}}],["false})@isoptional()@minlength(12",{"_index":417,"title":{},"body":{"classes/CreateAuthorDto.html":{}}}],["false})@isoptional()@minlength(20",{"_index":641,"title":{},"body":{"classes/UpdateUserDto.html":{}}}],["false})@isoptional()@minlength(4",{"_index":646,"title":{},"body":{"classes/UpdateUserDto.html":{}}}],["false})@ispositive({message",{"_index":632,"title":{},"body":{"classes/UpdateBookDto.html":{}}}],["false})@isstring({each",{"_index":627,"title":{},"body":{"classes/UpdateBookDto.html":{}}}],["false})@isstring({message",{"_index":630,"title":{},"body":{"classes/UpdateBookDto.html":{}}}],["favorite",{"_index":1030,"title":{},"body":{"index.html":{}}}],["feat",{"_index":791,"title":{},"body":{"contributing.html":{}}}],["feature",{"_index":732,"title":{},"body":{"contributing.html":{},"index.html":{}}}],["feature/#_amazing",{"_index":787,"title":{},"body":{"contributing.html":{}}}],["features",{"_index":737,"title":{},"body":{"contributing.html":{},"index.html":{}}}],["feedback",{"_index":940,"title":{},"body":{"index.html":{}}}],["feel",{"_index":979,"title":{},"body":{"index.html":{}}}],["fiction'})@isstring({message",{"_index":454,"title":{},"body":{"classes/CreateCategoryDto.html":{}}}],["file",{"_index":5,"title":{},"body":{"interfaces/ApiOptions.html":{},"modules/AppModule.html":{},"controllers/AuthController.html":{},"classes/AuthDto.html":{},"modules/AuthModule.html":{},"interfaces/AuthOptions.html":{},"injectables/AuthService.html":{},"controllers/AuthorController.html":{},"classes/AuthorEntity.html":{},"modules/AuthorModule.html":{},"injectables/AuthorRepository.html":{},"injectables/AuthorService.html":{},"classes/BaseEntitySchema.html":{},"controllers/BookController.html":{},"classes/BookEntity.html":{},"modules/BookModule.html":{},"injectables/BookRepository.html":{},"injectables/BookService.html":{},"controllers/CategoryController.html":{},"classes/CategoryEntity.html":{},"modules/CategoryModule.html":{},"injectables/CategoryRepository.html":{},"injectables/CategoryService.html":{},"modules/ConfigModule.html":{},"classes/ConfigService.html":{},"interfaces/ConnectionOptions.html":{},"classes/CreateAuthorDto.html":{},"classes/CreateBookDto.html":{},"classes/CreateCategoryDto.html":{},"classes/CreateReadingListDto.html":{},"classes/CreateReviewDto.html":{},"classes/CreateUserDto.html":{},"modules/DatabaseModule.html":{},"injectables/DatabaseService.html":{},"classes/EntityRepository.html":{},"injectables/GoogleAuthGuard.html":{},"injectables/GoogleStrategy.html":{},"interfaces/IProcessFile.html":{},"interfaces/IResizeImageArgs.html":{},"injectables/JwtAuthGuard.html":{},"injectables/JwtStrategy.html":{},"classes/ProcessFile.html":{},"controllers/ReviewController.html":{},"classes/ReviewEntity.html":{},"modules/ReviewModule.html":{},"injectables/ReviewRepository.html":{},"injectables/ReviewService.html":{},"guards/RolesGuard.html":{},"interfaces/RuntimeSetismConfig.html":{},"interfaces/SuperadminCredentials.html":{},"interfaces/SwaggerOptions.html":{},"classes/UpdateAuthorDto.html":{},"classes/UpdateBookDto.html":{},"classes/UpdateCategoryDto.html":{},"classes/UpdateReviewDto.html":{},"classes/UpdateUserDto.html":{},"classes/UploadBookDto.html":{},"controllers/UserController.html":{},"classes/UserEntity.html":{},"modules/UserModule.html":{},"injectables/UserRepository.html":{},"injectables/UserService.html":{},"coverage.html":{},"miscellaneous/functions.html":{},"index.html":{},"miscellaneous/typealiases.html":{}}}],["file.ts",{"_index":510,"title":{},"body":{"interfaces/IProcessFile.html":{},"interfaces/IResizeImageArgs.html":{},"classes/ProcessFile.html":{},"coverage.html":{},"miscellaneous/typealiases.html":{},"miscellaneous/variables.html":{}}}],["filebuffer",{"_index":513,"title":{},"body":{"interfaces/IProcessFile.html":{}}}],["filename",{"_index":542,"title":{},"body":{"classes/ProcessFile.html":{}}}],["files",{"_index":327,"title":{},"body":{"controllers/BookController.html":{},"injectables/BookService.html":{},"index.html":{},"license.html":{}}}],["filetype",{"_index":514,"title":{},"body":{"interfaces/IProcessFile.html":{}}}],["filterquery",{"_index":298,"title":{},"body":{"injectables/AuthorRepository.html":{},"injectables/BookRepository.html":{},"injectables/CategoryRepository.html":{},"classes/EntityRepository.html":{},"injectables/ReviewRepository.html":{},"injectables/UserRepository.html":{}}}],["find",{"_index":228,"title":{},"body":{"controllers/AuthorController.html":{},"injectables/AuthorRepository.html":{},"controllers/BookController.html":{},"injectables/BookRepository.html":{},"controllers/CategoryController.html":{},"injectables/CategoryRepository.html":{},"classes/EntityRepository.html":{},"injectables/ReviewRepository.html":{},"controllers/UserController.html":{},"injectables/UserRepository.html":{},"contributing.html":{}}}],["find(entityfilterquery",{"_index":301,"title":{},"body":{"injectables/AuthorRepository.html":{},"injectables/BookRepository.html":{},"injectables/CategoryRepository.html":{},"classes/EntityRepository.html":{},"injectables/ReviewRepository.html":{},"injectables/UserRepository.html":{}}}],["find(id",{"_index":239,"title":{},"body":{"controllers/AuthorController.html":{},"controllers/BookController.html":{},"controllers/CategoryController.html":{},"controllers/UserController.html":{}}}],["findall",{"_index":313,"title":{},"body":{"injectables/AuthorService.html":{},"injectables/BookService.html":{},"injectables/CategoryService.html":{},"controllers/ReviewController.html":{},"injectables/ReviewService.html":{}}}],["findallbookreviews",{"_index":558,"title":{},"body":{"controllers/ReviewController.html":{},"injectables/ReviewService.html":{}}}],["findallbookreviews(bookid",{"_index":571,"title":{},"body":{"controllers/ReviewController.html":{},"injectables/ReviewService.html":{}}}],["findbyid",{"_index":287,"title":{},"body":{"injectables/AuthorRepository.html":{},"injectables/BookRepository.html":{},"injectables/CategoryRepository.html":{},"classes/EntityRepository.html":{},"injectables/ReviewRepository.html":{},"injectables/UserRepository.html":{}}}],["findbyid(entityid",{"_index":304,"title":{},"body":{"injectables/AuthorRepository.html":{},"injectables/BookRepository.html":{},"injectables/CategoryRepository.html":{},"classes/EntityRepository.html":{},"injectables/ReviewRepository.html":{},"injectables/UserRepository.html":{}}}],["findbyidandupdate",{"_index":288,"title":{},"body":{"injectables/AuthorRepository.html":{},"injectables/BookRepository.html":{},"injectables/CategoryRepository.html":{},"classes/EntityRepository.html":{},"injectables/ReviewRepository.html":{},"injectables/UserRepository.html":{}}}],["findbyidandupdate(entityid",{"_index":306,"title":{},"body":{"injectables/AuthorRepository.html":{},"injectables/BookRepository.html":{},"injectables/CategoryRepository.html":{},"classes/EntityRepository.html":{},"injectables/ReviewRepository.html":{},"injectables/UserRepository.html":{}}}],["findone",{"_index":289,"title":{},"body":{"injectables/AuthorRepository.html":{},"injectables/AuthorService.html":{},"injectables/BookRepository.html":{},"injectables/BookService.html":{},"injectables/CategoryRepository.html":{},"injectables/CategoryService.html":{},"classes/EntityRepository.html":{},"controllers/ReviewController.html":{},"injectables/ReviewRepository.html":{},"injectables/ReviewService.html":{},"injectables/UserRepository.html":{}}}],["findone(entityfilterquery",{"_index":309,"title":{},"body":{"injectables/AuthorRepository.html":{},"injectables/BookRepository.html":{},"injectables/CategoryRepository.html":{},"classes/EntityRepository.html":{},"injectables/ReviewRepository.html":{},"injectables/UserRepository.html":{}}}],["findone(id",{"_index":316,"title":{},"body":{"injectables/AuthorService.html":{},"injectables/BookService.html":{},"injectables/CategoryService.html":{},"controllers/ReviewController.html":{},"injectables/ReviewService.html":{}}}],["first",{"_index":754,"title":{},"body":{"contributing.html":{}}}],["firstlogin",{"_index":661,"title":{},"body":{"classes/UserEntity.html":{}}}],["fiter",{"_index":1029,"title":{},"body":{"index.html":{}}}],["fitness",{"_index":1140,"title":{},"body":{"license.html":{}}}],["fits",{"_index":758,"title":{},"body":{"contributing.html":{}}}],["fixes",{"_index":748,"title":{},"body":{"contributing.html":{}}}],["fixing",{"_index":745,"title":{},"body":{"contributing.html":{},"index.html":{}}}],["folder",{"_index":1042,"title":{},"body":{"index.html":{}}}],["follow",{"_index":741,"title":{},"body":{"contributing.html":{},"index.html":{}}}],["following",{"_index":1082,"title":{},"body":{"index.html":{},"license.html":{}}}],["follows",{"_index":1084,"title":{},"body":{"index.html":{}}}],["forbidden!'})@apiparam({name",{"_index":243,"title":{},"body":{"controllers/AuthorController.html":{},"controllers/BookController.html":{},"controllers/CategoryController.html":{},"controllers/UserController.html":{}}}],["forbidden!'})@delete(':userid/delete/:reviewid/:bookid",{"_index":577,"title":{},"body":{"controllers/ReviewController.html":{}}}],["forbidden!'})@get",{"_index":247,"title":{},"body":{"controllers/AuthorController.html":{},"controllers/BookController.html":{},"controllers/CategoryController.html":{}}}],["forbidden!'})@get('/book/:bookid",{"_index":572,"title":{},"body":{"controllers/ReviewController.html":{}}}],["forbidden!'})@get(':reviewid",{"_index":573,"title":{},"body":{"controllers/ReviewController.html":{}}}],["forbidden!'})@get()@useroles(role.admin",{"_index":569,"title":{},"body":{"controllers/ReviewController.html":{}}}],["forbidden!'})@patch(':userid/update",{"_index":580,"title":{},"body":{"controllers/ReviewController.html":{}}}],["forbidden!'})@post(':id/list",{"_index":654,"title":{},"body":{"controllers/UserController.html":{}}}],["forbidden!'})@post(':userid/create/:bookid",{"_index":567,"title":{},"body":{"controllers/ReviewController.html":{}}}],["forbidden!'})@post('signin",{"_index":119,"title":{},"body":{"controllers/AuthController.html":{}}}],["forbidden!'})@post('signup",{"_index":128,"title":{},"body":{"controllers/AuthController.html":{}}}],["forbidden!'})@useroles(role.admin",{"_index":368,"title":{},"body":{"controllers/CategoryController.html":{}}}],["forbidden!'})@useroles(role.admin)@useguards(jwtauthguard",{"_index":655,"title":{},"body":{"controllers/UserController.html":{}}}],["forbidden!'})@useroles(role.publisher",{"_index":235,"title":{},"body":{"controllers/AuthorController.html":{},"controllers/BookController.html":{}}}],["fork",{"_index":775,"title":{},"body":{"contributing.html":{}}}],["format",{"_index":1017,"title":{},"body":{"index.html":{}}}],["formated",{"_index":936,"title":{},"body":{"miscellaneous/functions.html":{}}}],["formatstringforpath",{"_index":849,"title":{},"body":{"coverage.html":{},"miscellaneous/functions.html":{}}}],["formatstringforpath(rawname",{"_index":932,"title":{},"body":{"miscellaneous/functions.html":{}}}],["formatted",{"_index":1056,"title":{},"body":{"index.html":{}}}],["found",{"_index":734,"title":{},"body":{"contributing.html":{},"miscellaneous/functions.html":{}}}],["found.'})@apibadrequestresponse({description",{"_index":565,"title":{},"body":{"controllers/ReviewController.html":{}}}],["found.'})@apiforbiddenresponse({description",{"_index":242,"title":{},"body":{"controllers/AuthorController.html":{},"controllers/BookController.html":{},"controllers/CategoryController.html":{},"controllers/UserController.html":{}}}],["framework",{"_index":1038,"title":{},"body":{"index.html":{}}}],["free",{"_index":969,"title":{},"body":{"index.html":{},"license.html":{}}}],["full",{"_index":484,"title":{},"body":{"classes/CreateUserDto.html":{}}}],["fullname",{"_index":225,"title":{},"body":{"injectables/AuthService.html":{},"classes/CreateUserDto.html":{},"classes/UserEntity.html":{}}}],["fullname'})@isdefined({message",{"_index":485,"title":{},"body":{"classes/CreateUserDto.html":{}}}],["function",{"_index":833,"title":{},"body":{"coverage.html":{}}}],["functions",{"_index":916,"title":{"miscellaneous/functions.html":{}},"body":{"miscellaneous/functions.html":{}}}],["furnished",{"_index":1126,"title":{},"body":{"license.html":{}}}],["get('google')@useguards(googleauthguard",{"_index":100,"title":{},"body":{"controllers/AuthController.html":{}}}],["get('google/redirect')@useguards(googleauthguard",{"_index":106,"title":{},"body":{"controllers/AuthController.html":{}}}],["getapioptions",{"_index":404,"title":{},"body":{"classes/ConfigService.html":{}}}],["getauthoptions",{"_index":405,"title":{},"body":{"classes/ConfigService.html":{}}}],["getdbhandle",{"_index":496,"title":{},"body":{"injectables/DatabaseService.html":{}}}],["getdboptions",{"_index":406,"title":{},"body":{"classes/ConfigService.html":{}}}],["getisdevelopment",{"_index":401,"title":{},"body":{"classes/ConfigService.html":{}}}],["getisproduction",{"_index":402,"title":{},"body":{"classes/ConfigService.html":{}}}],["getistest",{"_index":403,"title":{},"body":{"classes/ConfigService.html":{}}}],["getoutputdir",{"_index":543,"title":{},"body":{"classes/ProcessFile.html":{}}}],["getoutputdir(usestaticpath",{"_index":548,"title":{},"body":{"classes/ProcessFile.html":{}}}],["getting",{"_index":682,"title":{"contributing.html":{},"index.html":{},"license.html":{}},"body":{"contributing.html":{}}}],["git",{"_index":785,"title":{},"body":{"contributing.html":{},"index.html":{}}}],["github",{"_index":1097,"title":{},"body":{"index.html":{}}}],["github's",{"_index":718,"title":{},"body":{"contributing.html":{}}}],["golden",{"_index":742,"title":{},"body":{"contributing.html":{}}}],["google",{"_index":170,"title":{},"body":{"interfaces/AuthOptions.html":{},"dependencies.html":{}}}],["googleauth",{"_index":92,"title":{},"body":{"controllers/AuthController.html":{}}}],["googleauth(_req",{"_index":97,"title":{},"body":{"controllers/AuthController.html":{}}}],["googleauthguard",{"_index":501,"title":{"injectables/GoogleAuthGuard.html":{}},"body":{"injectables/GoogleAuthGuard.html":{},"coverage.html":{}}}],["googleauthredirect",{"_index":93,"title":{},"body":{"controllers/AuthController.html":{}}}],["googleauthredirect(req",{"_index":105,"title":{},"body":{"controllers/AuthController.html":{}}}],["googleclientid",{"_index":162,"title":{},"body":{"interfaces/AuthOptions.html":{}}}],["googleclientsecret",{"_index":163,"title":{},"body":{"interfaces/AuthOptions.html":{}}}],["googlestrategy",{"_index":153,"title":{"injectables/GoogleStrategy.html":{}},"body":{"modules/AuthModule.html":{},"injectables/GoogleStrategy.html":{},"coverage.html":{},"overview.html":{}}}],["granted",{"_index":1104,"title":{},"body":{"license.html":{}}}],["greatly",{"_index":1067,"title":{},"body":{"index.html":{}}}],["ground",{"_index":712,"title":{},"body":{"contributing.html":{}}}],["gt",{"_index":935,"title":{},"body":{"miscellaneous/functions.html":{}}}],["guard",{"_index":601,"title":{"guards/RolesGuard.html":{}},"body":{"coverage.html":{},"overview.html":{}}}],["guards",{"_index":603,"title":{},"body":{"guards/RolesGuard.html":{}}}],["guidelines",{"_index":715,"title":{},"body":{"contributing.html":{}}}],["habits",{"_index":1206,"title":{},"body":{"miscellaneous/variables.html":{}}}],["handling",{"_index":40,"title":{},"body":{"interfaces/ApiOptions.html":{}}}],["happier",{"_index":980,"title":{},"body":{"index.html":{}}}],["hash",{"_index":224,"title":{},"body":{"injectables/AuthService.html":{}}}],["hashing",{"_index":183,"title":{},"body":{"interfaces/AuthOptions.html":{}}}],["heartily",{"_index":694,"title":{},"body":{"contributing.html":{}}}],["height",{"_index":532,"title":{},"body":{"interfaces/IResizeImageArgs.html":{}}}],["helmet",{"_index":876,"title":{},"body":{"dependencies.html":{}}}],["help",{"_index":994,"title":{},"body":{"index.html":{}}}],["helpful",{"_index":588,"title":{},"body":{"classes/ReviewEntity.html":{}}}],["helpful/:reviewid",{"_index":581,"title":{},"body":{"controllers/ReviewController.html":{}}}],["here",{"_index":744,"title":{},"body":{"contributing.html":{},"index.html":{}}}],["here's",{"_index":976,"title":{},"body":{"index.html":{}}}],["hereby",{"_index":1103,"title":{},"body":{"license.html":{}}}],["heroku",{"_index":1096,"title":{},"body":{"index.html":{}}}],["holders",{"_index":1145,"title":{},"body":{"license.html":{}}}],["hostname",{"_index":23,"title":{},"body":{"interfaces/ApiOptions.html":{},"interfaces/RuntimeSetismConfig.html":{}}}],["husky",{"_index":1099,"title":{},"body":{"index.html":{}}}],["id",{"_index":169,"title":{},"body":{"interfaces/AuthOptions.html":{},"injectables/AuthService.html":{},"controllers/AuthorController.html":{},"injectables/AuthorService.html":{},"controllers/BookController.html":{},"injectables/BookService.html":{},"controllers/CategoryController.html":{},"injectables/CategoryService.html":{},"classes/CreateBookDto.html":{},"controllers/ReviewController.html":{},"injectables/ReviewService.html":{},"classes/UpdateBookDto.html":{},"controllers/UserController.html":{},"injectables/UserService.html":{}}}],["id'})@delete(':id",{"_index":657,"title":{},"body":{"controllers/UserController.html":{}}}],["id'})@get(':id",{"_index":246,"title":{},"body":{"controllers/AuthorController.html":{},"controllers/BookController.html":{},"controllers/CategoryController.html":{},"controllers/UserController.html":{}}}],["id'})@patch(':id",{"_index":658,"title":{},"body":{"controllers/UserController.html":{}}}],["id'})@useroles(role.admin",{"_index":249,"title":{},"body":{"controllers/AuthorController.html":{},"controllers/BookController.html":{},"controllers/CategoryController.html":{}}}],["idea",{"_index":733,"title":{},"body":{"contributing.html":{}}}],["ideas",{"_index":736,"title":{},"body":{"contributing.html":{}}}],["identifier",{"_index":803,"title":{},"body":{"coverage.html":{}}}],["ids",{"_index":422,"title":{},"body":{"classes/CreateAuthorDto.html":{}}}],["image",{"_index":553,"title":{},"body":{"classes/ProcessFile.html":{},"classes/UpdateBookDto.html":{}}}],["imagination",{"_index":1202,"title":{},"body":{"miscellaneous/variables.html":{}}}],["img",{"_index":1094,"title":{},"body":{"index.html":{}}}],["impact",{"_index":986,"title":{},"body":{"index.html":{}}}],["implement",{"_index":738,"title":{},"body":{"contributing.html":{}}}],["implementing",{"_index":746,"title":{},"body":{"contributing.html":{}}}],["implied",{"_index":1137,"title":{},"body":{"license.html":{}}}],["important",{"_index":1018,"title":{},"body":{"index.html":{}}}],["imports",{"_index":85,"title":{},"body":{"modules/AppModule.html":{}}}],["included",{"_index":1132,"title":{},"body":{"license.html":{}}}],["including",{"_index":616,"title":{},"body":{"interfaces/RuntimeSetismConfig.html":{},"license.html":{}}}],["increase",{"_index":1000,"title":{},"body":{"index.html":{}}}],["index",{"_index":18,"title":{"index.html":{}},"body":{"interfaces/ApiOptions.html":{},"controllers/AuthController.html":{},"classes/AuthDto.html":{},"interfaces/AuthOptions.html":{},"injectables/AuthService.html":{},"controllers/AuthorController.html":{},"classes/AuthorEntity.html":{},"injectables/AuthorRepository.html":{},"injectables/AuthorService.html":{},"classes/BaseEntitySchema.html":{},"controllers/BookController.html":{},"classes/BookEntity.html":{},"injectables/BookRepository.html":{},"injectables/BookService.html":{},"controllers/CategoryController.html":{},"classes/CategoryEntity.html":{},"injectables/CategoryRepository.html":{},"injectables/CategoryService.html":{},"classes/ConfigService.html":{},"interfaces/ConnectionOptions.html":{},"classes/CreateAuthorDto.html":{},"classes/CreateBookDto.html":{},"classes/CreateCategoryDto.html":{},"classes/CreateReadingListDto.html":{},"classes/CreateReviewDto.html":{},"classes/CreateUserDto.html":{},"injectables/DatabaseService.html":{},"classes/EntityRepository.html":{},"injectables/GoogleStrategy.html":{},"interfaces/IProcessFile.html":{},"interfaces/IResizeImageArgs.html":{},"injectables/JwtStrategy.html":{},"classes/ProcessFile.html":{},"controllers/ReviewController.html":{},"classes/ReviewEntity.html":{},"injectables/ReviewRepository.html":{},"injectables/ReviewService.html":{},"guards/RolesGuard.html":{},"interfaces/RuntimeSetismConfig.html":{},"interfaces/SuperadminCredentials.html":{},"interfaces/SwaggerOptions.html":{},"classes/UpdateBookDto.html":{},"classes/UpdateUserDto.html":{},"classes/UploadBookDto.html":{},"controllers/UserController.html":{},"classes/UserEntity.html":{},"injectables/UserRepository.html":{},"injectables/UserService.html":{},"miscellaneous/enumerations.html":{},"miscellaneous/functions.html":{},"miscellaneous/typealiases.html":{},"miscellaneous/variables.html":{}}}],["inestapplication",{"_index":922,"title":{},"body":{"miscellaneous/functions.html":{}}}],["info",{"_index":4,"title":{},"body":{"interfaces/ApiOptions.html":{},"modules/AppModule.html":{},"controllers/AuthController.html":{},"classes/AuthDto.html":{},"modules/AuthModule.html":{},"interfaces/AuthOptions.html":{},"injectables/AuthService.html":{},"controllers/AuthorController.html":{},"classes/AuthorEntity.html":{},"modules/AuthorModule.html":{},"injectables/AuthorRepository.html":{},"injectables/AuthorService.html":{},"classes/BaseEntitySchema.html":{},"controllers/BookController.html":{},"classes/BookEntity.html":{},"modules/BookModule.html":{},"injectables/BookRepository.html":{},"injectables/BookService.html":{},"controllers/CategoryController.html":{},"classes/CategoryEntity.html":{},"modules/CategoryModule.html":{},"injectables/CategoryRepository.html":{},"injectables/CategoryService.html":{},"modules/ConfigModule.html":{},"classes/ConfigService.html":{},"interfaces/ConnectionOptions.html":{},"classes/CreateAuthorDto.html":{},"classes/CreateBookDto.html":{},"classes/CreateCategoryDto.html":{},"classes/CreateReadingListDto.html":{},"classes/CreateReviewDto.html":{},"classes/CreateUserDto.html":{},"modules/DatabaseModule.html":{},"injectables/DatabaseService.html":{},"classes/EntityRepository.html":{},"injectables/GoogleAuthGuard.html":{},"injectables/GoogleStrategy.html":{},"interfaces/IProcessFile.html":{},"interfaces/IResizeImageArgs.html":{},"injectables/JwtAuthGuard.html":{},"injectables/JwtStrategy.html":{},"classes/ProcessFile.html":{},"controllers/ReviewController.html":{},"classes/ReviewEntity.html":{},"modules/ReviewModule.html":{},"injectables/ReviewRepository.html":{},"injectables/ReviewService.html":{},"guards/RolesGuard.html":{},"interfaces/RuntimeSetismConfig.html":{},"interfaces/SuperadminCredentials.html":{},"interfaces/SwaggerOptions.html":{},"classes/UpdateAuthorDto.html":{},"classes/UpdateBookDto.html":{},"classes/UpdateCategoryDto.html":{},"classes/UpdateReviewDto.html":{},"classes/UpdateUserDto.html":{},"classes/UploadBookDto.html":{},"controllers/UserController.html":{},"classes/UserEntity.html":{},"modules/UserModule.html":{},"injectables/UserRepository.html":{},"injectables/UserService.html":{}}}],["information",{"_index":1093,"title":{},"body":{"index.html":{}}}],["initial",{"_index":801,"title":{},"body":{"contributing.html":{}}}],["injectable",{"_index":204,"title":{"injectables/AuthService.html":{},"injectables/AuthorRepository.html":{},"injectables/AuthorService.html":{},"injectables/BookRepository.html":{},"injectables/BookService.html":{},"injectables/CategoryRepository.html":{},"injectables/CategoryService.html":{},"injectables/DatabaseService.html":{},"injectables/GoogleAuthGuard.html":{},"injectables/GoogleStrategy.html":{},"injectables/JwtAuthGuard.html":{},"injectables/JwtStrategy.html":{},"injectables/ReviewRepository.html":{},"injectables/ReviewService.html":{},"injectables/UserRepository.html":{},"injectables/UserService.html":{}},"body":{"coverage.html":{}}}],["injectables",{"_index":205,"title":{},"body":{"injectables/AuthService.html":{},"injectables/AuthorRepository.html":{},"injectables/AuthorService.html":{},"injectables/BookRepository.html":{},"injectables/BookService.html":{},"injectables/CategoryRepository.html":{},"injectables/CategoryService.html":{},"injectables/DatabaseService.html":{},"injectables/GoogleAuthGuard.html":{},"injectables/GoogleStrategy.html":{},"injectables/JwtAuthGuard.html":{},"injectables/JwtStrategy.html":{},"injectables/ReviewRepository.html":{},"injectables/ReviewService.html":{},"injectables/UserRepository.html":{},"injectables/UserService.html":{},"overview.html":{}}}],["inspire",{"_index":693,"title":{},"body":{"contributing.html":{}}}],["inspired",{"_index":965,"title":{},"body":{"index.html":{}}}],["install",{"_index":778,"title":{},"body":{"contributing.html":{}}}],["installation",{"_index":774,"title":{},"body":{"contributing.html":{}}}],["instantly",{"_index":1006,"title":{},"body":{"index.html":{}}}],["intelligence",{"_index":1201,"title":{},"body":{"miscellaneous/variables.html":{}}}],["interested",{"_index":1076,"title":{},"body":{"index.html":{}}}],["interface",{"_index":0,"title":{"interfaces/ApiOptions.html":{},"interfaces/AuthOptions.html":{},"interfaces/ConnectionOptions.html":{},"interfaces/IProcessFile.html":{},"interfaces/IResizeImageArgs.html":{},"interfaces/RuntimeSetismConfig.html":{},"interfaces/SuperadminCredentials.html":{},"interfaces/SwaggerOptions.html":{}},"body":{"interfaces/RuntimeSetismConfig.html":{},"coverage.html":{}}}],["interfaces",{"_index":2,"title":{},"body":{"interfaces/ApiOptions.html":{},"interfaces/AuthOptions.html":{},"interfaces/ConnectionOptions.html":{},"interfaces/IProcessFile.html":{},"interfaces/IResizeImageArgs.html":{},"interfaces/RuntimeSetismConfig.html":{},"interfaces/SuperadminCredentials.html":{},"interfaces/SwaggerOptions.html":{},"overview.html":{}}}],["internal",{"_index":126,"title":{},"body":{"controllers/AuthController.html":{},"controllers/AuthorController.html":{},"controllers/BookController.html":{},"controllers/CategoryController.html":{},"controllers/UserController.html":{}}}],["internalcomment",{"_index":662,"title":{},"body":{"classes/UserEntity.html":{}}}],["involves",{"_index":1196,"title":{},"body":{"miscellaneous/variables.html":{}}}],["iprocessfile",{"_index":508,"title":{"interfaces/IProcessFile.html":{}},"body":{"interfaces/IProcessFile.html":{},"classes/ProcessFile.html":{},"coverage.html":{}}}],["iresizeimageargs",{"_index":530,"title":{"interfaces/IResizeImageArgs.html":{}},"body":{"interfaces/IResizeImageArgs.html":{},"classes/ProcessFile.html":{},"coverage.html":{}}}],["isbn",{"_index":332,"title":{},"body":{"classes/BookEntity.html":{},"classes/CreateBookDto.html":{}}}],["isdevelopment",{"_index":396,"title":{},"body":{"classes/ConfigService.html":{}}}],["isenum(readinglistkind)@isdefined",{"_index":468,"title":{},"body":{"classes/CreateReadingListDto.html":{}}}],["isn't",{"_index":702,"title":{},"body":{"contributing.html":{}}}],["isproduction",{"_index":397,"title":{},"body":{"classes/ConfigService.html":{}}}],["isstring()@isdefined()@minlength(3",{"_index":469,"title":{},"body":{"classes/CreateReadingListDto.html":{}}}],["isstring()@isoptional()@minlength(20",{"_index":464,"title":{},"body":{"classes/CreateReadingListDto.html":{}}}],["isstring({each",{"_index":462,"title":{},"body":{"classes/CreateReadingListDto.html":{}}}],["isstring({message",{"_index":430,"title":{},"body":{"classes/CreateBookDto.html":{}}}],["issue",{"_index":739,"title":{},"body":{"contributing.html":{},"index.html":{}}}],["issues",{"_index":723,"title":{},"body":{"contributing.html":{},"index.html":{}}}],["istest",{"_index":398,"title":{},"body":{"classes/ConfigService.html":{}}}],["it'd",{"_index":756,"title":{},"body":{"contributing.html":{}}}],["it's",{"_index":705,"title":{},"body":{"contributing.html":{},"index.html":{}}}],["jest",{"_index":1061,"title":{},"body":{"index.html":{}}}],["jiles'})@isstring({message",{"_index":427,"title":{},"body":{"classes/CreateAuthorDto.html":{}}}],["job",{"_index":1001,"title":{},"body":{"index.html":{},"miscellaneous/variables.html":{}}}],["jpeg",{"_index":517,"title":{},"body":{"interfaces/IProcessFile.html":{},"miscellaneous/typealiases.html":{}}}],["jwt",{"_index":178,"title":{},"body":{"interfaces/AuthOptions.html":{},"dependencies.html":{}}}],["jwtauthguard",{"_index":535,"title":{"injectables/JwtAuthGuard.html":{}},"body":{"injectables/JwtAuthGuard.html":{},"coverage.html":{}}}],["jwtsecretkey",{"_index":164,"title":{},"body":{"interfaces/AuthOptions.html":{}}}],["jwtservice",{"_index":213,"title":{},"body":{"injectables/AuthService.html":{}}}],["jwtstrategy",{"_index":154,"title":{"injectables/JwtStrategy.html":{}},"body":{"modules/AuthModule.html":{},"injectables/JwtStrategy.html":{},"coverage.html":{},"overview.html":{}}}],["key",{"_index":175,"title":{},"body":{"interfaces/AuthOptions.html":{},"index.html":{}}}],["keywords",{"_index":796,"title":{},"body":{"contributing.html":{}}}],["kind",{"_index":461,"title":{},"body":{"classes/CreateReadingListDto.html":{},"license.html":{}}}],["knowledge",{"_index":1203,"title":{},"body":{"miscellaneous/variables.html":{}}}],["known",{"_index":1066,"title":{},"body":{"index.html":{}}}],["lastlogin",{"_index":663,"title":{},"body":{"classes/UserEntity.html":{}}}],["later",{"_index":1011,"title":{},"body":{"index.html":{}}}],["layer",{"_index":15,"title":{},"body":{"interfaces/ApiOptions.html":{},"interfaces/AuthOptions.html":{}}}],["layered",{"_index":449,"title":{},"body":{"classes/CreateCategoryDto.html":{}}}],["learn",{"_index":692,"title":{},"body":{"contributing.html":{}}}],["leave",{"_index":1024,"title":{},"body":{"index.html":{}}}],["length",{"_index":190,"title":{},"body":{"interfaces/AuthOptions.html":{}}}],["liability",{"_index":1149,"title":{},"body":{"license.html":{}}}],["liable",{"_index":1146,"title":{},"body":{"license.html":{}}}],["library",{"_index":706,"title":{},"body":{"contributing.html":{}}}],["license",{"_index":942,"title":{"license.html":{}},"body":{"index.html":{},"license.html":{}}}],["licensed",{"_index":1091,"title":{},"body":{"index.html":{}}}],["limitation",{"_index":1114,"title":{},"body":{"license.html":{}}}],["limited",{"_index":708,"title":{},"body":{"contributing.html":{},"license.html":{}}}],["links",{"_index":945,"title":{},"body":{"index.html":{}}}],["list",{"_index":420,"title":{},"body":{"classes/CreateAuthorDto.html":{},"classes/CreateBookDto.html":{},"classes/UpdateBookDto.html":{},"index.html":{}}}],["list.enum.ts",{"_index":904,"title":{},"body":{"miscellaneous/enumerations.html":{},"miscellaneous/typealiases.html":{}}}],["listen",{"_index":55,"title":{},"body":{"interfaces/ApiOptions.html":{}}}],["lists",{"_index":1013,"title":{},"body":{"index.html":{}}}],["literal",{"_index":46,"title":{},"body":{"interfaces/ApiOptions.html":{}}}],["literary",{"_index":451,"title":{},"body":{"classes/CreateCategoryDto.html":{}}}],["live",{"_index":946,"title":{},"body":{"index.html":{}}}],["local",{"_index":669,"title":{},"body":{"classes/UserEntity.html":{}}}],["localhost",{"_index":51,"title":{},"body":{"interfaces/ApiOptions.html":{}}}],["log_label",{"_index":835,"title":{},"body":{"coverage.html":{},"miscellaneous/variables.html":{}}}],["loginwithemailandpassword",{"_index":95,"title":{},"body":{"controllers/AuthController.html":{},"injectables/AuthService.html":{}}}],["loginwithemailandpassword(authdto",{"_index":108,"title":{},"body":{"controllers/AuthController.html":{}}}],["loginwithemailandpassword(r",{"_index":215,"title":{},"body":{"injectables/AuthService.html":{}}}],["loginwithgoogleprovider",{"_index":207,"title":{},"body":{"injectables/AuthService.html":{}}}],["loginwithgoogleprovider(undefined",{"_index":217,"title":{},"body":{"injectables/AuthService.html":{}}}],["look",{"_index":757,"title":{},"body":{"contributing.html":{}}}],["lot",{"_index":962,"title":{},"body":{"index.html":{}}}],["lowercase",{"_index":670,"title":{},"body":{"classes/UserEntity.html":{}}}],["m",{"_index":790,"title":{},"body":{"contributing.html":{}}}],["make",{"_index":686,"title":{},"body":{"contributing.html":{},"index.html":{}}}],["makedir",{"_index":845,"title":{},"body":{"coverage.html":{},"miscellaneous/functions.html":{}}}],["makedir(path",{"_index":927,"title":{},"body":{"miscellaneous/functions.html":{}}}],["manage",{"_index":769,"title":{},"body":{"contributing.html":{}}}],["managed",{"_index":161,"title":{},"body":{"interfaces/AuthOptions.html":{}}}],["many",{"_index":1069,"title":{},"body":{"index.html":{}}}],["match",{"_index":696,"title":{},"body":{"contributing.html":{}}}],["matches",{"_index":752,"title":{},"body":{"contributing.html":{}}}],["matching",{"_index":66,"title":{},"body":{"interfaces/ApiOptions.html":{},"modules/AppModule.html":{},"controllers/AuthController.html":{},"classes/AuthDto.html":{},"modules/AuthModule.html":{},"interfaces/AuthOptions.html":{},"injectables/AuthService.html":{},"controllers/AuthorController.html":{},"classes/AuthorEntity.html":{},"modules/AuthorModule.html":{},"injectables/AuthorRepository.html":{},"injectables/AuthorService.html":{},"classes/BaseEntitySchema.html":{},"controllers/BookController.html":{},"classes/BookEntity.html":{},"modules/BookModule.html":{},"injectables/BookRepository.html":{},"injectables/BookService.html":{},"controllers/CategoryController.html":{},"classes/CategoryEntity.html":{},"modules/CategoryModule.html":{},"injectables/CategoryRepository.html":{},"injectables/CategoryService.html":{},"modules/ConfigModule.html":{},"classes/ConfigService.html":{},"interfaces/ConnectionOptions.html":{},"classes/CreateAuthorDto.html":{},"classes/CreateBookDto.html":{},"classes/CreateCategoryDto.html":{},"classes/CreateReadingListDto.html":{},"classes/CreateReviewDto.html":{},"classes/CreateUserDto.html":{},"modules/DatabaseModule.html":{},"injectables/DatabaseService.html":{},"classes/EntityRepository.html":{},"injectables/GoogleAuthGuard.html":{},"injectables/GoogleStrategy.html":{},"interfaces/IProcessFile.html":{},"interfaces/IResizeImageArgs.html":{},"injectables/JwtAuthGuard.html":{},"injectables/JwtStrategy.html":{},"classes/ProcessFile.html":{},"controllers/ReviewController.html":{},"classes/ReviewEntity.html":{},"modules/ReviewModule.html":{},"injectables/ReviewRepository.html":{},"injectables/ReviewService.html":{},"guards/RolesGuard.html":{},"interfaces/RuntimeSetismConfig.html":{},"interfaces/SuperadminCredentials.html":{},"interfaces/SwaggerOptions.html":{},"classes/UpdateAuthorDto.html":{},"classes/UpdateBookDto.html":{},"classes/UpdateCategoryDto.html":{},"classes/UpdateReviewDto.html":{},"classes/UpdateUserDto.html":{},"classes/UploadBookDto.html":{},"controllers/UserController.html":{},"classes/UserEntity.html":{},"modules/UserModule.html":{},"injectables/UserRepository.html":{},"injectables/UserService.html":{},"contributing.html":{},"coverage.html":{},"dependencies.html":{},"miscellaneous/enumerations.html":{},"miscellaneous/functions.html":{},"index.html":{},"license.html":{},"modules.html":{},"overview.html":{},"miscellaneous/typealiases.html":{},"miscellaneous/variables.html":{}}}],["maxage",{"_index":32,"title":{},"body":{"interfaces/ApiOptions.html":{}}}],["maxlength",{"_index":269,"title":{},"body":{"classes/AuthorEntity.html":{},"classes/BookEntity.html":{},"classes/CategoryEntity.html":{},"classes/ReviewEntity.html":{},"classes/UserEntity.html":{}}}],["means",{"_index":1052,"title":{},"body":{"index.html":{}}}],["measure",{"_index":1188,"title":{},"body":{"miscellaneous/variables.html":{}}}],["merchantability",{"_index":1139,"title":{},"body":{"license.html":{}}}],["merge",{"_index":1117,"title":{},"body":{"license.html":{}}}],["merit.'})@isstring({message",{"_index":452,"title":{},"body":{"classes/CreateCategoryDto.html":{}}}],["message",{"_index":137,"title":{},"body":{"classes/AuthDto.html":{},"classes/CreateAuthorDto.html":{},"classes/CreateBookDto.html":{},"classes/CreateCategoryDto.html":{},"classes/CreateReadingListDto.html":{},"classes/CreateReviewDto.html":{},"classes/CreateUserDto.html":{},"classes/UpdateBookDto.html":{},"classes/UpdateUserDto.html":{}}}],["messages",{"_index":1064,"title":{},"body":{"index.html":{}}}],["metadata",{"_index":888,"title":{},"body":{"dependencies.html":{}}}],["methods",{"_index":90,"title":{},"body":{"controllers/AuthController.html":{},"injectables/AuthService.html":{},"controllers/AuthorController.html":{},"injectables/AuthorRepository.html":{},"injectables/AuthorService.html":{},"controllers/BookController.html":{},"injectables/BookRepository.html":{},"injectables/BookService.html":{},"controllers/CategoryController.html":{},"injectables/CategoryRepository.html":{},"injectables/CategoryService.html":{},"classes/ConfigService.html":{},"injectables/DatabaseService.html":{},"classes/EntityRepository.html":{},"injectables/GoogleStrategy.html":{},"injectables/JwtStrategy.html":{},"classes/ProcessFile.html":{},"controllers/ReviewController.html":{},"injectables/ReviewRepository.html":{},"injectables/ReviewService.html":{},"guards/RolesGuard.html":{},"controllers/UserController.html":{},"injectables/UserRepository.html":{},"injectables/UserService.html":{}}}],["middleware",{"_index":17,"title":{},"body":{"interfaces/ApiOptions.html":{},"interfaces/RuntimeSetismConfig.html":{},"index.html":{}}}],["min",{"_index":343,"title":{},"body":{"classes/BookEntity.html":{}}}],["mind",{"_index":1207,"title":{},"body":{"miscellaneous/variables.html":{}}}],["minlength",{"_index":272,"title":{},"body":{"classes/AuthorEntity.html":{},"classes/BookEntity.html":{},"classes/CategoryEntity.html":{},"classes/ReviewEntity.html":{},"classes/UserEntity.html":{}}}],["miscellaneous",{"_index":899,"title":{"miscellaneous/enumerations.html":{},"miscellaneous/functions.html":{},"miscellaneous/typealiases.html":{},"miscellaneous/variables.html":{}},"body":{"miscellaneous/enumerations.html":{},"miscellaneous/functions.html":{},"miscellaneous/typealiases.html":{},"miscellaneous/variables.html":{}}}],["mit",{"_index":1092,"title":{},"body":{"index.html":{},"license.html":{}}}],["mode",{"_index":1027,"title":{},"body":{"index.html":{}}}],["model",{"_index":291,"title":{},"body":{"injectables/AuthorRepository.html":{},"injectables/BookRepository.html":{},"injectables/CategoryRepository.html":{},"classes/EntityRepository.html":{},"injectables/ReviewRepository.html":{},"injectables/UserRepository.html":{}}}],["modify",{"_index":1116,"title":{},"body":{"license.html":{}}}],["module",{"_index":67,"title":{"modules/AppModule.html":{},"modules/AuthModule.html":{},"modules/AuthorModule.html":{},"modules/BookModule.html":{},"modules/CategoryModule.html":{},"modules/ConfigModule.html":{},"modules/DatabaseModule.html":{},"modules/ReviewModule.html":{},"modules/UserModule.html":{}},"body":{}}],["modules",{"_index":69,"title":{"modules.html":{}},"body":{"modules/AppModule.html":{},"modules/AuthModule.html":{},"modules/AuthorModule.html":{},"modules/BookModule.html":{},"modules/CategoryModule.html":{},"modules/ConfigModule.html":{},"modules/DatabaseModule.html":{},"modules/ReviewModule.html":{},"modules/UserModule.html":{},"modules.html":{},"overview.html":{}}}],["mold",{"_index":1208,"title":{},"body":{"miscellaneous/variables.html":{}}}],["mongodb",{"_index":1039,"title":{},"body":{"index.html":{}}}],["mongoose",{"_index":878,"title":{},"body":{"dependencies.html":{},"index.html":{}}}],["more",{"_index":982,"title":{},"body":{"index.html":{}}}],["multer",{"_index":880,"title":{},"body":{"dependencies.html":{}}}],["name",{"_index":102,"title":{},"body":{"controllers/AuthController.html":{},"injectables/AuthService.html":{},"controllers/AuthorController.html":{},"classes/AuthorEntity.html":{},"injectables/AuthorRepository.html":{},"injectables/AuthorService.html":{},"controllers/BookController.html":{},"classes/BookEntity.html":{},"injectables/BookRepository.html":{},"injectables/BookService.html":{},"controllers/CategoryController.html":{},"classes/CategoryEntity.html":{},"injectables/CategoryRepository.html":{},"injectables/CategoryService.html":{},"classes/CreateAuthorDto.html":{},"classes/CreateBookDto.html":{},"classes/CreateCategoryDto.html":{},"classes/CreateReadingListDto.html":{},"classes/CreateUserDto.html":{},"injectables/DatabaseService.html":{},"classes/EntityRepository.html":{},"injectables/GoogleStrategy.html":{},"interfaces/IProcessFile.html":{},"injectables/JwtStrategy.html":{},"classes/ProcessFile.html":{},"controllers/ReviewController.html":{},"injectables/ReviewRepository.html":{},"injectables/ReviewService.html":{},"guards/RolesGuard.html":{},"controllers/UserController.html":{},"injectables/UserRepository.html":{},"injectables/UserService.html":{},"miscellaneous/functions.html":{}}}],["nestjs",{"_index":1035,"title":{},"body":{"index.html":{}}}],["nestjs/common",{"_index":854,"title":{},"body":{"dependencies.html":{}}}],["nestjs/config",{"_index":856,"title":{},"body":{"dependencies.html":{}}}],["nestjs/core",{"_index":858,"title":{},"body":{"dependencies.html":{}}}],["nestjs/jwt",{"_index":859,"title":{},"body":{"dependencies.html":{}}}],["nestjs/mongoose",{"_index":860,"title":{},"body":{"dependencies.html":{}}}],["nestjs/passport",{"_index":862,"title":{},"body":{"dependencies.html":{}}}],["nestjs/platform",{"_index":863,"title":{},"body":{"dependencies.html":{}}}],["nestjs/swagger",{"_index":864,"title":{},"body":{"dependencies.html":{}}}],["new",{"_index":643,"title":{},"body":{"classes/UpdateUserDto.html":{},"contributing.html":{},"coverage.html":{},"index.html":{}}}],["newwish",{"_index":639,"title":{},"body":{"classes/UpdateUserDto.html":{}}}],["node",{"_index":771,"title":{},"body":{"contributing.html":{}}}],["noninfringement",{"_index":1143,"title":{},"body":{"license.html":{}}}],["notice",{"_index":1130,"title":{},"body":{"license.html":{}}}],["novels",{"_index":450,"title":{},"body":{"classes/CreateCategoryDto.html":{}}}],["npm",{"_index":770,"title":{},"body":{"contributing.html":{}}}],["null",{"_index":263,"title":{},"body":{"classes/AuthorEntity.html":{},"classes/CategoryEntity.html":{},"classes/CreateCategoryDto.html":{},"classes/UserEntity.html":{}}}],["number",{"_index":52,"title":{},"body":{"interfaces/ApiOptions.html":{},"interfaces/AuthOptions.html":{},"classes/BookEntity.html":{},"classes/CreateBookDto.html":{},"classes/CreateReviewDto.html":{},"interfaces/IResizeImageArgs.html":{},"classes/ReviewEntity.html":{},"classes/UpdateBookDto.html":{},"classes/UpdateUserDto.html":{}}}],["number!'})@isdefined({message",{"_index":446,"title":{},"body":{"classes/CreateBookDto.html":{}}}],["number!'})@isoptional",{"_index":633,"title":{},"body":{"classes/UpdateBookDto.html":{}}}],["oauth20",{"_index":884,"title":{},"body":{"dependencies.html":{}}}],["object",{"_index":310,"title":{},"body":{"injectables/AuthorRepository.html":{},"injectables/BookRepository.html":{},"injectables/CategoryRepository.html":{},"classes/EntityRepository.html":{},"classes/ProcessFile.html":{},"injectables/ReviewRepository.html":{},"injectables/UserRepository.html":{}}}],["objectid",{"_index":275,"title":{},"body":{"classes/AuthorEntity.html":{},"classes/BaseEntitySchema.html":{},"classes/BookEntity.html":{},"classes/CategoryEntity.html":{},"classes/ReviewEntity.html":{},"classes/UserEntity.html":{}}}],["obtaining",{"_index":1107,"title":{},"body":{"license.html":{}}}],["occurrences",{"_index":997,"title":{},"body":{"index.html":{}}}],["ongoing",{"_index":764,"title":{},"body":{"contributing.html":{}}}],["open",{"_index":687,"title":{},"body":{"contributing.html":{},"index.html":{}}}],["openapiobject",{"_index":923,"title":{},"body":{"miscellaneous/functions.html":{}}}],["opinion",{"_index":1025,"title":{},"body":{"index.html":{}}}],["optional",{"_index":20,"title":{},"body":{"interfaces/ApiOptions.html":{},"controllers/AuthController.html":{},"interfaces/AuthOptions.html":{},"injectables/AuthService.html":{},"controllers/AuthorController.html":{},"classes/AuthorEntity.html":{},"injectables/AuthorRepository.html":{},"injectables/AuthorService.html":{},"controllers/BookController.html":{},"injectables/BookRepository.html":{},"injectables/BookService.html":{},"controllers/CategoryController.html":{},"injectables/CategoryRepository.html":{},"injectables/CategoryService.html":{},"interfaces/ConnectionOptions.html":{},"classes/CreateAuthorDto.html":{},"classes/CreateReadingListDto.html":{},"classes/CreateReviewDto.html":{},"injectables/DatabaseService.html":{},"classes/EntityRepository.html":{},"injectables/GoogleStrategy.html":{},"interfaces/IProcessFile.html":{},"interfaces/IResizeImageArgs.html":{},"injectables/JwtStrategy.html":{},"classes/ProcessFile.html":{},"controllers/ReviewController.html":{},"injectables/ReviewRepository.html":{},"injectables/ReviewService.html":{},"guards/RolesGuard.html":{},"interfaces/SwaggerOptions.html":{},"classes/UpdateBookDto.html":{},"classes/UpdateUserDto.html":{},"classes/UploadBookDto.html":{},"controllers/UserController.html":{},"injectables/UserRepository.html":{},"injectables/UserService.html":{},"miscellaneous/functions.html":{}}}],["options",{"_index":64,"title":{},"body":{"interfaces/ApiOptions.html":{},"interfaces/RuntimeSetismConfig.html":{}}}],["optionssuccessstatus",{"_index":34,"title":{},"body":{"interfaces/ApiOptions.html":{}}}],["origin",{"_index":31,"title":{},"body":{"interfaces/ApiOptions.html":{},"contributing.html":{}}}],["otherwise",{"_index":1154,"title":{},"body":{"license.html":{}}}],["out",{"_index":83,"title":{},"body":{"modules/AppModule.html":{},"modules/AuthModule.html":{},"modules/AuthorModule.html":{},"modules/BookModule.html":{},"modules/CategoryModule.html":{},"modules/ConfigModule.html":{},"modules/DatabaseModule.html":{},"modules/ReviewModule.html":{},"modules/UserModule.html":{},"license.html":{},"overview.html":{}}}],["output",{"_index":550,"title":{},"body":{"classes/ProcessFile.html":{}}}],["outrageous",{"_index":955,"title":{},"body":{"index.html":{}}}],["overall",{"_index":60,"title":{},"body":{"interfaces/ApiOptions.html":{}}}],["overlooked",{"_index":1198,"title":{},"body":{"miscellaneous/variables.html":{}}}],["overview",{"_index":1160,"title":{"overview.html":{}},"body":{"overview.html":{}}}],["package",{"_index":707,"title":{"dependencies.html":{}},"body":{"contributing.html":{}}}],["packagesyarn",{"_index":779,"title":{},"body":{"contributing.html":{}}}],["page",{"_index":63,"title":{},"body":{"interfaces/ApiOptions.html":{},"interfaces/SwaggerOptions.html":{},"index.html":{}}}],["pages",{"_index":1098,"title":{},"body":{"index.html":{}}}],["parameters",{"_index":101,"title":{},"body":{"controllers/AuthController.html":{},"injectables/AuthService.html":{},"controllers/AuthorController.html":{},"injectables/AuthorRepository.html":{},"injectables/AuthorService.html":{},"controllers/BookController.html":{},"injectables/BookRepository.html":{},"injectables/BookService.html":{},"controllers/CategoryController.html":{},"injectables/CategoryRepository.html":{},"injectables/CategoryService.html":{},"injectables/DatabaseService.html":{},"classes/EntityRepository.html":{},"injectables/GoogleStrategy.html":{},"injectables/JwtStrategy.html":{},"classes/ProcessFile.html":{},"controllers/ReviewController.html":{},"injectables/ReviewRepository.html":{},"injectables/ReviewService.html":{},"guards/RolesGuard.html":{},"controllers/UserController.html":{},"injectables/UserRepository.html":{},"injectables/UserService.html":{},"miscellaneous/functions.html":{}}}],["parent",{"_index":374,"title":{},"body":{"classes/CategoryEntity.html":{},"classes/CreateCategoryDto.html":{}}}],["part",{"_index":989,"title":{},"body":{"index.html":{}}}],["partial",{"_index":294,"title":{},"body":{"injectables/AuthorRepository.html":{},"injectables/BookRepository.html":{},"injectables/CategoryRepository.html":{},"classes/EntityRepository.html":{},"injectables/ReviewRepository.html":{},"injectables/UserRepository.html":{}}}],["participate",{"_index":1071,"title":{},"body":{"index.html":{}}}],["particular",{"_index":1141,"title":{},"body":{"license.html":{}}}],["passowrd",{"_index":144,"title":{},"body":{"classes/AuthDto.html":{},"classes/CreateUserDto.html":{}}}],["passport",{"_index":882,"title":{},"body":{"dependencies.html":{}}}],["passportjs",{"_index":1041,"title":{},"body":{"index.html":{}}}],["password",{"_index":133,"title":{},"body":{"classes/AuthDto.html":{},"classes/CreateUserDto.html":{},"interfaces/SuperadminCredentials.html":{},"classes/UserEntity.html":{}}}],["password123'})@isdefined({message",{"_index":142,"title":{},"body":{"classes/AuthDto.html":{},"classes/CreateUserDto.html":{}}}],["passwords",{"_index":184,"title":{},"body":{"interfaces/AuthOptions.html":{}}}],["path",{"_index":59,"title":{},"body":{"interfaces/ApiOptions.html":{},"classes/ProcessFile.html":{},"classes/UpdateBookDto.html":{},"miscellaneous/functions.html":{}}}],["paulette",{"_index":426,"title":{},"body":{"classes/CreateAuthorDto.html":{}}}],["payload",{"_index":539,"title":{},"body":{"injectables/JwtStrategy.html":{}}}],["pdf",{"_index":1016,"title":{},"body":{"index.html":{},"miscellaneous/typealiases.html":{}}}],["people",{"_index":963,"title":{},"body":{"index.html":{},"miscellaneous/variables.html":{}}}],["pepper",{"_index":165,"title":{},"body":{"interfaces/AuthOptions.html":{}}}],["per",{"_index":197,"title":{},"body":{"interfaces/AuthOptions.html":{}}}],["performance",{"_index":1002,"title":{},"body":{"index.html":{}}}],["permission",{"_index":1102,"title":{},"body":{"license.html":{}}}],["permit",{"_index":1124,"title":{},"body":{"license.html":{}}}],["person",{"_index":1106,"title":{},"body":{"license.html":{}}}],["persons",{"_index":1125,"title":{},"body":{"license.html":{}}}],["picking",{"_index":1019,"title":{},"body":{"index.html":{}}}],["place",{"_index":691,"title":{},"body":{"contributing.html":{}}}],["placed",{"_index":528,"title":{},"body":{"interfaces/IProcessFile.html":{}}}],["planned",{"_index":762,"title":{},"body":{"contributing.html":{}}}],["plans",{"_index":760,"title":{},"body":{"contributing.html":{}}}],["please",{"_index":1078,"title":{},"body":{"index.html":{}}}],["png",{"_index":1179,"title":{},"body":{"miscellaneous/typealiases.html":{}}}],["point",{"_index":961,"title":{},"body":{"index.html":{}}}],["policies",{"_index":721,"title":{},"body":{"contributing.html":{}}}],["port",{"_index":24,"title":{},"body":{"interfaces/ApiOptions.html":{},"interfaces/RuntimeSetismConfig.html":{}}}],["portions",{"_index":1134,"title":{},"body":{"license.html":{}}}],["positive",{"_index":445,"title":{},"body":{"classes/CreateBookDto.html":{},"classes/CreateReviewDto.html":{},"classes/UpdateBookDto.html":{},"contributing.html":{},"index.html":{}}}],["possible",{"_index":612,"title":{},"body":{"interfaces/RuntimeSetismConfig.html":{},"contributing.html":{}}}],["pr",{"_index":747,"title":{},"body":{"contributing.html":{}}}],["prefix",{"_index":25,"title":{},"body":{"interfaces/ApiOptions.html":{}}}],["prerequisites",{"_index":766,"title":{},"body":{"contributing.html":{}}}],["prettier",{"_index":1051,"title":{},"body":{"index.html":{}}}],["prices",{"_index":957,"title":{},"body":{"index.html":{}}}],["private",{"_index":208,"title":{},"body":{"injectables/AuthService.html":{},"injectables/AuthorRepository.html":{},"injectables/AuthorService.html":{},"injectables/BookRepository.html":{},"injectables/BookService.html":{},"injectables/CategoryRepository.html":{},"classes/ConfigService.html":{},"classes/EntityRepository.html":{},"classes/ProcessFile.html":{},"injectables/ReviewRepository.html":{},"injectables/UserRepository.html":{},"miscellaneous/enumerations.html":{},"index.html":{}}}],["process_file",{"_index":1212,"title":{},"body":{"miscellaneous/variables.html":{}}}],["processavatarupload",{"_index":314,"title":{},"body":{"injectables/AuthorService.html":{}}}],["processavatarupload(file",{"_index":317,"title":{},"body":{"injectables/AuthorService.html":{}}}],["processed",{"_index":524,"title":{},"body":{"interfaces/IProcessFile.html":{},"classes/ProcessFile.html":{}}}],["processfile",{"_index":540,"title":{"classes/ProcessFile.html":{}},"body":{"classes/ProcessFile.html":{},"coverage.html":{}}}],["processfileexttype",{"_index":516,"title":{},"body":{"interfaces/IProcessFile.html":{},"classes/ProcessFile.html":{},"miscellaneous/typealiases.html":{}}}],["processfiletype",{"_index":525,"title":{},"body":{"interfaces/IProcessFile.html":{},"classes/ProcessFile.html":{},"miscellaneous/typealiases.html":{}}}],["processuploadedfiles",{"_index":357,"title":{},"body":{"injectables/BookService.html":{}}}],["processuploadedfiles(f",{"_index":360,"title":{},"body":{"injectables/BookService.html":{}}}],["product",{"_index":711,"title":{},"body":{"contributing.html":{}}}],["production",{"_index":906,"title":{},"body":{"miscellaneous/enumerations.html":{}}}],["productive",{"_index":727,"title":{},"body":{"contributing.html":{}}}],["profile",{"_index":218,"title":{},"body":{"injectables/AuthService.html":{},"injectables/GoogleStrategy.html":{},"index.html":{}}}],["project",{"_index":704,"title":{},"body":{"contributing.html":{},"index.html":{}}}],["projection",{"_index":302,"title":{},"body":{"injectables/AuthorRepository.html":{},"injectables/BookRepository.html":{},"injectables/CategoryRepository.html":{},"classes/EntityRepository.html":{},"injectables/ReviewRepository.html":{},"injectables/UserRepository.html":{}}}],["promise",{"_index":296,"title":{},"body":{"injectables/AuthorRepository.html":{},"injectables/AuthorService.html":{},"injectables/BookRepository.html":{},"injectables/CategoryRepository.html":{},"classes/EntityRepository.html":{},"injectables/GoogleStrategy.html":{},"classes/ProcessFile.html":{},"injectables/ReviewRepository.html":{},"injectables/UserRepository.html":{},"miscellaneous/functions.html":{}}}],["prop",{"_index":276,"title":{},"body":{"classes/AuthorEntity.html":{},"classes/BaseEntitySchema.html":{},"classes/BookEntity.html":{},"classes/CategoryEntity.html":{},"classes/ReviewEntity.html":{},"classes/UserEntity.html":{}}}],["prop(['createreadinglistdto",{"_index":671,"title":{},"body":{"classes/UserEntity.html":{}}}],["prop({default",{"_index":667,"title":{},"body":{"classes/UserEntity.html":{}}}],["prop({required",{"_index":264,"title":{},"body":{"classes/AuthorEntity.html":{},"classes/BookEntity.html":{},"classes/CategoryEntity.html":{},"classes/ReviewEntity.html":{},"classes/UserEntity.html":{}}}],["prop({type",{"_index":668,"title":{},"body":{"classes/UserEntity.html":{}}}],["properties",{"_index":19,"title":{},"body":{"interfaces/ApiOptions.html":{},"classes/AuthDto.html":{},"interfaces/AuthOptions.html":{},"classes/AuthorEntity.html":{},"injectables/AuthorRepository.html":{},"classes/BaseEntitySchema.html":{},"classes/BookEntity.html":{},"injectables/BookRepository.html":{},"classes/CategoryEntity.html":{},"injectables/CategoryRepository.html":{},"classes/ConfigService.html":{},"interfaces/ConnectionOptions.html":{},"classes/CreateAuthorDto.html":{},"classes/CreateBookDto.html":{},"classes/CreateCategoryDto.html":{},"classes/CreateReadingListDto.html":{},"classes/CreateReviewDto.html":{},"classes/CreateUserDto.html":{},"classes/EntityRepository.html":{},"interfaces/IProcessFile.html":{},"interfaces/IResizeImageArgs.html":{},"classes/ProcessFile.html":{},"classes/ReviewEntity.html":{},"injectables/ReviewRepository.html":{},"interfaces/RuntimeSetismConfig.html":{},"interfaces/SuperadminCredentials.html":{},"interfaces/SwaggerOptions.html":{},"classes/UpdateBookDto.html":{},"classes/UpdateUserDto.html":{},"classes/UploadBookDto.html":{},"classes/UserEntity.html":{},"injectables/UserRepository.html":{}}}],["proposed",{"_index":1065,"title":{},"body":{"index.html":{}}}],["provide",{"_index":968,"title":{},"body":{"index.html":{}}}],["provided",{"_index":1135,"title":{},"body":{"license.html":{}}}],["provider",{"_index":664,"title":{},"body":{"classes/UserEntity.html":{}}}],["providerid",{"_index":665,"title":{},"body":{"classes/UserEntity.html":{}}}],["providers",{"_index":157,"title":{},"body":{"modules/AuthModule.html":{},"modules/AuthorModule.html":{},"modules/BookModule.html":{},"modules/CategoryModule.html":{},"modules/DatabaseModule.html":{},"modules/ReviewModule.html":{},"modules/UserModule.html":{}}}],["provides",{"_index":953,"title":{},"body":{"index.html":{}}}],["prs",{"_index":795,"title":{},"body":{"contributing.html":{}}}],["public",{"_index":94,"title":{},"body":{"controllers/AuthController.html":{},"injectables/AuthService.html":{},"classes/AuthorEntity.html":{},"injectables/AuthorRepository.html":{},"injectables/AuthorService.html":{},"injectables/BookRepository.html":{},"injectables/BookService.html":{},"injectables/CategoryRepository.html":{},"injectables/CategoryService.html":{},"classes/EntityRepository.html":{},"injectables/GoogleStrategy.html":{},"injectables/JwtStrategy.html":{},"classes/ProcessFile.html":{},"injectables/ReviewRepository.html":{},"injectables/ReviewService.html":{},"classes/UserEntity.html":{},"injectables/UserRepository.html":{},"injectables/UserService.html":{},"miscellaneous/enumerations.html":{},"index.html":{}}}],["publish",{"_index":1118,"title":{},"body":{"license.html":{}}}],["publisheddate",{"_index":333,"title":{},"body":{"classes/BookEntity.html":{},"classes/UpdateBookDto.html":{}}}],["publisher",{"_index":334,"title":{},"body":{"classes/BookEntity.html":{},"classes/CreateBookDto.html":{},"miscellaneous/enumerations.html":{}}}],["pull",{"_index":724,"title":{},"body":{"contributing.html":{}}}],["purpose",{"_index":1142,"title":{},"body":{"license.html":{}}}],["push",{"_index":793,"title":{},"body":{"contributing.html":{}}}],["quick",{"_index":944,"title":{},"body":{"index.html":{}}}],["r",{"_index":216,"title":{},"body":{"injectables/AuthService.html":{},"injectables/ReviewService.html":{}}}],["rating",{"_index":475,"title":{},"body":{"classes/CreateReviewDto.html":{},"classes/ReviewEntity.html":{}}}],["rawname",{"_index":933,"title":{},"body":{"miscellaneous/functions.html":{}}}],["read",{"_index":937,"title":{},"body":{"index.html":{}}}],["reader",{"_index":913,"title":{},"body":{"miscellaneous/enumerations.html":{}}}],["readers",{"_index":1022,"title":{},"body":{"index.html":{}}}],["readfile",{"_index":846,"title":{},"body":{"coverage.html":{},"miscellaneous/functions.html":{}}}],["readfile(path",{"_index":929,"title":{},"body":{"miscellaneous/functions.html":{}}}],["reading",{"_index":970,"title":{},"body":{"index.html":{}}}],["readinglist",{"_index":666,"title":{},"body":{"classes/UserEntity.html":{}}}],["readinglistkind",{"_index":902,"title":{},"body":{"miscellaneous/enumerations.html":{},"miscellaneous/typealiases.html":{}}}],["readinglisttype",{"_index":467,"title":{},"body":{"classes/CreateReadingListDto.html":{},"miscellaneous/typealiases.html":{}}}],["readonly",{"_index":261,"title":{},"body":{"classes/AuthorEntity.html":{},"injectables/AuthorRepository.html":{},"classes/BaseEntitySchema.html":{},"classes/BookEntity.html":{},"injectables/BookRepository.html":{},"classes/CategoryEntity.html":{},"injectables/CategoryRepository.html":{},"classes/ConfigService.html":{},"classes/EntityRepository.html":{},"classes/ProcessFile.html":{},"classes/ReviewEntity.html":{},"injectables/ReviewRepository.html":{},"classes/UserEntity.html":{},"injectables/UserRepository.html":{}}}],["record",{"_index":112,"title":{},"body":{"controllers/AuthController.html":{},"controllers/AuthorController.html":{},"injectables/AuthorRepository.html":{},"controllers/BookController.html":{},"injectables/BookRepository.html":{},"controllers/CategoryController.html":{},"injectables/CategoryRepository.html":{},"classes/EntityRepository.html":{},"controllers/ReviewController.html":{},"injectables/ReviewRepository.html":{},"controllers/UserController.html":{},"injectables/UserRepository.html":{}}}],["ref",{"_index":340,"title":{},"body":{"classes/BookEntity.html":{},"classes/CategoryEntity.html":{}}}],["references",{"_index":431,"title":{},"body":{"classes/CreateBookDto.html":{},"classes/UpdateBookDto.html":{}}}],["reflect",{"_index":887,"title":{},"body":{"dependencies.html":{}}}],["reflector",{"_index":607,"title":{},"body":{"guards/RolesGuard.html":{}}}],["refreshed",{"_index":193,"title":{},"body":{"interfaces/AuthOptions.html":{}}}],["relative",{"_index":555,"title":{},"body":{"classes/ProcessFile.html":{}}}],["relaxed",{"_index":983,"title":{},"body":{"index.html":{}}}],["release",{"_index":443,"title":{},"body":{"classes/CreateBookDto.html":{}}}],["releasedate",{"_index":335,"title":{},"body":{"classes/BookEntity.html":{},"classes/CreateBookDto.html":{}}}],["reminds",{"_index":1191,"title":{},"body":{"miscellaneous/variables.html":{}}}],["remove",{"_index":229,"title":{},"body":{"controllers/AuthorController.html":{},"injectables/AuthorService.html":{},"controllers/BookController.html":{},"injectables/BookService.html":{},"controllers/CategoryController.html":{},"injectables/CategoryService.html":{},"controllers/ReviewController.html":{},"injectables/ReviewService.html":{},"controllers/UserController.html":{},"injectables/UserService.html":{}}}],["remove(id",{"_index":248,"title":{},"body":{"controllers/AuthorController.html":{},"injectables/AuthorService.html":{},"controllers/BookController.html":{},"injectables/BookService.html":{},"controllers/CategoryController.html":{},"injectables/CategoryService.html":{},"controllers/UserController.html":{},"injectables/UserService.html":{}}}],["remove(userid",{"_index":574,"title":{},"body":{"controllers/ReviewController.html":{},"injectables/ReviewService.html":{}}}],["removed.'})@apinotfoundresponse({description",{"_index":576,"title":{},"body":{"controllers/ReviewController.html":{}}}],["repo",{"_index":777,"title":{},"body":{"contributing.html":{}}}],["reporting",{"_index":729,"title":{},"body":{"contributing.html":{}}}],["req",{"_index":107,"title":{},"body":{"controllers/AuthController.html":{}}}],["request",{"_index":98,"title":{},"body":{"controllers/AuthController.html":{},"contributing.html":{},"index.html":{}}}],["requests",{"_index":725,"title":{},"body":{"contributing.html":{},"index.html":{}}}],["require",{"_index":767,"title":{},"body":{"contributing.html":{}}}],["required",{"_index":61,"title":{},"body":{"interfaces/ApiOptions.html":{},"classes/CreateAuthorDto.html":{},"classes/CreateReviewDto.html":{},"interfaces/RuntimeSetismConfig.html":{},"classes/UpdateBookDto.html":{},"classes/UpdateUserDto.html":{}}}],["reset",{"_index":82,"title":{},"body":{"modules/AppModule.html":{},"modules/AuthModule.html":{},"modules/AuthorModule.html":{},"modules/BookModule.html":{},"modules/CategoryModule.html":{},"modules/ConfigModule.html":{},"modules/DatabaseModule.html":{},"modules/ReviewModule.html":{},"modules/UserModule.html":{},"overview.html":{}}}],["resizeandsave",{"_index":544,"title":{},"body":{"classes/ProcessFile.html":{}}}],["resizeandsave(undefined",{"_index":552,"title":{},"body":{"classes/ProcessFile.html":{}}}],["resized",{"_index":554,"title":{},"body":{"classes/ProcessFile.html":{}}}],["respectful",{"_index":728,"title":{},"body":{"contributing.html":{}}}],["rest",{"_index":10,"title":{},"body":{"interfaces/ApiOptions.html":{},"interfaces/RuntimeSetismConfig.html":{}}}],["restriction",{"_index":1113,"title":{},"body":{"license.html":{}}}],["results",{"_index":65,"title":{},"body":{"interfaces/ApiOptions.html":{},"modules/AppModule.html":{},"controllers/AuthController.html":{},"classes/AuthDto.html":{},"modules/AuthModule.html":{},"interfaces/AuthOptions.html":{},"injectables/AuthService.html":{},"controllers/AuthorController.html":{},"classes/AuthorEntity.html":{},"modules/AuthorModule.html":{},"injectables/AuthorRepository.html":{},"injectables/AuthorService.html":{},"classes/BaseEntitySchema.html":{},"controllers/BookController.html":{},"classes/BookEntity.html":{},"modules/BookModule.html":{},"injectables/BookRepository.html":{},"injectables/BookService.html":{},"controllers/CategoryController.html":{},"classes/CategoryEntity.html":{},"modules/CategoryModule.html":{},"injectables/CategoryRepository.html":{},"injectables/CategoryService.html":{},"modules/ConfigModule.html":{},"classes/ConfigService.html":{},"interfaces/ConnectionOptions.html":{},"classes/CreateAuthorDto.html":{},"classes/CreateBookDto.html":{},"classes/CreateCategoryDto.html":{},"classes/CreateReadingListDto.html":{},"classes/CreateReviewDto.html":{},"classes/CreateUserDto.html":{},"modules/DatabaseModule.html":{},"injectables/DatabaseService.html":{},"classes/EntityRepository.html":{},"injectables/GoogleAuthGuard.html":{},"injectables/GoogleStrategy.html":{},"interfaces/IProcessFile.html":{},"interfaces/IResizeImageArgs.html":{},"injectables/JwtAuthGuard.html":{},"injectables/JwtStrategy.html":{},"classes/ProcessFile.html":{},"controllers/ReviewController.html":{},"classes/ReviewEntity.html":{},"modules/ReviewModule.html":{},"injectables/ReviewRepository.html":{},"injectables/ReviewService.html":{},"guards/RolesGuard.html":{},"interfaces/RuntimeSetismConfig.html":{},"interfaces/SuperadminCredentials.html":{},"interfaces/SwaggerOptions.html":{},"classes/UpdateAuthorDto.html":{},"classes/UpdateBookDto.html":{},"classes/UpdateCategoryDto.html":{},"classes/UpdateReviewDto.html":{},"classes/UpdateUserDto.html":{},"classes/UploadBookDto.html":{},"controllers/UserController.html":{},"classes/UserEntity.html":{},"modules/UserModule.html":{},"injectables/UserRepository.html":{},"injectables/UserService.html":{},"contributing.html":{},"coverage.html":{},"dependencies.html":{},"miscellaneous/enumerations.html":{},"miscellaneous/functions.html":{},"index.html":{},"license.html":{},"modules.html":{},"overview.html":{},"miscellaneous/typealiases.html":{},"miscellaneous/variables.html":{}}}],["returned.'})@apibadrequestresponse({description",{"_index":114,"title":{},"body":{"controllers/AuthController.html":{}}}],["returned.'})@apinotfoundresponse({description",{"_index":241,"title":{},"body":{"controllers/AuthorController.html":{},"controllers/BookController.html":{},"controllers/CategoryController.html":{},"controllers/ReviewController.html":{},"controllers/UserController.html":{}}}],["returns",{"_index":104,"title":{},"body":{"controllers/AuthController.html":{},"injectables/AuthService.html":{},"controllers/AuthorController.html":{},"injectables/AuthorRepository.html":{},"injectables/AuthorService.html":{},"controllers/BookController.html":{},"injectables/BookRepository.html":{},"injectables/BookService.html":{},"controllers/CategoryController.html":{},"injectables/CategoryRepository.html":{},"injectables/CategoryService.html":{},"classes/ConfigService.html":{},"injectables/DatabaseService.html":{},"classes/EntityRepository.html":{},"injectables/GoogleStrategy.html":{},"injectables/JwtStrategy.html":{},"classes/ProcessFile.html":{},"controllers/ReviewController.html":{},"injectables/ReviewRepository.html":{},"injectables/ReviewService.html":{},"guards/RolesGuard.html":{},"controllers/UserController.html":{},"injectables/UserRepository.html":{},"injectables/UserService.html":{},"miscellaneous/functions.html":{}}}],["review",{"_index":481,"title":{},"body":{"classes/CreateReviewDto.html":{},"classes/UpdateBookDto.html":{},"contributing.html":{},"index.html":{}}}],["review.dto.ts",{"_index":473,"title":{},"body":{"classes/CreateReviewDto.html":{},"classes/UpdateReviewDto.html":{},"coverage.html":{}}}],["review/:reviewid",{"_index":584,"title":{},"body":{"controllers/ReviewController.html":{}}}],["reviewcontroller",{"_index":556,"title":{"controllers/ReviewController.html":{}},"body":{"controllers/ReviewController.html":{},"modules/ReviewModule.html":{},"coverage.html":{}}}],["reviewdocument",{"_index":1174,"title":{},"body":{"miscellaneous/typealiases.html":{}}}],["reviewentity",{"_index":585,"title":{"classes/ReviewEntity.html":{}},"body":{"classes/ReviewEntity.html":{},"coverage.html":{}}}],["reviewentityschema",{"_index":836,"title":{},"body":{"coverage.html":{},"miscellaneous/variables.html":{}}}],["reviewer",{"_index":476,"title":{},"body":{"classes/CreateReviewDto.html":{}}}],["reviewid",{"_index":575,"title":{},"body":{"controllers/ReviewController.html":{},"injectables/ReviewService.html":{}}}],["reviewmodel",{"_index":598,"title":{},"body":{"injectables/ReviewRepository.html":{}}}],["reviewmodule",{"_index":79,"title":{"modules/ReviewModule.html":{}},"body":{"modules/AppModule.html":{},"modules/ReviewModule.html":{},"modules.html":{},"overview.html":{}}}],["reviewrepository",{"_index":593,"title":{"injectables/ReviewRepository.html":{}},"body":{"modules/ReviewModule.html":{},"injectables/ReviewRepository.html":{},"injectables/ReviewService.html":{},"coverage.html":{},"overview.html":{}}}],["reviews",{"_index":336,"title":{},"body":{"classes/BookEntity.html":{},"classes/UpdateBookDto.html":{},"index.html":{},"miscellaneous/variables.html":{}}}],["reviewservice",{"_index":594,"title":{"injectables/ReviewService.html":{}},"body":{"modules/ReviewModule.html":{},"injectables/ReviewService.html":{},"coverage.html":{},"overview.html":{}}}],["right",{"_index":1004,"title":{},"body":{"index.html":{},"miscellaneous/variables.html":{}}}],["rights",{"_index":1115,"title":{},"body":{"license.html":{}}}],["rimraf",{"_index":890,"title":{},"body":{"dependencies.html":{}}}],["roadmap",{"_index":759,"title":{},"body":{"contributing.html":{},"index.html":{}}}],["role",{"_index":221,"title":{},"body":{"injectables/AuthService.html":{},"classes/UserEntity.html":{},"miscellaneous/enumerations.html":{},"miscellaneous/typealiases.html":{},"miscellaneous/variables.html":{}}}],["role.admin",{"_index":236,"title":{},"body":{"controllers/AuthorController.html":{},"controllers/BookController.html":{}}}],["role.super_admin",{"_index":570,"title":{},"body":{"controllers/ReviewController.html":{}}}],["role.super_admin)@useguards(jwtauthguard",{"_index":237,"title":{},"body":{"controllers/AuthorController.html":{},"controllers/BookController.html":{},"controllers/CategoryController.html":{}}}],["roles",{"_index":1214,"title":{},"body":{"miscellaneous/variables.html":{}}}],["roles_key",{"_index":809,"title":{},"body":{"coverage.html":{},"miscellaneous/variables.html":{}}}],["rolesguard",{"_index":602,"title":{"guards/RolesGuard.html":{}},"body":{"guards/RolesGuard.html":{},"coverage.html":{}}}],["rolesguard)@delete(':id",{"_index":250,"title":{},"body":{"controllers/AuthorController.html":{},"controllers/BookController.html":{},"controllers/CategoryController.html":{}}}],["rolesguard)@get",{"_index":656,"title":{},"body":{"controllers/UserController.html":{}}}],["rolesguard)@patch(':id",{"_index":253,"title":{},"body":{"controllers/AuthorController.html":{},"controllers/BookController.html":{},"controllers/CategoryController.html":{}}}],["rolesguard)@post",{"_index":369,"title":{},"body":{"controllers/CategoryController.html":{}}}],["rolesguard)@useinterceptors(undefined)@post",{"_index":238,"title":{},"body":{"controllers/AuthorController.html":{}}}],["rolesguard)@useinterceptors(undefined)@post('create",{"_index":326,"title":{},"body":{"controllers/BookController.html":{}}}],["roletype",{"_index":222,"title":{},"body":{"injectables/AuthService.html":{},"classes/ReviewEntity.html":{},"classes/UserEntity.html":{},"miscellaneous/typealiases.html":{}}}],["rules",{"_index":713,"title":{},"body":{"contributing.html":{},"index.html":{}}}],["run",{"_index":780,"title":{},"body":{"contributing.html":{},"index.html":{}}}],["runtimesetismconfig",{"_index":400,"title":{"interfaces/RuntimeSetismConfig.html":{}},"body":{"classes/ConfigService.html":{},"interfaces/RuntimeSetismConfig.html":{},"coverage.html":{}}}],["rxjs",{"_index":892,"title":{},"body":{"dependencies.html":{}}}],["saved",{"_index":521,"title":{},"body":{"interfaces/IProcessFile.html":{},"classes/ProcessFile.html":{}}}],["savefile",{"_index":545,"title":{},"body":{"classes/ProcessFile.html":{}}}],["saving",{"_index":1010,"title":{},"body":{"index.html":{}}}],["schemafactory.createforclass(authorentity",{"_index":1187,"title":{},"body":{"miscellaneous/variables.html":{}}}],["schemafactory.createforclass(bookentity",{"_index":1210,"title":{},"body":{"miscellaneous/variables.html":{}}}],["schemafactory.createforclass(categoryentity",{"_index":1211,"title":{},"body":{"miscellaneous/variables.html":{}}}],["schemafactory.createforclass(reviewentity",{"_index":1213,"title":{},"body":{"miscellaneous/variables.html":{}}}],["schemafactory.createforclass(userentity",{"_index":1216,"title":{},"body":{"miscellaneous/variables.html":{}}}],["scope",{"_index":709,"title":{},"body":{"contributing.html":{}}}],["search",{"_index":1028,"title":{},"body":{"index.html":{}}}],["secret",{"_index":173,"title":{},"body":{"interfaces/AuthOptions.html":{}}}],["security",{"_index":182,"title":{},"body":{"interfaces/AuthOptions.html":{}}}],["see",{"_index":42,"title":{},"body":{"interfaces/ApiOptions.html":{},"contributing.html":{},"index.html":{}}}],["seen",{"_index":951,"title":{},"body":{"index.html":{}}}],["self",{"_index":993,"title":{},"body":{"index.html":{}}}],["sell",{"_index":1122,"title":{},"body":{"license.html":{}}}],["server",{"_index":41,"title":{},"body":{"interfaces/ApiOptions.html":{}}}],["serveryarn",{"_index":781,"title":{},"body":{"contributing.html":{}}}],["service",{"_index":967,"title":{},"body":{"index.html":{}}}],["services",{"_index":952,"title":{},"body":{"index.html":{}}}],["set",{"_index":39,"title":{},"body":{"interfaces/ApiOptions.html":{},"index.html":{}}}],["setdefaultconfig",{"_index":393,"title":{},"body":{"classes/ConfigService.html":{}}}],["setism",{"_index":9,"title":{},"body":{"interfaces/ApiOptions.html":{}}}],["setismconfig",{"_index":615,"title":{},"body":{"interfaces/RuntimeSetismConfig.html":{}}}],["setmetadata(roles_key",{"_index":1215,"title":{},"body":{"miscellaneous/variables.html":{}}}],["sets",{"_index":174,"title":{},"body":{"interfaces/AuthOptions.html":{}}}],["settings",{"_index":617,"title":{},"body":{"interfaces/RuntimeSetismConfig.html":{}}}],["shall",{"_index":1131,"title":{},"body":{"license.html":{}}}],["share",{"_index":1014,"title":{},"body":{"index.html":{}}}],["sharp",{"_index":894,"title":{},"body":{"dependencies.html":{}}}],["sharp.resizeoptions",{"_index":534,"title":{},"body":{"interfaces/IResizeImageArgs.html":{}}}],["sharpexttype",{"_index":1176,"title":{},"body":{"miscellaneous/typealiases.html":{}}}],["shields",{"_index":1095,"title":{},"body":{"index.html":{}}}],["short",{"_index":797,"title":{},"body":{"contributing.html":{}}}],["show",{"_index":680,"title":{},"body":{"injectables/UserService.html":{}}}],["show(id",{"_index":681,"title":{},"body":{"injectables/UserService.html":{}}}],["signupwithemailandpassword",{"_index":96,"title":{},"body":{"controllers/AuthController.html":{},"injectables/AuthService.html":{}}}],["signupwithemailandpassword(createuserdto",{"_index":121,"title":{},"body":{"controllers/AuthController.html":{}}}],["signupwithemailandpassword(undefined",{"_index":219,"title":{},"body":{"injectables/AuthService.html":{}}}],["signusertoken",{"_index":209,"title":{},"body":{"injectables/AuthService.html":{}}}],["signusertoken(id",{"_index":220,"title":{},"body":{"injectables/AuthService.html":{}}}],["software",{"_index":1109,"title":{},"body":{"license.html":{}}}],["soon",{"_index":750,"title":{},"body":{"contributing.html":{}}}],["source",{"_index":626,"title":{},"body":{"classes/UpdateBookDto.html":{},"contributing.html":{},"index.html":{}}}],["span",{"_index":196,"title":{},"body":{"interfaces/AuthOptions.html":{}}}],["specification",{"_index":1085,"title":{},"body":{"index.html":{}}}],["spoken",{"_index":998,"title":{},"body":{"index.html":{}}}],["src",{"_index":1047,"title":{},"body":{"index.html":{}}}],["src/.../author.controller.ts",{"_index":1183,"title":{},"body":{"miscellaneous/variables.html":{}}}],["src/.../author.entity.ts",{"_index":1168,"title":{},"body":{"miscellaneous/typealiases.html":{},"miscellaneous/variables.html":{}}}],["src/.../book.entity.ts",{"_index":1170,"title":{},"body":{"miscellaneous/typealiases.html":{},"miscellaneous/variables.html":{}}}],["src/.../category.controller.ts",{"_index":1184,"title":{},"body":{"miscellaneous/variables.html":{}}}],["src/.../category.entity.ts",{"_index":1172,"title":{},"body":{"miscellaneous/typealiases.html":{},"miscellaneous/variables.html":{}}}],["src/.../config.interface.ts",{"_index":901,"title":{},"body":{"miscellaneous/enumerations.html":{}}}],["src/.../create",{"_index":1182,"title":{},"body":{"miscellaneous/variables.html":{}}}],["src/.../file",{"_index":919,"title":{},"body":{"miscellaneous/functions.html":{}}}],["src/.../formatters.ts",{"_index":920,"title":{},"body":{"miscellaneous/functions.html":{}}}],["src/.../main.ts",{"_index":917,"title":{},"body":{"miscellaneous/functions.html":{},"miscellaneous/variables.html":{}}}],["src/.../process",{"_index":1173,"title":{},"body":{"miscellaneous/typealiases.html":{},"miscellaneous/variables.html":{}}}],["src/.../reading",{"_index":903,"title":{},"body":{"miscellaneous/enumerations.html":{},"miscellaneous/typealiases.html":{}}}],["src/.../review.controller.ts",{"_index":1185,"title":{},"body":{"miscellaneous/variables.html":{}}}],["src/.../review.entity.ts",{"_index":1175,"title":{},"body":{"miscellaneous/typealiases.html":{},"miscellaneous/variables.html":{}}}],["src/.../role.decorator.ts",{"_index":1186,"title":{},"body":{"miscellaneous/variables.html":{}}}],["src/.../role.enum.ts",{"_index":905,"title":{},"body":{"miscellaneous/enumerations.html":{},"miscellaneous/typealiases.html":{}}}],["src/.../swagger.ts",{"_index":918,"title":{},"body":{"miscellaneous/functions.html":{}}}],["src/.../user.entity.ts",{"_index":1178,"title":{},"body":{"miscellaneous/typealiases.html":{},"miscellaneous/variables.html":{}}}],["src/app.module.ts",{"_index":84,"title":{},"body":{"modules/AppModule.html":{}}}],["src/auth/auth.controller.ts",{"_index":89,"title":{},"body":{"controllers/AuthController.html":{},"coverage.html":{}}}],["src/auth/auth.module.ts",{"_index":156,"title":{},"body":{"modules/AuthModule.html":{}}}],["src/auth/auth.service.ts",{"_index":206,"title":{},"body":{"injectables/AuthService.html":{},"coverage.html":{}}}],["src/auth/decorators/role.decorator.ts",{"_index":807,"title":{},"body":{"coverage.html":{},"miscellaneous/variables.html":{}}}],["src/auth/dto/auth.dto.ts",{"_index":131,"title":{},"body":{"classes/AuthDto.html":{},"coverage.html":{}}}],["src/auth/dto/create",{"_index":482,"title":{},"body":{"classes/CreateUserDto.html":{},"coverage.html":{}}}],["src/auth/guards/google.guard.ts",{"_index":502,"title":{},"body":{"injectables/GoogleAuthGuard.html":{},"coverage.html":{}}}],["src/auth/guards/jwt.guard.ts",{"_index":536,"title":{},"body":{"injectables/JwtAuthGuard.html":{},"coverage.html":{}}}],["src/auth/guards/role.guard.ts",{"_index":604,"title":{},"body":{"guards/RolesGuard.html":{},"coverage.html":{}}}],["src/auth/role.enum.ts",{"_index":910,"title":{},"body":{"miscellaneous/enumerations.html":{},"miscellaneous/typealiases.html":{}}}],["src/auth/strategies/google.strategy.ts",{"_index":503,"title":{},"body":{"injectables/GoogleStrategy.html":{},"coverage.html":{}}}],["src/auth/strategies/jwt.strategy.ts",{"_index":537,"title":{},"body":{"injectables/JwtStrategy.html":{},"coverage.html":{}}}],["src/author/author.controller.ts",{"_index":227,"title":{},"body":{"controllers/AuthorController.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["src/author/author.module.ts",{"_index":281,"title":{},"body":{"modules/AuthorModule.html":{}}}],["src/author/author.service.ts",{"_index":312,"title":{},"body":{"injectables/AuthorService.html":{},"coverage.html":{}}}],["src/author/dto/create",{"_index":413,"title":{},"body":{"classes/CreateAuthorDto.html":{},"coverage.html":{}}}],["src/author/dto/update",{"_index":624,"title":{},"body":{"classes/UpdateAuthorDto.html":{},"coverage.html":{}}}],["src/author/models/author.entity.ts",{"_index":255,"title":{},"body":{"classes/AuthorEntity.html":{},"coverage.html":{},"miscellaneous/typealiases.html":{},"miscellaneous/variables.html":{}}}],["src/author/models/author.repository.ts",{"_index":282,"title":{},"body":{"injectables/AuthorRepository.html":{},"coverage.html":{}}}],["src/book/book.controller.ts",{"_index":321,"title":{},"body":{"controllers/BookController.html":{},"coverage.html":{}}}],["src/book/book.module.ts",{"_index":352,"title":{},"body":{"modules/BookModule.html":{}}}],["src/book/book.service.ts",{"_index":356,"title":{},"body":{"injectables/BookService.html":{},"coverage.html":{}}}],["src/book/dto/create",{"_index":428,"title":{},"body":{"classes/CreateBookDto.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["src/book/dto/update",{"_index":625,"title":{},"body":{"classes/UpdateBookDto.html":{},"coverage.html":{}}}],["src/book/dto/upload",{"_index":648,"title":{},"body":{"classes/UploadBookDto.html":{},"coverage.html":{}}}],["src/book/models/book.entity.ts",{"_index":330,"title":{},"body":{"classes/BookEntity.html":{},"coverage.html":{},"miscellaneous/typealiases.html":{},"miscellaneous/variables.html":{}}}],["src/book/models/book.repository.ts",{"_index":353,"title":{},"body":{"injectables/BookRepository.html":{},"coverage.html":{}}}],["src/category/category.controller.ts",{"_index":364,"title":{},"body":{"controllers/CategoryController.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["src/category/category.module.ts",{"_index":380,"title":{},"body":{"modules/CategoryModule.html":{}}}],["src/category/category.service.ts",{"_index":384,"title":{},"body":{"injectables/CategoryService.html":{},"coverage.html":{}}}],["src/category/dto/create",{"_index":447,"title":{},"body":{"classes/CreateCategoryDto.html":{},"coverage.html":{}}}],["src/category/dto/update",{"_index":634,"title":{},"body":{"classes/UpdateCategoryDto.html":{},"coverage.html":{}}}],["src/category/models/category.entity.ts",{"_index":373,"title":{},"body":{"classes/CategoryEntity.html":{},"coverage.html":{},"miscellaneous/typealiases.html":{},"miscellaneous/variables.html":{}}}],["src/category/models/category.repository.ts",{"_index":381,"title":{},"body":{"injectables/CategoryRepository.html":{},"coverage.html":{}}}],["src/config/config.interface.ts",{"_index":6,"title":{},"body":{"interfaces/ApiOptions.html":{},"interfaces/AuthOptions.html":{},"interfaces/ConnectionOptions.html":{},"interfaces/RuntimeSetismConfig.html":{},"interfaces/SuperadminCredentials.html":{},"interfaces/SwaggerOptions.html":{},"coverage.html":{},"miscellaneous/enumerations.html":{}}}],["src/config/config.module.ts",{"_index":390,"title":{},"body":{"modules/ConfigModule.html":{}}}],["src/config/config.service.ts",{"_index":391,"title":{},"body":{"classes/ConfigService.html":{},"coverage.html":{}}}],["src/db/base.schema.ts",{"_index":319,"title":{},"body":{"classes/BaseEntitySchema.html":{},"coverage.html":{}}}],["src/db/db.module.ts",{"_index":494,"title":{},"body":{"modules/DatabaseModule.html":{}}}],["src/db/db.service.ts",{"_index":495,"title":{},"body":{"injectables/DatabaseService.html":{},"coverage.html":{}}}],["src/db/entity.repository.ts",{"_index":498,"title":{},"body":{"classes/EntityRepository.html":{},"coverage.html":{}}}],["src/main.ts",{"_index":832,"title":{},"body":{"coverage.html":{},"miscellaneous/functions.html":{},"miscellaneous/variables.html":{}}}],["src/review/dto/create",{"_index":472,"title":{},"body":{"classes/CreateReviewDto.html":{},"coverage.html":{}}}],["src/review/dto/update",{"_index":635,"title":{},"body":{"classes/UpdateReviewDto.html":{},"coverage.html":{}}}],["src/review/models/review.entity.ts",{"_index":586,"title":{},"body":{"classes/ReviewEntity.html":{},"coverage.html":{},"miscellaneous/typealiases.html":{},"miscellaneous/variables.html":{}}}],["src/review/models/review.repository.ts",{"_index":596,"title":{},"body":{"injectables/ReviewRepository.html":{},"coverage.html":{}}}],["src/review/review.controller.ts",{"_index":557,"title":{},"body":{"controllers/ReviewController.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["src/review/review.module.ts",{"_index":595,"title":{},"body":{"modules/ReviewModule.html":{}}}],["src/review/review.service.ts",{"_index":599,"title":{},"body":{"injectables/ReviewService.html":{},"coverage.html":{}}}],["src/review/role.enum.ts",{"_index":915,"title":{},"body":{"miscellaneous/enumerations.html":{},"miscellaneous/typealiases.html":{}}}],["src/swagger.ts",{"_index":838,"title":{},"body":{"coverage.html":{},"miscellaneous/functions.html":{}}}],["src/user/dto/readinglist",{"_index":459,"title":{},"body":{"classes/CreateReadingListDto.html":{},"coverage.html":{}}}],["src/user/dto/update",{"_index":637,"title":{},"body":{"classes/UpdateUserDto.html":{},"coverage.html":{}}}],["src/user/models/user.entity.ts",{"_index":660,"title":{},"body":{"classes/UserEntity.html":{},"coverage.html":{},"miscellaneous/typealiases.html":{},"miscellaneous/variables.html":{}}}],["src/user/models/user.repository.ts",{"_index":676,"title":{},"body":{"injectables/UserRepository.html":{},"coverage.html":{}}}],["src/user/reading",{"_index":908,"title":{},"body":{"miscellaneous/enumerations.html":{},"miscellaneous/typealiases.html":{}}}],["src/user/user.controller.ts",{"_index":650,"title":{},"body":{"controllers/UserController.html":{},"coverage.html":{}}}],["src/user/user.module.ts",{"_index":675,"title":{},"body":{"modules/UserModule.html":{}}}],["src/user/user.service.ts",{"_index":679,"title":{},"body":{"injectables/UserService.html":{},"coverage.html":{}}}],["src/utils/file",{"_index":842,"title":{},"body":{"coverage.html":{},"miscellaneous/functions.html":{}}}],["src/utils/formatters.ts",{"_index":848,"title":{},"body":{"coverage.html":{},"miscellaneous/functions.html":{}}}],["src/utils/process",{"_index":509,"title":{},"body":{"interfaces/IProcessFile.html":{},"interfaces/IResizeImageArgs.html":{},"classes/ProcessFile.html":{},"coverage.html":{},"miscellaneous/typealiases.html":{},"miscellaneous/variables.html":{}}}],["srccoverpath",{"_index":337,"title":{},"body":{"classes/BookEntity.html":{},"classes/UpdateBookDto.html":{}}}],["srcpath",{"_index":338,"title":{},"body":{"classes/BookEntity.html":{},"classes/UpdateBookDto.html":{}}}],["standards",{"_index":699,"title":{},"body":{"contributing.html":{}}}],["start:dev",{"_index":782,"title":{},"body":{"contributing.html":{}}}],["started",{"_index":683,"title":{"contributing.html":{},"index.html":{},"license.html":{}},"body":{"contributing.html":{}}}],["statements",{"_index":804,"title":{},"body":{"coverage.html":{}}}],["stay",{"_index":726,"title":{},"body":{"contributing.html":{}}}],["stimulates",{"_index":988,"title":{},"body":{"index.html":{}}}],["stopping",{"_index":960,"title":{},"body":{"index.html":{}}}],["storage",{"_index":1040,"title":{},"body":{"index.html":{}}}],["storeuserrecordwithhash",{"_index":210,"title":{},"body":{"injectables/AuthService.html":{}}}],["storeuserrecordwithhash(email",{"_index":223,"title":{},"body":{"injectables/AuthService.html":{}}}],["string",{"_index":49,"title":{},"body":{"interfaces/ApiOptions.html":{},"classes/AuthDto.html":{},"interfaces/AuthOptions.html":{},"injectables/AuthService.html":{},"controllers/AuthorController.html":{},"classes/AuthorEntity.html":{},"injectables/AuthorRepository.html":{},"injectables/AuthorService.html":{},"controllers/BookController.html":{},"classes/BookEntity.html":{},"injectables/BookRepository.html":{},"injectables/BookService.html":{},"controllers/CategoryController.html":{},"classes/CategoryEntity.html":{},"injectables/CategoryRepository.html":{},"injectables/CategoryService.html":{},"interfaces/ConnectionOptions.html":{},"classes/CreateAuthorDto.html":{},"classes/CreateBookDto.html":{},"classes/CreateCategoryDto.html":{},"classes/CreateReadingListDto.html":{},"classes/CreateReviewDto.html":{},"classes/CreateUserDto.html":{},"classes/EntityRepository.html":{},"injectables/GoogleStrategy.html":{},"interfaces/IProcessFile.html":{},"interfaces/IResizeImageArgs.html":{},"classes/ProcessFile.html":{},"controllers/ReviewController.html":{},"classes/ReviewEntity.html":{},"injectables/ReviewRepository.html":{},"injectables/ReviewService.html":{},"interfaces/SuperadminCredentials.html":{},"interfaces/SwaggerOptions.html":{},"classes/UpdateBookDto.html":{},"classes/UpdateUserDto.html":{},"controllers/UserController.html":{},"classes/UserEntity.html":{},"injectables/UserRepository.html":{},"injectables/UserService.html":{},"miscellaneous/functions.html":{},"miscellaneous/variables.html":{}}}],["string!'})@isdefined({message",{"_index":425,"title":{},"body":{"classes/CreateAuthorDto.html":{},"classes/CreateBookDto.html":{}}}],["string!'})@isoptional",{"_index":628,"title":{},"body":{"classes/UpdateBookDto.html":{}}}],["string!'})@minlength(100",{"_index":478,"title":{},"body":{"classes/CreateReviewDto.html":{}}}],["string!'})@minlength(20",{"_index":453,"title":{},"body":{"classes/CreateCategoryDto.html":{}}}],["string!'})@minlength(3",{"_index":455,"title":{},"body":{"classes/CreateCategoryDto.html":{}}}],["string!'})@minlength(5",{"_index":440,"title":{},"body":{"classes/CreateBookDto.html":{}}}],["string!'})@minlength(54",{"_index":433,"title":{},"body":{"classes/CreateBookDto.html":{}}}],["structure",{"_index":1043,"title":{},"body":{"index.html":{}}}],["style",{"_index":698,"title":{},"body":{"contributing.html":{},"index.html":{}}}],["sub",{"_index":526,"title":{},"body":{"interfaces/IProcessFile.html":{}}}],["subdir",{"_index":515,"title":{},"body":{"interfaces/IProcessFile.html":{},"classes/ProcessFile.html":{}}}],["subject",{"_index":1127,"title":{},"body":{"license.html":{}}}],["sublicense",{"_index":1120,"title":{},"body":{"license.html":{}}}],["submit",{"_index":1072,"title":{},"body":{"index.html":{}}}],["subscription",{"_index":956,"title":{},"body":{"index.html":{}}}],["substantial",{"_index":1133,"title":{},"body":{"license.html":{}}}],["successfully",{"_index":113,"title":{},"body":{"controllers/AuthController.html":{},"controllers/AuthorController.html":{},"controllers/BookController.html":{},"controllers/CategoryController.html":{},"controllers/ReviewController.html":{},"controllers/UserController.html":{}}}],["such",{"_index":689,"title":{},"body":{"contributing.html":{}}}],["summury",{"_index":798,"title":{},"body":{"contributing.html":{}}}],["super_admin",{"_index":911,"title":{},"body":{"miscellaneous/enumerations.html":{}}}],["superadmin",{"_index":188,"title":{},"body":{"interfaces/AuthOptions.html":{},"interfaces/SuperadminCredentials.html":{}}}],["superadmincredentials",{"_index":166,"title":{"interfaces/SuperadminCredentials.html":{}},"body":{"interfaces/AuthOptions.html":{},"interfaces/SuperadminCredentials.html":{},"coverage.html":{}}}],["support",{"_index":1157,"title":{},"body":{"modules.html":{}}}],["sure",{"_index":740,"title":{},"body":{"contributing.html":{}}}],["surveyed",{"_index":978,"title":{},"body":{"index.html":{}}}],["svg",{"_index":1158,"title":{},"body":{"modules.html":{}}}],["svr.dekoo.tk",{"_index":950,"title":{},"body":{"index.html":{}}}],["swagger",{"_index":26,"title":{},"body":{"interfaces/ApiOptions.html":{},"dependencies.html":{},"index.html":{}}}],["swaggeroptions",{"_index":621,"title":{"interfaces/SwaggerOptions.html":{}},"body":{"interfaces/SwaggerOptions.html":{},"coverage.html":{}}}],["system",{"_index":1020,"title":{},"body":{"index.html":{}}}],["system.ts",{"_index":843,"title":{},"body":{"coverage.html":{},"miscellaneous/functions.html":{}}}],["table",{"_index":853,"title":{},"body":{"coverage.html":{}}}],["tablesort(document.getelementbyid('coverage",{"_index":852,"title":{},"body":{"coverage.html":{}}}],["technical",{"_index":735,"title":{},"body":{"contributing.html":{}}}],["technologies",{"_index":1034,"title":{},"body":{"index.html":{}}}],["template",{"_index":45,"title":{},"body":{"interfaces/ApiOptions.html":{},"contributing.html":{}}}],["test",{"_index":907,"title":{},"body":{"miscellaneous/enumerations.html":{}}}],["test@email.com'})@isemail",{"_index":136,"title":{},"body":{"classes/AuthDto.html":{},"classes/CreateUserDto.html":{}}}],["testconnectionuri",{"_index":409,"title":{},"body":{"interfaces/ConnectionOptions.html":{}}}],["testing",{"_index":412,"title":{},"body":{"interfaces/ConnectionOptions.html":{}}}],["tests",{"_index":1048,"title":{},"body":{"index.html":{}}}],["testscode",{"_index":1050,"title":{},"body":{"index.html":{}}}],["things",{"_index":1193,"title":{},"body":{"miscellaneous/variables.html":{}}}],["think",{"_index":959,"title":{},"body":{"index.html":{}}}],["time",{"_index":191,"title":{},"body":{"interfaces/AuthOptions.html":{}}}],["title",{"_index":622,"title":{},"body":{"interfaces/SwaggerOptions.html":{}}}],["titles",{"_index":971,"title":{},"body":{"index.html":{}}}],["token",{"_index":180,"title":{},"body":{"interfaces/AuthOptions.html":{}}}],["tort",{"_index":1153,"title":{},"body":{"license.html":{}}}],["total",{"_index":631,"title":{},"body":{"classes/UpdateBookDto.html":{}}}],["totalreviews",{"_index":339,"title":{},"body":{"classes/BookEntity.html":{},"classes/UpdateBookDto.html":{}}}],["transformer",{"_index":868,"title":{},"body":{"dependencies.html":{}}}],["trim",{"_index":267,"title":{},"body":{"classes/AuthorEntity.html":{},"classes/BookEntity.html":{},"classes/CategoryEntity.html":{},"classes/ReviewEntity.html":{},"classes/UserEntity.html":{}}}],["true",{"_index":268,"title":{},"body":{"classes/AuthorEntity.html":{},"classes/BookEntity.html":{},"classes/CategoryEntity.html":{},"classes/CreateAuthorDto.html":{},"classes/CreateBookDto.html":{},"classes/ReviewEntity.html":{},"classes/UpdateBookDto.html":{},"classes/UserEntity.html":{},"miscellaneous/functions.html":{}}}],["true})@isdefined",{"_index":463,"title":{},"body":{"classes/CreateReadingListDto.html":{}}}],["true})@isstring({message",{"_index":477,"title":{},"body":{"classes/CreateReviewDto.html":{}}}],["type",{"_index":38,"title":{},"body":{"interfaces/ApiOptions.html":{},"controllers/AuthController.html":{},"classes/AuthDto.html":{},"interfaces/AuthOptions.html":{},"injectables/AuthService.html":{},"controllers/AuthorController.html":{},"classes/AuthorEntity.html":{},"injectables/AuthorRepository.html":{},"injectables/AuthorService.html":{},"classes/BaseEntitySchema.html":{},"controllers/BookController.html":{},"classes/BookEntity.html":{},"injectables/BookRepository.html":{},"injectables/BookService.html":{},"controllers/CategoryController.html":{},"classes/CategoryEntity.html":{},"injectables/CategoryRepository.html":{},"injectables/CategoryService.html":{},"classes/ConfigService.html":{},"interfaces/ConnectionOptions.html":{},"classes/CreateAuthorDto.html":{},"classes/CreateBookDto.html":{},"classes/CreateCategoryDto.html":{},"classes/CreateReadingListDto.html":{},"classes/CreateReviewDto.html":{},"classes/CreateUserDto.html":{},"injectables/DatabaseService.html":{},"classes/EntityRepository.html":{},"injectables/GoogleStrategy.html":{},"interfaces/IProcessFile.html":{},"interfaces/IResizeImageArgs.html":{},"injectables/JwtStrategy.html":{},"classes/ProcessFile.html":{},"controllers/ReviewController.html":{},"classes/ReviewEntity.html":{},"injectables/ReviewRepository.html":{},"injectables/ReviewService.html":{},"guards/RolesGuard.html":{},"interfaces/RuntimeSetismConfig.html":{},"interfaces/SuperadminCredentials.html":{},"interfaces/SwaggerOptions.html":{},"classes/UpdateBookDto.html":{},"classes/UpdateUserDto.html":{},"classes/UploadBookDto.html":{},"controllers/UserController.html":{},"classes/UserEntity.html":{},"injectables/UserRepository.html":{},"injectables/UserService.html":{},"coverage.html":{},"miscellaneous/functions.html":{},"miscellaneous/typealiases.html":{},"miscellaneous/variables.html":{}}}],["typealiases",{"_index":1165,"title":{"miscellaneous/typealiases.html":{}},"body":{}}],["typescript",{"_index":1033,"title":{},"body":{"index.html":{}}}],["typical",{"_index":703,"title":{},"body":{"contributing.html":{}}}],["u",{"_index":794,"title":{},"body":{"contributing.html":{}}}],["ui",{"_index":896,"title":{},"body":{"dependencies.html":{}}}],["unauthorized",{"_index":117,"title":{},"body":{"controllers/AuthController.html":{}}}],["undefined",{"_index":266,"title":{},"body":{"classes/AuthorEntity.html":{},"classes/BookEntity.html":{},"classes/CategoryEntity.html":{},"classes/ReviewEntity.html":{},"classes/UserEntity.html":{},"miscellaneous/functions.html":{}}}],["undefined})@isoptional",{"_index":457,"title":{},"body":{"classes/CreateCategoryDto.html":{}}}],["undefined})@isstring({each",{"_index":423,"title":{},"body":{"classes/CreateAuthorDto.html":{},"classes/CreateBookDto.html":{}}}],["under",{"_index":529,"title":{},"body":{"interfaces/IProcessFile.html":{},"contributing.html":{},"index.html":{}}}],["unique",{"_index":245,"title":{},"body":{"controllers/AuthorController.html":{},"classes/AuthorEntity.html":{},"classes/BookEntity.html":{},"classes/CategoryEntity.html":{},"classes/UserEntity.html":{}}}],["unknown",{"_index":120,"title":{},"body":{"controllers/AuthController.html":{},"injectables/AuthService.html":{},"injectables/AuthorService.html":{},"injectables/BookService.html":{},"injectables/CategoryService.html":{},"injectables/JwtStrategy.html":{},"injectables/ReviewService.html":{},"injectables/UserService.html":{}}}],["unproductive",{"_index":1200,"title":{},"body":{"miscellaneous/variables.html":{}}}],["up",{"_index":1060,"title":{},"body":{"index.html":{}}}],["update",{"_index":230,"title":{},"body":{"controllers/AuthorController.html":{},"injectables/AuthorService.html":{},"controllers/BookController.html":{},"injectables/BookService.html":{},"controllers/CategoryController.html":{},"injectables/CategoryService.html":{},"controllers/UserController.html":{},"injectables/UserService.html":{}}}],["update(id",{"_index":251,"title":{},"body":{"controllers/AuthorController.html":{},"injectables/AuthorService.html":{},"controllers/BookController.html":{},"injectables/BookService.html":{},"controllers/CategoryController.html":{},"injectables/CategoryService.html":{},"controllers/UserController.html":{},"injectables/UserService.html":{}}}],["updateauthordto",{"_index":252,"title":{"classes/UpdateAuthorDto.html":{}},"body":{"controllers/AuthorController.html":{},"injectables/AuthorService.html":{},"classes/UpdateAuthorDto.html":{},"coverage.html":{}}}],["updatebookdto",{"_index":329,"title":{"classes/UpdateBookDto.html":{}},"body":{"controllers/BookController.html":{},"injectables/BookService.html":{},"classes/UpdateBookDto.html":{},"coverage.html":{}}}],["updatecategorydto",{"_index":371,"title":{"classes/UpdateCategoryDto.html":{}},"body":{"controllers/CategoryController.html":{},"injectables/CategoryService.html":{},"classes/UpdateCategoryDto.html":{},"coverage.html":{}}}],["updated.'})@apinotfoundresponse({description",{"_index":579,"title":{},"body":{"controllers/ReviewController.html":{}}}],["updateentitydata",{"_index":307,"title":{},"body":{"injectables/AuthorRepository.html":{},"injectables/BookRepository.html":{},"injectables/CategoryRepository.html":{},"classes/EntityRepository.html":{},"injectables/ReviewRepository.html":{},"injectables/UserRepository.html":{}}}],["updatehelpful",{"_index":559,"title":{},"body":{"controllers/ReviewController.html":{},"injectables/ReviewService.html":{}}}],["updatehelpful(userid",{"_index":578,"title":{},"body":{"controllers/ReviewController.html":{},"injectables/ReviewService.html":{}}}],["updatequery",{"_index":308,"title":{},"body":{"injectables/AuthorRepository.html":{},"injectables/BookRepository.html":{},"injectables/CategoryRepository.html":{},"classes/EntityRepository.html":{},"injectables/ReviewRepository.html":{},"injectables/UserRepository.html":{}}}],["updatereview",{"_index":560,"title":{},"body":{"controllers/ReviewController.html":{},"injectables/ReviewService.html":{}}}],["updatereview(userid",{"_index":582,"title":{},"body":{"controllers/ReviewController.html":{},"injectables/ReviewService.html":{}}}],["updatereviewdto",{"_index":583,"title":{"classes/UpdateReviewDto.html":{}},"body":{"controllers/ReviewController.html":{},"injectables/ReviewService.html":{},"classes/UpdateReviewDto.html":{},"coverage.html":{}}}],["updateuserdto",{"_index":636,"title":{"classes/UpdateUserDto.html":{}},"body":{"classes/UpdateUserDto.html":{},"controllers/UserController.html":{},"injectables/UserService.html":{},"coverage.html":{}}}],["uploadbookdto",{"_index":323,"title":{"classes/UploadBookDto.html":{}},"body":{"controllers/BookController.html":{},"injectables/BookService.html":{},"classes/UploadBookDto.html":{},"coverage.html":{}}}],["upvote",{"_index":1083,"title":{},"body":{"index.html":{}}}],["use",{"_index":720,"title":{},"body":{"contributing.html":{},"index.html":{},"license.html":{}}}],["used",{"_index":57,"title":{},"body":{"interfaces/ApiOptions.html":{},"interfaces/AuthOptions.html":{},"interfaces/RuntimeSetismConfig.html":{},"interfaces/SuperadminCredentials.html":{},"contributing.html":{},"index.html":{}}}],["user",{"_index":141,"title":{},"body":{"classes/AuthDto.html":{},"classes/CreateUserDto.html":{},"classes/ReviewEntity.html":{},"classes/UpdateUserDto.html":{},"controllers/UserController.html":{}}}],["user.dto.ts",{"_index":483,"title":{},"body":{"classes/CreateUserDto.html":{},"classes/UpdateUserDto.html":{},"coverage.html":{}}}],["usercontroller",{"_index":649,"title":{"controllers/UserController.html":{}},"body":{"controllers/UserController.html":{},"modules/UserModule.html":{},"coverage.html":{}}}],["userdocument",{"_index":1177,"title":{},"body":{"miscellaneous/typealiases.html":{}}}],["userentity",{"_index":659,"title":{"classes/UserEntity.html":{}},"body":{"classes/UserEntity.html":{},"coverage.html":{}}}],["userentityschema",{"_index":841,"title":{},"body":{"coverage.html":{},"miscellaneous/variables.html":{}}}],["userid",{"_index":568,"title":{},"body":{"controllers/ReviewController.html":{},"injectables/ReviewService.html":{}}}],["usermodel",{"_index":678,"title":{},"body":{"injectables/UserRepository.html":{}}}],["usermodule",{"_index":80,"title":{"modules/UserModule.html":{}},"body":{"modules/AppModule.html":{},"modules/UserModule.html":{},"modules.html":{},"overview.html":{}}}],["username",{"_index":640,"title":{},"body":{"classes/UpdateUserDto.html":{},"classes/UserEntity.html":{}}}],["useroles",{"_index":811,"title":{},"body":{"coverage.html":{},"miscellaneous/variables.html":{}}}],["userrepository",{"_index":155,"title":{"injectables/UserRepository.html":{}},"body":{"modules/AuthModule.html":{},"injectables/AuthService.html":{},"modules/UserModule.html":{},"injectables/UserRepository.html":{},"injectables/UserService.html":{},"coverage.html":{},"overview.html":{}}}],["users",{"_index":347,"title":{},"body":{"classes/BookEntity.html":{}}}],["userservice",{"_index":674,"title":{"injectables/UserService.html":{}},"body":{"modules/UserModule.html":{},"injectables/UserService.html":{},"coverage.html":{},"overview.html":{}}}],["usestaticpath",{"_index":549,"title":{},"body":{"classes/ProcessFile.html":{}}}],["usually",{"_index":1195,"title":{},"body":{"miscellaneous/variables.html":{}}}],["uuid",{"_index":520,"title":{},"body":{"interfaces/IProcessFile.html":{},"dependencies.html":{}}}],["valid",{"_index":138,"title":{},"body":{"classes/AuthDto.html":{},"interfaces/AuthOptions.html":{},"classes/CreateUserDto.html":{},"classes/UpdateUserDto.html":{}}}],["validate",{"_index":394,"title":{},"body":{"classes/ConfigService.html":{},"injectables/GoogleStrategy.html":{},"injectables/JwtStrategy.html":{}}}],["validate(_accesstoken",{"_index":505,"title":{},"body":{"injectables/GoogleStrategy.html":{}}}],["validate(payload",{"_index":538,"title":{},"body":{"injectables/JwtStrategy.html":{}}}],["validating",{"_index":177,"title":{},"body":{"interfaces/AuthOptions.html":{}}}],["validation.'})@apiconflictresponse({description",{"_index":125,"title":{},"body":{"controllers/AuthController.html":{},"controllers/AuthorController.html":{},"controllers/BookController.html":{},"controllers/CategoryController.html":{},"controllers/UserController.html":{}}}],["validation.'})@apiforbiddenresponse({description",{"_index":566,"title":{},"body":{"controllers/ReviewController.html":{}}}],["validation.'})@apiunauthorizedresponse({description",{"_index":116,"title":{},"body":{"controllers/AuthController.html":{}}}],["validator",{"_index":870,"title":{},"body":{"dependencies.html":{}}}],["value",{"_index":29,"title":{},"body":{"interfaces/ApiOptions.html":{},"interfaces/AuthOptions.html":{},"injectables/AuthorRepository.html":{},"injectables/BookRepository.html":{},"injectables/CategoryRepository.html":{},"classes/EntityRepository.html":{},"interfaces/IProcessFile.html":{},"classes/ProcessFile.html":{},"injectables/ReviewRepository.html":{},"interfaces/SuperadminCredentials.html":{},"injectables/UserRepository.html":{},"miscellaneous/enumerations.html":{},"miscellaneous/variables.html":{}}}],["variable",{"_index":808,"title":{},"body":{"coverage.html":{}}}],["variables",{"_index":1181,"title":{"miscellaneous/variables.html":{}},"body":{"miscellaneous/variables.html":{}}}],["vendor",{"_index":1045,"title":{},"body":{"index.html":{}}}],["vendure",{"_index":54,"title":{},"body":{"interfaces/ApiOptions.html":{}}}],["verification",{"_index":192,"title":{},"body":{"interfaces/AuthOptions.html":{}}}],["verificationtokenduration",{"_index":167,"title":{},"body":{"interfaces/AuthOptions.html":{}}}],["verified",{"_index":926,"title":{},"body":{"miscellaneous/functions.html":{}}}],["verify",{"_index":1074,"title":{},"body":{"index.html":{}}}],["version",{"_index":437,"title":{},"body":{"classes/CreateBookDto.html":{},"interfaces/SwaggerOptions.html":{}}}],["versions",{"_index":772,"title":{},"body":{"contributing.html":{}}}],["virtual",{"_index":954,"title":{},"body":{"index.html":{}}}],["volta",{"_index":768,"title":{},"body":{"contributing.html":{}}}],["want",{"_index":753,"title":{},"body":{"contributing.html":{},"index.html":{}}}],["ward",{"_index":995,"title":{},"body":{"index.html":{}}}],["warranties",{"_index":1138,"title":{},"body":{"license.html":{}}}],["warranty",{"_index":1136,"title":{},"body":{"license.html":{}}}],["wasted",{"_index":1204,"title":{},"body":{"miscellaneous/variables.html":{}}}],["ways",{"_index":1070,"title":{},"body":{"index.html":{}}}],["we'll",{"_index":749,"title":{},"body":{"contributing.html":{}}}],["web",{"_index":171,"title":{},"body":{"interfaces/AuthOptions.html":{}}}],["webp",{"_index":1180,"title":{},"body":{"miscellaneous/typealiases.html":{}}}],["welcome",{"_index":695,"title":{},"body":{"contributing.html":{}}}],["well",{"_index":13,"title":{},"body":{"interfaces/ApiOptions.html":{},"index.html":{},"miscellaneous/variables.html":{}}}],["whatever",{"_index":1054,"title":{},"body":{"index.html":{}}}],["whether",{"_index":1150,"title":{},"body":{"license.html":{}}}],["width",{"_index":533,"title":{},"body":{"interfaces/IResizeImageArgs.html":{},"classes/ProcessFile.html":{}}}],["window",{"_index":1009,"title":{},"body":{"index.html":{}}}],["wishlist",{"_index":645,"title":{},"body":{"classes/UpdateUserDto.html":{},"classes/UserEntity.html":{}}}],["without",{"_index":1112,"title":{},"body":{"license.html":{},"miscellaneous/variables.html":{}}}],["work",{"_index":765,"title":{},"body":{"contributing.html":{}}}],["write",{"_index":1053,"title":{},"body":{"index.html":{}}}],["writefile",{"_index":847,"title":{},"body":{"coverage.html":{},"miscellaneous/functions.html":{}}}],["writefile(path",{"_index":930,"title":{},"body":{"miscellaneous/functions.html":{}}}],["yarn",{"_index":773,"title":{},"body":{"contributing.html":{}}}],["yes",{"_index":303,"title":{},"body":{"injectables/AuthorRepository.html":{},"injectables/BookRepository.html":{},"injectables/CategoryRepository.html":{},"classes/EntityRepository.html":{},"injectables/ReviewRepository.html":{},"injectables/UserRepository.html":{}}}],["zeit/ms",{"_index":198,"title":{},"body":{"interfaces/AuthOptions.html":{}}}],["zoom",{"_index":81,"title":{},"body":{"modules/AppModule.html":{},"modules/AuthModule.html":{},"modules/AuthorModule.html":{},"modules/BookModule.html":{},"modules/CategoryModule.html":{},"modules/ConfigModule.html":{},"modules/DatabaseModule.html":{},"modules/ReviewModule.html":{},"modules/UserModule.html":{},"overview.html":{}}}]],"pipeline":["stemmer"]},
    "store": {"interfaces/ApiOptions.html":{"url":"interfaces/ApiOptions.html","title":"interface - ApiOptions","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  \n  ApiOptions\n\n\n\n        \n            API Info\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/config/config.interface.ts\n        \n\n\n            \n                Description\n            \n            \n                The ApiOptions define how the Setism REST APIs are exposed, as well as allowing the API layer\nto be extended with middleware.\n\n            \n\n\n        \n            Index\n            \n                \n                    \n                        \n                            Properties\n                        \n                    \n                    \n                        \n                            \n                                \n                                            Optional\n                                        \n                                            cors\n                                        \n                                \n                                \n                                            Optional\n                                        \n                                            env\n                                        \n                                \n                                \n                                            Optional\n                                        \n                                            hostname\n                                        \n                                \n                                \n                                        \n                                            port\n                                        \n                                \n                                \n                                            Optional\n                                        \n                                            prefix\n                                        \n                                \n                                \n                                            Optional\n                                        \n                                            swagger\n                                        \n                                \n                            \n                        \n                    \n                \n            \n        \n\n\n\n            \n                Properties\n                    \n                        \n                                \n                                    \n                                        \n                                        cors\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        cors:     CorsOptions\n\n                                    \n                                \n\n                                \n                                    \n                                        Default value : {\norigin: \"*\",\nmaxAge: 0,\noptionsSuccessStatus: 200,\nexposedHeaders: [\"Authorization\"]\n}\n\n                                    \n                                \n\n                                    \n                                        \n                                            Type :     CorsOptions\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                            \n                                \n                                    Set the CORS handling for the server. See the express CORS docs.\n  origin: \"*\",\n  maxAge: 0,\n  optionsSuccessStatus: 200,\n  exposedHeaders: [\"Authorization\"]\n}\n\n                                \n                            \n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        env\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        env:     template literal type\n\n                                    \n                                \n\n                                \n                                    \n                                        Default value : 'development'\n\n                                    \n                                \n\n                                    \n                                        \n                                            Type :     template literal type\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                            \n                                \n                                    Set the environment of the server. If not set, the environment will be development.\n\n                                \n                            \n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        hostname\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        hostname:         string\n\n                                    \n                                \n\n                                \n                                    \n                                        Default value : ''\n\n                                    \n                                \n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                            \n                                \n                                    Set the hostname of the server. If not set, the server will be available on localhost.\n\n                                \n                            \n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        port\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        port:         number\n\n                                    \n                                \n\n                                \n                                    \n                                        Default value : 3000\n\n                                    \n                                \n\n                                    \n                                        \n                                            Type :         number\n\n                                        \n                                    \n\n\n\n\n\n                            \n                                \n                                    Which port the Vendure server should listen on.\n\n                                \n                            \n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        prefix\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        prefix:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                            \n                                \n                                    API base prefix, used for both swagger server path, and overall API path\n\n                                \n                            \n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        swagger\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        swagger:         Required\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         Required\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                            \n                                \n                                    Swagger API Documentation page options\n\n                                \n                            \n                        \n                    \n            \n    \n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"modules/AppModule.html":{"url":"modules/AppModule.html","title":"module - AppModule","body":"\n                   \n\n\n\n\n    Modules\n    AppModule\n\n\n\n    \n        \n\n\n\n\n\ndependencies\n\ndependencies\n\ncluster_AppModule\n\n\n\ncluster_AppModule_imports\n\n\n\n\nAuthModule\n\nAuthModule\n\n\n\nAppModule\n\nAppModule\n\nAppModule -->\n\nAuthModule->AppModule\n\n\n\n\n\nAuthorModule\n\nAuthorModule\n\nAppModule -->\n\nAuthorModule->AppModule\n\n\n\n\n\nBookModule\n\nBookModule\n\nAppModule -->\n\nBookModule->AppModule\n\n\n\n\n\nCategoryModule\n\nCategoryModule\n\nAppModule -->\n\nCategoryModule->AppModule\n\n\n\n\n\nConfigModule\n\nConfigModule\n\nAppModule -->\n\nConfigModule->AppModule\n\n\n\n\n\nDatabaseModule\n\nDatabaseModule\n\nAppModule -->\n\nDatabaseModule->AppModule\n\n\n\n\n\nReviewModule\n\nReviewModule\n\nAppModule -->\n\nReviewModule->AppModule\n\n\n\n\n\nUserModule\n\nUserModule\n\nAppModule -->\n\nUserModule->AppModule\n\n\n\n\n\n\n    \n    \n    \n        Zoom in\n        Reset\n        Zoom out\n    \n\n\n\n\n\n    \n        API Info\n    \n\n\n\n    \n\n        \n            File\n        \n        \n            src/app.module.ts\n        \n\n\n\n\n\n        \n            \n                \n                    Imports\n                    \n                        \n                            AuthModule\n                        \n                        \n                            AuthorModule\n                        \n                        \n                            BookModule\n                        \n                        \n                            CategoryModule\n                        \n                        \n                            ConfigModule\n                        \n                        \n                            DatabaseModule\n                        \n                        \n                            ReviewModule\n                        \n                        \n                            UserModule\n                        \n                    \n                \n            \n        \n\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"controllers/AuthController.html":{"url":"controllers/AuthController.html","title":"controller - AuthController","body":"\n                   \n\n\n\n\n\n\n  Controllers\n  AuthController\n\n\n\n        \n            API Info\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/auth/auth.controller.ts\n        \n\n\n\n\n\n\n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    Async\n                                googleAuth\n                            \n                            \n                                googleAuthRedirect\n                            \n                            \n                                    Public\n                                    Async\n                                loginWithEmailAndPassword\n                            \n                            \n                                    Public\n                                    Async\n                                signUpWithEmailAndPassword\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        Async\n                        googleAuth\n                        \n                    \n                \n            \n            \n                \n                    \n                    googleAuth(_req: Request)\n                \n            \n\n            \n                \n                    Decorators : \n                    \n                    @Get('google')@UseGuards(GoogleAuthGuard)\n                \n            \n\n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    _req\n                                    \n                                            Request\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         any\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        googleAuthRedirect\n                        \n                    \n                \n            \n            \n                \ngoogleAuthRedirect(req: Request)\n                \n            \n\n            \n                \n                    Decorators : \n                    \n                    @Get('google/redirect')@UseGuards(GoogleAuthGuard)\n                \n            \n\n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    req\n                                    \n                                            Request\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         any\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        Public\n                        Async\n                        loginWithEmailAndPassword\n                        \n                    \n                \n            \n            \n                \n                    \n                    loginWithEmailAndPassword(authDto: AuthDto)\n                \n            \n\n            \n                \n                    Decorators : \n                    \n                    @ApiBody({type: AuthDto})@ApiOkResponse({description: 'The record has been successfully returned.'})@ApiBadRequestResponse({description: 'The record has failed validation.'})@ApiUnauthorizedResponse({description: 'Unauthorized action.'})@ApiForbiddenResponse({description: 'Forbidden!'})@Post('signin')\n                \n            \n\n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    authDto\n                                    \n                                                AuthDto\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     unknown\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        Public\n                        Async\n                        signUpWithEmailAndPassword\n                        \n                    \n                \n            \n            \n                \n                    \n                    signUpWithEmailAndPassword(createUserDto: CreateUserDto)\n                \n            \n\n            \n                \n                    Decorators : \n                    \n                    @ApiBody({type: CreateUserDto})@ApiCreatedResponse({description: 'The record has been successfully created.'})@ApiBadRequestResponse({description: 'The record has failed validation.'})@ApiConflictResponse({description: 'The record has an internal conflict.'})@ApiForbiddenResponse({description: 'Forbidden!'})@Post('signup')\n                \n            \n\n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    createUserDto\n                                    \n                                                CreateUserDto\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     unknown\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/AuthDto.html":{"url":"classes/AuthDto.html","title":"class - AuthDto","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  AuthDto\n\n\n\n        \n            API Info\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/auth/dto/auth.dto.ts\n        \n\n\n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                email\n                            \n                            \n                                password\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n\n            \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                        email\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @ApiProperty({type: 'String', description: 'Email address', default: 'test@email.com'})@IsEmail({}, {message: 'Email address must be a valid email!'})@IsDefined({message: 'Email address must not be empty!'})\n                        \n                    \n                \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        password\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @ApiProperty({type: 'String', description: 'User password', default: 'password123'})@IsDefined({message: 'Password must not be empty!'})@MinLength(6, {message: 'Passowrd must have at least 6 characters!'})@MaxLength(32, {message: 'Password must be at most 32 characters!'})\n                        \n                    \n                \n\n\n        \n    \n\n\n\n\n\n\n\n\n    \n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"modules/AuthModule.html":{"url":"modules/AuthModule.html","title":"module - AuthModule","body":"\n                   \n\n\n\n\n    Modules\n    AuthModule\n\n\n\n    \n        \n\n\n\n\n\ndependencies\n\ndependencies\n\ncluster_AuthModule\n\n\n\ncluster_AuthModule_exports\n\n\n\ncluster_AuthModule_providers\n\n\n\n\nAuthService \n\nAuthService \n\n\n\nAuthModule\n\nAuthModule\n\nAuthService  -->\n\nAuthModule->AuthService \n\n\n\n\n\nAuthService\n\nAuthService\n\nAuthModule -->\n\nAuthService->AuthModule\n\n\n\n\n\nGoogleStrategy\n\nGoogleStrategy\n\nAuthModule -->\n\nGoogleStrategy->AuthModule\n\n\n\n\n\nJwtStrategy\n\nJwtStrategy\n\nAuthModule -->\n\nJwtStrategy->AuthModule\n\n\n\n\n\nUserRepository\n\nUserRepository\n\nAuthModule -->\n\nUserRepository->AuthModule\n\n\n\n\n\n\n    \n    \n    \n        Zoom in\n        Reset\n        Zoom out\n    \n\n\n\n\n\n    \n        API Info\n    \n\n\n\n    \n\n        \n            File\n        \n        \n            src/auth/auth.module.ts\n        \n\n\n\n\n\n        \n            \n                \n                    Providers\n                    \n                        \n                            AuthService\n                        \n                        \n                            GoogleStrategy\n                        \n                        \n                            JwtStrategy\n                        \n                        \n                            UserRepository\n                        \n                    \n                \n                \n                    Controllers\n                    \n                        \n                            AuthController\n                        \n                    \n                \n                \n                    Exports\n                    \n                        \n                            AuthService\n                        \n                    \n                \n            \n        \n\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/AuthOptions.html":{"url":"interfaces/AuthOptions.html","title":"interface - AuthOptions","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  \n  AuthOptions\n\n\n\n        \n            API Info\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/config/config.interface.ts\n        \n\n\n            \n                Description\n            \n            \n                The AuthOptions define how authentication and authorization is managed.\n\n            \n\n\n        \n            Index\n            \n                \n                    \n                        \n                            Properties\n                        \n                    \n                    \n                        \n                            \n                                \n                                            Optional\n                                        \n                                            googleClientId\n                                        \n                                \n                                \n                                            Optional\n                                        \n                                            googleClientSecret\n                                        \n                                \n                                \n                                            Optional\n                                        \n                                            jwtSecretKey\n                                        \n                                \n                                \n                                            Optional\n                                        \n                                            pepper\n                                        \n                                \n                                \n                                            Optional\n                                        \n                                            superadminCredentials\n                                        \n                                \n                                \n                                            Optional\n                                        \n                                            verificationTokenDuration\n                                        \n                                \n                            \n                        \n                    \n                \n            \n        \n\n\n\n            \n                Properties\n                    \n                        \n                                \n                                    \n                                        \n                                        googleClientId\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        googleClientId:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                            \n                                \n                                    Client ID for google web application\n\n                                \n                            \n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        googleClientSecret\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        googleClientSecret:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                            \n                                \n                                    Client Secret for google web application\n\n                                \n                            \n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        jwtSecretKey\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        jwtSecretKey:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                            \n                                \n                                    Sets the secret key for decoding and validating a JWT access token\n\n                                \n                            \n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        pepper\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        pepper:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                            \n                                \n                                    Extra security layer for hashing passwords\n\n                                \n                            \n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        superadminCredentials\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        superadminCredentials:         SuperadminCredentials\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         SuperadminCredentials\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                            \n                                \n                                    Configures the credentials to be used to create a superadmin\n\n                                \n                            \n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        verificationTokenDuration\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        verificationTokenDuration:     string | number\n\n                                    \n                                \n\n                                \n                                    \n                                        Default value : '7d'\n\n                                    \n                                \n\n                                    \n                                        \n                                            Type :     string | number\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                            \n                                \n                                    Sets the length of time that a verification token is valid for, after which the verification token must be refreshed.\nExpressed as a string describing a time span per\nzeit/ms.  Eg: 60, '2 days', '10h', '7d'\n\n                                \n                            \n                        \n                    \n            \n    \n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/AuthService.html":{"url":"injectables/AuthService.html","title":"injectable - AuthService","body":"\n                   \n\n\n\n\n\n\n\n\n  Injectables\n  AuthService\n\n\n\n        \n            API Info\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/auth/auth.service.ts\n        \n\n\n\n\n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    Public\n                                    Async\n                                loginWithEmailAndPassword\n                            \n                            \n                                    Public\n                                    Async\n                                loginWithGoogleProvider\n                            \n                            \n                                    Public\n                                    Async\n                                signUpWithEmailAndPassword\n                            \n                            \n                                    Private\n                                signUserToken\n                            \n                            \n                                    Private\n                                    Async\n                                storeUserRecordWithHash\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(userRepository: UserRepository, jwtService: JwtService, configService: ConfigService)\n                    \n                \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        userRepository\n                                                  \n                                                        \n                                                                        UserRepository\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        jwtService\n                                                  \n                                                        \n                                                                    JwtService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        configService\n                                                  \n                                                        \n                                                                        ConfigService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        Public\n                        Async\n                        loginWithEmailAndPassword\n                        \n                    \n                \n            \n            \n                \n                    \n                    loginWithEmailAndPassword(r: AuthDto)\n                \n            \n\n\n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    r\n                                    \n                                                AuthDto\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     unknown\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        Public\n                        Async\n                        loginWithGoogleProvider\n                        \n                    \n                \n            \n            \n                \n                    \n                    loginWithGoogleProvider(undefined: Profile)\n                \n            \n\n\n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    \n                                            Profile\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     unknown\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        Public\n                        Async\n                        signUpWithEmailAndPassword\n                        \n                    \n                \n            \n            \n                \n                    \n                    signUpWithEmailAndPassword(undefined: CreateUserDto)\n                \n            \n\n\n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    \n                                                CreateUserDto\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     unknown\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        Private\n                        signUserToken\n                        \n                    \n                \n            \n            \n                \n                    \n                    signUserToken(id: string, role: RoleType)\n                \n            \n\n\n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    id\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    role\n                                    \n                                                RoleType\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         any\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        Private\n                        Async\n                        storeUserRecordWithHash\n                        \n                    \n                \n            \n            \n                \n                    \n                    storeUserRecordWithHash(email: string, hash: string, fullName: string)\n                \n            \n\n\n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    email\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    hash\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    fullName\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     unknown\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"controllers/AuthorController.html":{"url":"controllers/AuthorController.html","title":"controller - AuthorController","body":"\n                   \n\n\n\n\n\n\n  Controllers\n  AuthorController\n\n\n\n        \n            API Info\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/author/author.controller.ts\n        \n\n\n\n\n\n\n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                create\n                            \n                            \n                                find\n                            \n                            \n                                index\n                            \n                            \n                                remove\n                            \n                            \n                                update\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        create\n                        \n                    \n                \n            \n            \n                \ncreate(file: Express.Multer.File, createAuthorDto: CreateAuthorDto)\n                \n            \n\n            \n                \n                    Decorators : \n                    \n                    @ApiBody({type: CreateAuthorDto})@ApiCreatedResponse({description: 'The record has been successfully created.'})@ApiBadRequestResponse({description: 'The record has failed validation.'})@ApiConflictResponse({description: 'The record has an internal conflict.'})@ApiForbiddenResponse({description: 'Forbidden!'})@UseRoles(Role.PUBLISHER, Role.ADMIN, Role.SUPER_ADMIN)@UseGuards(JwtAuthGuard, RolesGuard)@UseInterceptors(undefined)@Post()\n                \n            \n\n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    file\n                                    \n                                            Express.Multer.File\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    createAuthorDto\n                                    \n                                                CreateAuthorDto\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         any\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        find\n                        \n                    \n                \n            \n            \n                \nfind(id: string)\n                \n            \n\n            \n                \n                    Decorators : \n                    \n                    @ApiOkResponse({description: 'The record has been successfully returned.'})@ApiNotFoundResponse({description: 'The record was not found.'})@ApiForbiddenResponse({description: 'Forbidden!'})@ApiParam({name: 'id', description: 'Author unique id'})@Get(':id')\n                \n            \n\n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    id\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         any\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        index\n                        \n                    \n                \n            \n            \n                \nindex()\n                \n            \n\n            \n                \n                    Decorators : \n                    \n                    @ApiOkResponse({description: 'The record has been successfully returned.'})@ApiNotFoundResponse({description: 'The record was not found.'})@ApiForbiddenResponse({description: 'Forbidden!'})@Get()\n                \n            \n\n\n\n            \n                \n\n                    \n                        Returns :         any\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        remove\n                        \n                    \n                \n            \n            \n                \nremove(id: string)\n                \n            \n\n            \n                \n                    Decorators : \n                    \n                    @ApiOkResponse({description: 'The record has been successfully returned.'})@ApiNotFoundResponse({description: 'The record was not found.'})@ApiForbiddenResponse({description: 'Forbidden!'})@ApiParam({name: 'id', description: 'Author unique id'})@UseRoles(Role.ADMIN, Role.SUPER_ADMIN)@UseGuards(JwtAuthGuard, RolesGuard)@Delete(':id')\n                \n            \n\n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    id\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         any\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        update\n                        \n                    \n                \n            \n            \n                \nupdate(id: string, updateAuthorDto: UpdateAuthorDto)\n                \n            \n\n            \n                \n                    Decorators : \n                    \n                    @ApiOkResponse({description: 'The record has been successfully returned.'})@ApiNotFoundResponse({description: 'The record was not found.'})@ApiForbiddenResponse({description: 'Forbidden!'})@ApiParam({name: 'id', description: 'Author unique id'})@UseRoles(Role.ADMIN, Role.SUPER_ADMIN)@UseGuards(JwtAuthGuard, RolesGuard)@Patch(':id')\n                \n            \n\n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    id\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    updateAuthorDto\n                                    \n                                                UpdateAuthorDto\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         any\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/AuthorEntity.html":{"url":"classes/AuthorEntity.html","title":"class - AuthorEntity","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  AuthorEntity\n\n\n\n        \n            API Info\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/author/models/author.entity.ts\n        \n\n\n\n            \n                Extends\n            \n            \n                        BaseEntitySchema\n            \n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Public\n                                    Optional\n                                avatar\n                            \n                            \n                                    Public\n                                    Optional\n                                biography\n                            \n                            \n                                    Public\n                                books\n                            \n                            \n                                    Public\n                                name\n                            \n                            \n                                    Readonly\n                                _id\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n\n            \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                            Public\n                            Optional\n                        avatar\n                        \n                    \n                \n            \n                \n                    \n                        Type :     string | null\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @Prop({required: false, type: String, default: undefined, trim: true})\n                        \n                    \n                \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Public\n                            Optional\n                        biography\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @Prop({required: false, default: '', trim: true, maxlength: 2048})\n                        \n                    \n                \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Public\n                        books\n                        \n                    \n                \n            \n                \n                    \n                        Type :         BookEntity[]\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @Prop({required: true, type: undefined})\n                        \n                    \n                \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Public\n                        name\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @Prop({required: true, unique: true, trim: true, minlength: 3, maxlength: 54})\n                        \n                    \n                \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Readonly\n                        _id\n                        \n                    \n                \n            \n                \n                    \n                        Type :     ObjectID\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @Prop()\n                        \n                    \n                \n\n\n        \n    \n\n\n\n\n\n\n\n\n    \n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"modules/AuthorModule.html":{"url":"modules/AuthorModule.html","title":"module - AuthorModule","body":"\n                   \n\n\n\n\n    Modules\n    AuthorModule\n\n\n\n    \n        \n\n\n\n\n\ndependencies\n\ndependencies\n\ncluster_AuthorModule\n\n\n\ncluster_AuthorModule_providers\n\n\n\n\nAuthorRepository\n\nAuthorRepository\n\n\n\nAuthorModule\n\nAuthorModule\n\nAuthorModule -->\n\nAuthorRepository->AuthorModule\n\n\n\n\n\nAuthorService\n\nAuthorService\n\nAuthorModule -->\n\nAuthorService->AuthorModule\n\n\n\n\n\n\n    \n    \n    \n        Zoom in\n        Reset\n        Zoom out\n    \n\n\n\n\n\n    \n        API Info\n    \n\n\n\n    \n\n        \n            File\n        \n        \n            src/author/author.module.ts\n        \n\n\n\n\n\n        \n            \n                \n                    Providers\n                    \n                        \n                            AuthorRepository\n                        \n                        \n                            AuthorService\n                        \n                    \n                \n                \n                    Controllers\n                    \n                        \n                            AuthorController\n                        \n                    \n                \n            \n        \n\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/AuthorRepository.html":{"url":"injectables/AuthorRepository.html","title":"injectable - AuthorRepository","body":"\n                   \n\n\n\n\n\n\n\n\n  Injectables\n  AuthorRepository\n\n\n\n        \n            API Info\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/author/models/author.repository.ts\n        \n\n\n\n            \n                Extends\n            \n            \n                        EntityRepository\n            \n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Private\n                                    Readonly\n                                baseProjection\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    Public\n                                    Async\n                                create\n                            \n                            \n                                    Public\n                                    Async\n                                deleteMany\n                            \n                            \n                                    Public\n                                    Async\n                                deleteOne\n                            \n                            \n                                    Public\n                                    Async\n                                find\n                            \n                            \n                                    Public\n                                    Async\n                                findById\n                            \n                            \n                                    Public\n                                    Async\n                                findByIdAndUpdate\n                            \n                            \n                                    Public\n                                    Async\n                                findOne\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(authorModel: Model)\n                    \n                \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        authorModel\n                                                  \n                                                        \n                                                                        Model\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        Public\n                        Async\n                        create\n                        \n                    \n                \n            \n            \n                \n                    \n                    create(createEntityData: Partial)\n                \n            \n\n\n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    createEntityData\n                                    \n                                            Partial\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     Promise\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        Public\n                        Async\n                        deleteMany\n                        \n                    \n                \n            \n            \n                \n                    \n                    deleteMany(entityFilterQuery: FilterQuery)\n                \n            \n\n\n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    entityFilterQuery\n                                    \n                                            FilterQuery\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     Promise\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        Public\n                        Async\n                        deleteOne\n                        \n                    \n                \n            \n            \n                \n                    \n                    deleteOne(entityFilterQuery: FilterQuery)\n                \n            \n\n\n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    entityFilterQuery\n                                    \n                                            FilterQuery\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     Promise\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        Public\n                        Async\n                        find\n                        \n                    \n                \n            \n            \n                \n                    \n                    find(entityFilterQuery?: FilterQuery, projection?: Record)\n                \n            \n\n\n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    entityFilterQuery\n                                    \n                                            FilterQuery\n                                    \n\n                                    \n                                        Yes\n                                    \n\n\n                                \n                                \n                                    projection\n                                    \n                                            Record\n                                    \n\n                                    \n                                        Yes\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     Promise\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        Public\n                        Async\n                        findById\n                        \n                    \n                \n            \n            \n                \n                    \n                    findById(entityId: string, projection?: Record)\n                \n            \n\n\n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    entityId\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    projection\n                                    \n                                            Record\n                                    \n\n                                    \n                                        Yes\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     Promise\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        Public\n                        Async\n                        findByIdAndUpdate\n                        \n                    \n                \n            \n            \n                \n                    \n                    findByIdAndUpdate(entityId: string, updateEntityData: UpdateQuery)\n                \n            \n\n\n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    entityId\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    updateEntityData\n                                    \n                                            UpdateQuery\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     Promise\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        Public\n                        Async\n                        findOne\n                        \n                    \n                \n            \n            \n                \n                    \n                    findOne(entityFilterQuery: FilterQuery, projection?: Record)\n                \n            \n\n\n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    entityFilterQuery\n                                    \n                                            FilterQuery\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    projection\n                                    \n                                            Record\n                                    \n\n                                    \n                                        Yes\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     Promise\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n\n            \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                            Private\n                            Readonly\n                        baseProjection\n                        \n                    \n                \n            \n                \n                    \n                        Type :         object\n\n                    \n                \n                \n                    \n                        Default value : { __v: 0 }\n                    \n                \n\n\n        \n    \n\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/AuthorService.html":{"url":"injectables/AuthorService.html","title":"injectable - AuthorService","body":"\n                   \n\n\n\n\n\n\n\n\n  Injectables\n  AuthorService\n\n\n\n        \n            API Info\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/author/author.service.ts\n        \n\n\n\n\n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    Public\n                                    Async\n                                create\n                            \n                            \n                                    Public\n                                    Async\n                                findAll\n                            \n                            \n                                    Public\n                                    Async\n                                findOne\n                            \n                            \n                                    Private\n                                    Async\n                                processAvatarUpload\n                            \n                            \n                                    Public\n                                    Async\n                                remove\n                            \n                            \n                                    Public\n                                    Async\n                                update\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(authorRepository: AuthorRepository)\n                    \n                \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        authorRepository\n                                                  \n                                                        \n                                                                        AuthorRepository\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        Public\n                        Async\n                        create\n                        \n                    \n                \n            \n            \n                \n                    \n                    create(file: Express.Multer.File, a: CreateAuthorDto)\n                \n            \n\n\n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    file\n                                    \n                                            Express.Multer.File\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    a\n                                    \n                                                CreateAuthorDto\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     unknown\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        Public\n                        Async\n                        findAll\n                        \n                    \n                \n            \n            \n                \n                    \n                    findAll()\n                \n            \n\n\n\n\n            \n                \n\n                    \n                        Returns :     unknown\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        Public\n                        Async\n                        findOne\n                        \n                    \n                \n            \n            \n                \n                    \n                    findOne(id: string)\n                \n            \n\n\n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    id\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     unknown\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        Private\n                        Async\n                        processAvatarUpload\n                        \n                    \n                \n            \n            \n                \n                    \n                    processAvatarUpload(file: Express.Multer.File, authorName: string)\n                \n            \n\n\n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    file\n                                    \n                                            Express.Multer.File\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    authorName\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     Promise\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        Public\n                        Async\n                        remove\n                        \n                    \n                \n            \n            \n                \n                    \n                    remove(id: string)\n                \n            \n\n\n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    id\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     unknown\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        Public\n                        Async\n                        update\n                        \n                    \n                \n            \n            \n                \n                    \n                    update(id: string, updateAuthorDto: UpdateAuthorDto)\n                \n            \n\n\n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    id\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    updateAuthorDto\n                                    \n                                                UpdateAuthorDto\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     unknown\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/BaseEntitySchema.html":{"url":"classes/BaseEntitySchema.html","title":"class - BaseEntitySchema","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  BaseEntitySchema\n\n\n\n        \n            API Info\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/db/base.schema.ts\n        \n\n\n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Readonly\n                                _id\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n\n            \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                            Readonly\n                        _id\n                        \n                    \n                \n            \n                \n                    \n                        Type :     ObjectID\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @Prop()\n                        \n                    \n                \n\n\n        \n    \n\n\n\n\n\n\n\n\n    \n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"controllers/BookController.html":{"url":"controllers/BookController.html","title":"controller - BookController","body":"\n                   \n\n\n\n\n\n\n  Controllers\n  BookController\n\n\n\n        \n            API Info\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/book/book.controller.ts\n        \n\n\n\n\n\n\n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                create\n                            \n                            \n                                find\n                            \n                            \n                                index\n                            \n                            \n                                remove\n                            \n                            \n                                update\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        create\n                        \n                    \n                \n            \n            \n                \ncreate(files: UploadBookDto, createBookDto: CreateBookDto)\n                \n            \n\n            \n                \n                    Decorators : \n                    \n                    @ApiBody({type: CreateBookDto})@ApiCreatedResponse({description: 'The record has been successfully created.'})@ApiBadRequestResponse({description: 'The record has failed validation.'})@ApiConflictResponse({description: 'The record has an internal conflict.'})@ApiForbiddenResponse({description: 'Forbidden!'})@UseRoles(Role.PUBLISHER, Role.ADMIN, Role.SUPER_ADMIN)@UseGuards(JwtAuthGuard, RolesGuard)@UseInterceptors(undefined)@Post('create')\n                \n            \n\n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    files\n                                    \n                                                UploadBookDto\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    createBookDto\n                                    \n                                                CreateBookDto\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         any\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        find\n                        \n                    \n                \n            \n            \n                \nfind(id: string)\n                \n            \n\n            \n                \n                    Decorators : \n                    \n                    @ApiOkResponse({description: 'The record has been successfully returned.'})@ApiNotFoundResponse({description: 'The record was not found.'})@ApiForbiddenResponse({description: 'Forbidden!'})@ApiParam({name: 'id', type: 'String', description: 'Book id'})@Get(':id')\n                \n            \n\n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    id\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         any\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        index\n                        \n                    \n                \n            \n            \n                \nindex()\n                \n            \n\n            \n                \n                    Decorators : \n                    \n                    @ApiOkResponse({description: 'The record has been successfully returned.'})@ApiNotFoundResponse({description: 'The record was not found.'})@ApiForbiddenResponse({description: 'Forbidden!'})@Get()\n                \n            \n\n\n\n            \n                \n\n                    \n                        Returns :         any\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        remove\n                        \n                    \n                \n            \n            \n                \nremove(id: string)\n                \n            \n\n            \n                \n                    Decorators : \n                    \n                    @ApiOkResponse({description: 'The record has been successfully returned.'})@ApiNotFoundResponse({description: 'The record was not found.'})@ApiForbiddenResponse({description: 'Forbidden!'})@ApiParam({name: 'id', type: 'String', description: 'Book id'})@UseRoles(Role.ADMIN, Role.SUPER_ADMIN)@UseGuards(JwtAuthGuard, RolesGuard)@Delete(':id')\n                \n            \n\n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    id\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         any\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        update\n                        \n                    \n                \n            \n            \n                \nupdate(id: string, updateBookDto: UpdateBookDto)\n                \n            \n\n            \n                \n                    Decorators : \n                    \n                    @ApiOkResponse({description: 'The record has been successfully returned.'})@ApiNotFoundResponse({description: 'The record was not found.'})@ApiForbiddenResponse({description: 'Forbidden!'})@ApiParam({name: 'id', type: 'String', description: 'Book id'})@UseRoles(Role.ADMIN, Role.SUPER_ADMIN)@UseGuards(JwtAuthGuard, RolesGuard)@Patch(':id')\n                \n            \n\n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    id\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    updateBookDto\n                                    \n                                                UpdateBookDto\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         any\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/BookEntity.html":{"url":"classes/BookEntity.html","title":"class - BookEntity","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  BookEntity\n\n\n\n        \n            API Info\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/book/models/book.entity.ts\n        \n\n\n\n            \n                Extends\n            \n            \n                        BaseEntitySchema\n            \n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                author\n                            \n                            \n                                categories\n                            \n                            \n                                description\n                            \n                            \n                                isbn\n                            \n                            \n                                name\n                            \n                            \n                                publishedDate\n                            \n                            \n                                publisher\n                            \n                            \n                                releaseDate\n                            \n                            \n                                reviews\n                            \n                            \n                                srcCoverPath\n                            \n                            \n                                srcPath\n                            \n                            \n                                totalReviews\n                            \n                            \n                                    Readonly\n                                _id\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n\n            \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                        author\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @Prop({required: true, type: undefined, ref: 'authors'})\n                        \n                    \n                \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        categories\n                        \n                    \n                \n            \n                \n                    \n                        Type :     string[]\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @Prop({required: true, type: undefined})\n                        \n                    \n                \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        description\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @Prop({required: true, trim: true, minlength: 54, maxlength: 4096})\n                        \n                    \n                \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        isbn\n                        \n                    \n                \n            \n                \n                    \n                        Type :         number\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @Prop({required: true, min: 13})\n                        \n                    \n                \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        name\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @Prop({required: true, unique: true, trim: true, minlength: 5, maxlength: 256})\n                        \n                    \n                \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        publishedDate\n                        \n                    \n                \n            \n                \n                    \n                        Type :         number\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @Prop({required: true, default: undefined})\n                        \n                    \n                \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        publisher\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @Prop({required: true, type: undefined, ref: 'users'})\n                        \n                    \n                \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        releaseDate\n                        \n                    \n                \n            \n                \n                    \n                        Type :         number\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @Prop({required: true})\n                        \n                    \n                \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        reviews\n                        \n                    \n                \n            \n                \n                    \n                        Type :     string[]\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @Prop({required: true, type: undefined})\n                        \n                    \n                \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        srcCoverPath\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @Prop({required: true, trim: true})\n                        \n                    \n                \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        srcPath\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @Prop({required: true, trim: true})\n                        \n                    \n                \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        totalReviews\n                        \n                    \n                \n            \n                \n                    \n                        Type :         number\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @Prop({required: true, default: 0, min: 0})\n                        \n                    \n                \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Readonly\n                        _id\n                        \n                    \n                \n            \n                \n                    \n                        Type :     ObjectID\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @Prop()\n                        \n                    \n                \n\n\n        \n    \n\n\n\n\n\n\n\n\n    \n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"modules/BookModule.html":{"url":"modules/BookModule.html","title":"module - BookModule","body":"\n                   \n\n\n\n\n    Modules\n    BookModule\n\n\n\n    \n        \n\n\n\n\n\ndependencies\n\ndependencies\n\ncluster_BookModule\n\n\n\ncluster_BookModule_providers\n\n\n\n\nBookRepository\n\nBookRepository\n\n\n\nBookModule\n\nBookModule\n\nBookModule -->\n\nBookRepository->BookModule\n\n\n\n\n\nBookService\n\nBookService\n\nBookModule -->\n\nBookService->BookModule\n\n\n\n\n\n\n    \n    \n    \n        Zoom in\n        Reset\n        Zoom out\n    \n\n\n\n\n\n    \n        API Info\n    \n\n\n\n    \n\n        \n            File\n        \n        \n            src/book/book.module.ts\n        \n\n\n\n\n\n        \n            \n                \n                    Providers\n                    \n                        \n                            BookRepository\n                        \n                        \n                            BookService\n                        \n                    \n                \n                \n                    Controllers\n                    \n                        \n                            BookController\n                        \n                    \n                \n            \n        \n\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/BookRepository.html":{"url":"injectables/BookRepository.html","title":"injectable - BookRepository","body":"\n                   \n\n\n\n\n\n\n\n\n  Injectables\n  BookRepository\n\n\n\n        \n            API Info\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/book/models/book.repository.ts\n        \n\n\n\n            \n                Extends\n            \n            \n                        EntityRepository\n            \n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Private\n                                    Readonly\n                                baseProjection\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    Public\n                                    Async\n                                create\n                            \n                            \n                                    Public\n                                    Async\n                                deleteMany\n                            \n                            \n                                    Public\n                                    Async\n                                deleteOne\n                            \n                            \n                                    Public\n                                    Async\n                                find\n                            \n                            \n                                    Public\n                                    Async\n                                findById\n                            \n                            \n                                    Public\n                                    Async\n                                findByIdAndUpdate\n                            \n                            \n                                    Public\n                                    Async\n                                findOne\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(bookModel: Model)\n                    \n                \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        bookModel\n                                                  \n                                                        \n                                                                        Model\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        Public\n                        Async\n                        create\n                        \n                    \n                \n            \n            \n                \n                    \n                    create(createEntityData: Partial)\n                \n            \n\n\n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    createEntityData\n                                    \n                                            Partial\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     Promise\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        Public\n                        Async\n                        deleteMany\n                        \n                    \n                \n            \n            \n                \n                    \n                    deleteMany(entityFilterQuery: FilterQuery)\n                \n            \n\n\n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    entityFilterQuery\n                                    \n                                            FilterQuery\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     Promise\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        Public\n                        Async\n                        deleteOne\n                        \n                    \n                \n            \n            \n                \n                    \n                    deleteOne(entityFilterQuery: FilterQuery)\n                \n            \n\n\n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    entityFilterQuery\n                                    \n                                            FilterQuery\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     Promise\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        Public\n                        Async\n                        find\n                        \n                    \n                \n            \n            \n                \n                    \n                    find(entityFilterQuery?: FilterQuery, projection?: Record)\n                \n            \n\n\n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    entityFilterQuery\n                                    \n                                            FilterQuery\n                                    \n\n                                    \n                                        Yes\n                                    \n\n\n                                \n                                \n                                    projection\n                                    \n                                            Record\n                                    \n\n                                    \n                                        Yes\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     Promise\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        Public\n                        Async\n                        findById\n                        \n                    \n                \n            \n            \n                \n                    \n                    findById(entityId: string, projection?: Record)\n                \n            \n\n\n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    entityId\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    projection\n                                    \n                                            Record\n                                    \n\n                                    \n                                        Yes\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     Promise\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        Public\n                        Async\n                        findByIdAndUpdate\n                        \n                    \n                \n            \n            \n                \n                    \n                    findByIdAndUpdate(entityId: string, updateEntityData: UpdateQuery)\n                \n            \n\n\n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    entityId\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    updateEntityData\n                                    \n                                            UpdateQuery\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     Promise\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        Public\n                        Async\n                        findOne\n                        \n                    \n                \n            \n            \n                \n                    \n                    findOne(entityFilterQuery: FilterQuery, projection?: Record)\n                \n            \n\n\n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    entityFilterQuery\n                                    \n                                            FilterQuery\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    projection\n                                    \n                                            Record\n                                    \n\n                                    \n                                        Yes\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     Promise\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n\n            \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                            Private\n                            Readonly\n                        baseProjection\n                        \n                    \n                \n            \n                \n                    \n                        Type :         object\n\n                    \n                \n                \n                    \n                        Default value : { __v: 0 }\n                    \n                \n\n\n        \n    \n\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/BookService.html":{"url":"injectables/BookService.html","title":"injectable - BookService","body":"\n                   \n\n\n\n\n\n\n\n\n  Injectables\n  BookService\n\n\n\n        \n            API Info\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/book/book.service.ts\n        \n\n\n\n\n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    Public\n                                    Async\n                                create\n                            \n                            \n                                    Public\n                                    Async\n                                findAll\n                            \n                            \n                                    Public\n                                    Async\n                                findOne\n                            \n                            \n                                    Private\n                                    Async\n                                processUploadedFiles\n                            \n                            \n                                    Public\n                                    Async\n                                remove\n                            \n                            \n                                    Public\n                                    Async\n                                update\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(bookRepository: BookRepository)\n                    \n                \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        bookRepository\n                                                  \n                                                        \n                                                                        BookRepository\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        Public\n                        Async\n                        create\n                        \n                    \n                \n            \n            \n                \n                    \n                    create(files: UploadBookDto, b: CreateBookDto)\n                \n            \n\n\n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    files\n                                    \n                                                UploadBookDto\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    b\n                                    \n                                                CreateBookDto\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     unknown\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        Public\n                        Async\n                        findAll\n                        \n                    \n                \n            \n            \n                \n                    \n                    findAll()\n                \n            \n\n\n\n\n            \n                \n\n                    \n                        Returns :     unknown\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        Public\n                        Async\n                        findOne\n                        \n                    \n                \n            \n            \n                \n                    \n                    findOne(id: string)\n                \n            \n\n\n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    id\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     unknown\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        Private\n                        Async\n                        processUploadedFiles\n                        \n                    \n                \n            \n            \n                \n                    \n                    processUploadedFiles(f: UploadBookDto, bookName: string)\n                \n            \n\n\n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    f\n                                    \n                                                UploadBookDto\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    bookName\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     unknown\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        Public\n                        Async\n                        remove\n                        \n                    \n                \n            \n            \n                \n                    \n                    remove(id: string)\n                \n            \n\n\n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    id\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     unknown\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        Public\n                        Async\n                        update\n                        \n                    \n                \n            \n            \n                \n                    \n                    update(id: string, updateBookDto: UpdateBookDto)\n                \n            \n\n\n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    id\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    updateBookDto\n                                    \n                                                UpdateBookDto\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     unknown\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"controllers/CategoryController.html":{"url":"controllers/CategoryController.html","title":"controller - CategoryController","body":"\n                   \n\n\n\n\n\n\n  Controllers\n  CategoryController\n\n\n\n        \n            API Info\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/category/category.controller.ts\n        \n\n\n\n\n\n\n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                create\n                            \n                            \n                                find\n                            \n                            \n                                index\n                            \n                            \n                                remove\n                            \n                            \n                                update\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        create\n                        \n                    \n                \n            \n            \n                \ncreate(createCategoryDto: CreateCategoryDto)\n                \n            \n\n            \n                \n                    Decorators : \n                    \n                    @ApiBody({type: CreateCategoryDto})@ApiCreatedResponse({description: 'The record has been successfully created.'})@ApiBadRequestResponse({description: 'The record has failed validation.'})@ApiConflictResponse({description: 'The record has an internal conflict.'})@ApiForbiddenResponse({description: 'Forbidden!'})@UseRoles(Role.ADMIN, Role.SUPER_ADMIN)@UseGuards(JwtAuthGuard, RolesGuard)@Post()\n                \n            \n\n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    createCategoryDto\n                                    \n                                                CreateCategoryDto\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         any\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        find\n                        \n                    \n                \n            \n            \n                \nfind(id: string)\n                \n            \n\n            \n                \n                    Decorators : \n                    \n                    @ApiOkResponse({description: 'The record has been successfully returned.'})@ApiNotFoundResponse({description: 'The record was not found.'})@ApiForbiddenResponse({description: 'Forbidden!'})@ApiParam({name: 'id', description: 'Category id'})@Get(':id')\n                \n            \n\n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    id\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         any\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        index\n                        \n                    \n                \n            \n            \n                \nindex()\n                \n            \n\n            \n                \n                    Decorators : \n                    \n                    @ApiOkResponse({description: 'The record has been successfully returned.'})@ApiNotFoundResponse({description: 'The record was not found.'})@ApiForbiddenResponse({description: 'Forbidden!'})@Get()\n                \n            \n\n\n\n            \n                \n\n                    \n                        Returns :         any\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        remove\n                        \n                    \n                \n            \n            \n                \nremove(id: string)\n                \n            \n\n            \n                \n                    Decorators : \n                    \n                    @ApiOkResponse({description: 'The record has been successfully returned.'})@ApiNotFoundResponse({description: 'The record was not found.'})@ApiForbiddenResponse({description: 'Forbidden!'})@ApiParam({name: 'id', description: 'Category id'})@UseRoles(Role.ADMIN, Role.SUPER_ADMIN)@UseGuards(JwtAuthGuard, RolesGuard)@Delete(':id')\n                \n            \n\n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    id\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         any\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        update\n                        \n                    \n                \n            \n            \n                \nupdate(id: string, updateCategoryDto: UpdateCategoryDto)\n                \n            \n\n            \n                \n                    Decorators : \n                    \n                    @ApiOkResponse({description: 'The record has been successfully returned.'})@ApiNotFoundResponse({description: 'The record was not found.'})@ApiForbiddenResponse({description: 'Forbidden!'})@ApiParam({name: 'id', description: 'Category id'})@UseRoles(Role.ADMIN, Role.SUPER_ADMIN)@UseGuards(JwtAuthGuard, RolesGuard)@Patch(':id')\n                \n            \n\n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    id\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    updateCategoryDto\n                                    \n                                                UpdateCategoryDto\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         any\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/CategoryEntity.html":{"url":"classes/CategoryEntity.html","title":"class - CategoryEntity","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  CategoryEntity\n\n\n\n        \n            API Info\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/category/models/category.entity.ts\n        \n\n\n\n            \n                Extends\n            \n            \n                        BaseEntitySchema\n            \n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                description\n                            \n                            \n                                name\n                            \n                            \n                                parent\n                            \n                            \n                                    Readonly\n                                _id\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n\n            \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                        description\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @Prop({required: true, trim: true, minlength: 20, maxlength: 2048})\n                        \n                    \n                \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        name\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @Prop({required: true, unique: true, trim: true, minlength: 3, maxlength: 256})\n                        \n                    \n                \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        parent\n                        \n                    \n                \n            \n                \n                    \n                        Type :         CategoryEntity | null\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @Prop({required: false, type: undefined, ref: 'categories', default: undefined})\n                        \n                    \n                \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Readonly\n                        _id\n                        \n                    \n                \n            \n                \n                    \n                        Type :     ObjectID\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @Prop()\n                        \n                    \n                \n\n\n        \n    \n\n\n\n\n\n\n\n\n    \n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"modules/CategoryModule.html":{"url":"modules/CategoryModule.html","title":"module - CategoryModule","body":"\n                   \n\n\n\n\n    Modules\n    CategoryModule\n\n\n\n    \n        \n\n\n\n\n\ndependencies\n\ndependencies\n\ncluster_CategoryModule\n\n\n\ncluster_CategoryModule_providers\n\n\n\n\nCategoryRepository\n\nCategoryRepository\n\n\n\nCategoryModule\n\nCategoryModule\n\nCategoryModule -->\n\nCategoryRepository->CategoryModule\n\n\n\n\n\nCategoryService\n\nCategoryService\n\nCategoryModule -->\n\nCategoryService->CategoryModule\n\n\n\n\n\n\n    \n    \n    \n        Zoom in\n        Reset\n        Zoom out\n    \n\n\n\n\n\n    \n        API Info\n    \n\n\n\n    \n\n        \n            File\n        \n        \n            src/category/category.module.ts\n        \n\n\n\n\n\n        \n            \n                \n                    Providers\n                    \n                        \n                            CategoryRepository\n                        \n                        \n                            CategoryService\n                        \n                    \n                \n                \n                    Controllers\n                    \n                        \n                            CategoryController\n                        \n                    \n                \n            \n        \n\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/CategoryRepository.html":{"url":"injectables/CategoryRepository.html","title":"injectable - CategoryRepository","body":"\n                   \n\n\n\n\n\n\n\n\n  Injectables\n  CategoryRepository\n\n\n\n        \n            API Info\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/category/models/category.repository.ts\n        \n\n\n\n            \n                Extends\n            \n            \n                        EntityRepository\n            \n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Private\n                                    Readonly\n                                baseProjection\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    Public\n                                    Async\n                                create\n                            \n                            \n                                    Public\n                                    Async\n                                deleteMany\n                            \n                            \n                                    Public\n                                    Async\n                                deleteOne\n                            \n                            \n                                    Public\n                                    Async\n                                find\n                            \n                            \n                                    Public\n                                    Async\n                                findById\n                            \n                            \n                                    Public\n                                    Async\n                                findByIdAndUpdate\n                            \n                            \n                                    Public\n                                    Async\n                                findOne\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(categoryModel: Model)\n                    \n                \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        categoryModel\n                                                  \n                                                        \n                                                                        Model\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        Public\n                        Async\n                        create\n                        \n                    \n                \n            \n            \n                \n                    \n                    create(createEntityData: Partial)\n                \n            \n\n\n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    createEntityData\n                                    \n                                            Partial\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     Promise\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        Public\n                        Async\n                        deleteMany\n                        \n                    \n                \n            \n            \n                \n                    \n                    deleteMany(entityFilterQuery: FilterQuery)\n                \n            \n\n\n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    entityFilterQuery\n                                    \n                                            FilterQuery\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     Promise\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        Public\n                        Async\n                        deleteOne\n                        \n                    \n                \n            \n            \n                \n                    \n                    deleteOne(entityFilterQuery: FilterQuery)\n                \n            \n\n\n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    entityFilterQuery\n                                    \n                                            FilterQuery\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     Promise\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        Public\n                        Async\n                        find\n                        \n                    \n                \n            \n            \n                \n                    \n                    find(entityFilterQuery?: FilterQuery, projection?: Record)\n                \n            \n\n\n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    entityFilterQuery\n                                    \n                                            FilterQuery\n                                    \n\n                                    \n                                        Yes\n                                    \n\n\n                                \n                                \n                                    projection\n                                    \n                                            Record\n                                    \n\n                                    \n                                        Yes\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     Promise\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        Public\n                        Async\n                        findById\n                        \n                    \n                \n            \n            \n                \n                    \n                    findById(entityId: string, projection?: Record)\n                \n            \n\n\n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    entityId\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    projection\n                                    \n                                            Record\n                                    \n\n                                    \n                                        Yes\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     Promise\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        Public\n                        Async\n                        findByIdAndUpdate\n                        \n                    \n                \n            \n            \n                \n                    \n                    findByIdAndUpdate(entityId: string, updateEntityData: UpdateQuery)\n                \n            \n\n\n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    entityId\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    updateEntityData\n                                    \n                                            UpdateQuery\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     Promise\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        Public\n                        Async\n                        findOne\n                        \n                    \n                \n            \n            \n                \n                    \n                    findOne(entityFilterQuery: FilterQuery, projection?: Record)\n                \n            \n\n\n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    entityFilterQuery\n                                    \n                                            FilterQuery\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    projection\n                                    \n                                            Record\n                                    \n\n                                    \n                                        Yes\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     Promise\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n\n            \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                            Private\n                            Readonly\n                        baseProjection\n                        \n                    \n                \n            \n                \n                    \n                        Type :         object\n\n                    \n                \n                \n                    \n                        Default value : { __v: 0 }\n                    \n                \n\n\n        \n    \n\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/CategoryService.html":{"url":"injectables/CategoryService.html","title":"injectable - CategoryService","body":"\n                   \n\n\n\n\n\n\n\n\n  Injectables\n  CategoryService\n\n\n\n        \n            API Info\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/category/category.service.ts\n        \n\n\n\n\n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    Public\n                                    Async\n                                create\n                            \n                            \n                                    Public\n                                    Async\n                                findAll\n                            \n                            \n                                    Public\n                                    Async\n                                findOne\n                            \n                            \n                                    Public\n                                    Async\n                                remove\n                            \n                            \n                                    Public\n                                    Async\n                                update\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(categoryRepository: CategoryRepository)\n                    \n                \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        categoryRepository\n                                                  \n                                                        \n                                                                        CategoryRepository\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        Public\n                        Async\n                        create\n                        \n                    \n                \n            \n            \n                \n                    \n                    create(c: CreateCategoryDto)\n                \n            \n\n\n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    c\n                                    \n                                                CreateCategoryDto\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     unknown\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        Public\n                        Async\n                        findAll\n                        \n                    \n                \n            \n            \n                \n                    \n                    findAll()\n                \n            \n\n\n\n\n            \n                \n\n                    \n                        Returns :     unknown\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        Public\n                        Async\n                        findOne\n                        \n                    \n                \n            \n            \n                \n                    \n                    findOne(id: string)\n                \n            \n\n\n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    id\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     unknown\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        Public\n                        Async\n                        remove\n                        \n                    \n                \n            \n            \n                \n                    \n                    remove(id: string)\n                \n            \n\n\n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    id\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     unknown\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        Public\n                        Async\n                        update\n                        \n                    \n                \n            \n            \n                \n                    \n                    update(id: string, updateCategoryDto: UpdateCategoryDto)\n                \n            \n\n\n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    id\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    updateCategoryDto\n                                    \n                                                UpdateCategoryDto\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     unknown\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"modules/ConfigModule.html":{"url":"modules/ConfigModule.html","title":"module - ConfigModule","body":"\n                   \n\n\n\n\n    Modules\n    ConfigModule\n\n\n\n    \n        \n\n\n\n\n\ndependencies\n\ndependencies\n\ncluster_ConfigModule\n\n\n\ncluster_ConfigModule_exports\n\n\n\n\nConfigService \n\nConfigService \n\n\n\nConfigModule\n\nConfigModule\n\nConfigService  -->\n\nConfigModule->ConfigService \n\n\n\n\n\n\n    \n    \n    \n        Zoom in\n        Reset\n        Zoom out\n    \n\n\n\n\n\n    \n        API Info\n    \n\n\n\n    \n\n        \n            File\n        \n        \n            src/config/config.module.ts\n        \n\n\n\n\n\n        \n            \n                \n                    Exports\n                    \n                        \n                            ConfigService\n                        \n                    \n                \n            \n        \n\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/ConfigService.html":{"url":"classes/ConfigService.html","title":"class - ConfigService","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  ConfigService\n\n\n\n        \n            API Info\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/config/config.service.ts\n        \n\n\n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Private\n                                    Readonly\n                                config\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    Private\n                                setDefaultConfig\n                            \n                            \n                                    Private\n                                validate\n                            \n                        \n                    \n                \n\n\n\n\n\n                    \n                        \n                            Accessors\n                        \n                    \n                    \n                        \n                            \n                                \n                                    isDevelopment\n                                \n                                \n                                    isProduction\n                                \n                                \n                                    isTest\n                                \n                                \n                                    apiOptions\n                                \n                                \n                                    authOptions\n                                \n                                \n                                    dbOptions\n                                \n                            \n                        \n                    \n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor()\n                    \n                \n\n            \n        \n\n\n            \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                            Private\n                            Readonly\n                        config\n                        \n                    \n                \n            \n                \n                    \n                        Type :         RuntimeSetismConfig\n\n                    \n                \n\n\n        \n    \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        Private\n                        setDefaultConfig\n                        \n                    \n                \n            \n            \n                \n                    \n                    setDefaultConfig()\n                \n            \n\n\n\n\n            \n                \n\n                    \n                        Returns :         RuntimeSetismConfig\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        Private\n                        validate\n                        \n                    \n                \n            \n            \n                \n                    \n                    validate()\n                \n            \n\n\n\n\n            \n                \n\n                    \n                        Returns :         any\n\n                    \n                \n            \n        \n    \n\n\n\n\n\n\n            \n    \n        Accessors\n    \n        \n            \n                \n                    \n                        \n                        isDevelopment\n                    \n                \n\n                \n                    \n                        getisDevelopment()\n                    \n                \n\n            \n        \n        \n            \n                \n                    \n                        \n                        isProduction\n                    \n                \n\n                \n                    \n                        getisProduction()\n                    \n                \n\n            \n        \n        \n            \n                \n                    \n                        \n                        isTest\n                    \n                \n\n                \n                    \n                        getisTest()\n                    \n                \n\n            \n        \n        \n            \n                \n                    \n                        \n                        apiOptions\n                    \n                \n\n                \n                    \n                        getapiOptions()\n                    \n                \n\n            \n        \n        \n            \n                \n                    \n                        \n                        authOptions\n                    \n                \n\n                \n                    \n                        getauthOptions()\n                    \n                \n\n            \n        \n        \n            \n                \n                    \n                        \n                        dbOptions\n                    \n                \n\n                \n                    \n                        getdbOptions()\n                    \n                \n\n            \n        \n\n    \n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/ConnectionOptions.html":{"url":"interfaces/ConnectionOptions.html","title":"interface - ConnectionOptions","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  \n  ConnectionOptions\n\n\n\n        \n            API Info\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/config/config.interface.ts\n        \n\n\n\n\n        \n            Index\n            \n                \n                    \n                        \n                            Properties\n                        \n                    \n                    \n                        \n                            \n                                \n                                            Optional\n                                        \n                                            connectionUri\n                                        \n                                \n                                \n                                            Optional\n                                        \n                                            testConnectionUri\n                                        \n                                \n                            \n                        \n                    \n                \n            \n        \n\n\n\n            \n                Properties\n                    \n                        \n                                \n                                    \n                                        \n                                        connectionUri\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        connectionUri:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                            \n                                \n                                    Database connection string\n\n                                \n                            \n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        testConnectionUri\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        testConnectionUri:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                            \n                                \n                                    Database connection string for testing env\n\n                                \n                            \n                        \n                    \n            \n    \n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/CreateAuthorDto.html":{"url":"classes/CreateAuthorDto.html","title":"class - CreateAuthorDto","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  CreateAuthorDto\n\n\n\n        \n            API Info\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/author/dto/create-author.dto.ts\n        \n\n\n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Optional\n                                avatar\n                            \n                            \n                                    Optional\n                                biography\n                            \n                            \n                                books\n                            \n                            \n                                name\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n\n            \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                            Optional\n                        avatar\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @ApiProperty({description: 'Author avatar', required: false})@IsOptional()\n                        \n                    \n                \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Optional\n                        biography\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @ApiProperty({description: 'Author biography', required: false})@IsOptional()@MinLength(12, {message: 'Biography must be at least 12 characters!'})@MaxLength(2048, {message: 'Biography must be at most 2048 characters!'})\n                        \n                    \n                \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        books\n                        \n                    \n                \n            \n                \n                    \n                        Type :         BookEntity[]\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @ApiProperty({description: 'A list of all author's book IDs', default: undefined})@IsString({each: true, message: 'Book entry must be of type string!'})@IsDefined({message: 'Author books must not be empty!'})\n                        \n                    \n                \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        name\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @ApiProperty({description: 'Author name', default: 'Paulette Jiles'})@IsString({message: 'Author must be of type string!'})@IsDefined({message: 'Author must not be empty!'})\n                        \n                    \n                \n\n\n        \n    \n\n\n\n\n\n\n\n\n    \n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/CreateBookDto.html":{"url":"classes/CreateBookDto.html","title":"class - CreateBookDto","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  CreateBookDto\n\n\n\n        \n            API Info\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/book/dto/create-book.dto.ts\n        \n\n\n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                author\n                            \n                            \n                                categories\n                            \n                            \n                                description\n                            \n                            \n                                isbn\n                            \n                            \n                                name\n                            \n                            \n                                publisher\n                            \n                            \n                                releaseDate\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n\n            \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                        author\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @ApiProperty({description: 'The author of the book', default: ''})@IsString({message: 'Author must be of type string!'})@IsDefined({message: 'Author must not be empty!'})\n                        \n                    \n                \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        categories\n                        \n                    \n                \n            \n                \n                    \n                        Type :     string[]\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @ApiProperty({description: 'A list of book category ID references', default: undefined})@IsString({each: true, message: 'Category must be of type string!'})@IsDefined({message: 'Categories must not be empty!'})\n                        \n                    \n                \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        description\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @ApiProperty({description: 'Book description', default: BOOK_DESCRIPTION})@IsString({message: 'Description must be of type string!'})@MinLength(54, {message: 'Description must have at least 54 characters!'})@MaxLength(4096, {message: 'Description must be at most 4096 characters!'})@IsDefined({message: 'Description must not be empty!'})\n                        \n                    \n                \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        isbn\n                        \n                    \n                \n            \n                \n                    \n                        Type :         number\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @ApiProperty({description: 'Book ISBN number', default: 9780062574350})@IsISBN(13, {message: 'ISBN version must be '13''})@IsDefined({message: 'ISBN must not be empty!'})\n                        \n                    \n                \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        name\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @ApiProperty({description: 'Book name', default: BOOK_NAME})@IsString({message: 'Name must be of type string!'})@MinLength(5, {message: 'Name must have at least 5 characters!'})@MaxLength(256, {message: 'Name must be at most 256 characters!'})@IsDefined({message: 'Name must not be empty!'})\n                        \n                    \n                \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        publisher\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @ApiProperty({description: 'The publisher of the book', default: ''})@IsString({message: 'Author must be of type string!'})@IsDefined({message: 'Author must not be empty!'})\n                        \n                    \n                \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        releaseDate\n                        \n                    \n                \n            \n                \n                    \n                        Type :         number\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @ApiProperty({description: 'Date of the book release', default: 1519211809934})@IsNumberString({}, {message: 'Release Date must be a positive number!'})@IsDefined({message: 'Release Date must not be empty!'})\n                        \n                    \n                \n\n\n        \n    \n\n\n\n\n\n\n\n\n    \n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/CreateCategoryDto.html":{"url":"classes/CreateCategoryDto.html","title":"class - CreateCategoryDto","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  CreateCategoryDto\n\n\n\n        \n            API Info\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/category/dto/create-category.dto.ts\n        \n\n\n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                description\n                            \n                            \n                                name\n                            \n                            \n                                parent\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n\n            \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                        description\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @ApiProperty({description: 'Category description', default: 'Layered novels with literary merit.'})@IsString({message: 'Description must be of type string!'})@MinLength(20, {message: 'Description must have at least 54 characters!'})@MaxLength(2048, {message: 'Description must be at most 4096 characters!'})@IsDefined({message: 'Description must not be empty!'})\n                        \n                    \n                \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        name\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @ApiProperty({description: 'Category name', default: 'Literary Fiction'})@IsString({message: 'Name must be of type string!'})@MinLength(3, {message: 'Name must have at least 3 characters!'})@MaxLength(256, {message: 'Name must be at most 256 characters!'})@IsDefined({message: 'Name must not be empty!'})\n                        \n                    \n                \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        parent\n                        \n                    \n                \n            \n                \n                    \n                        Type :         CategoryEntity | null\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @ApiProperty({description: 'Parent category which belongs to', default: undefined})@IsOptional()\n                        \n                    \n                \n\n\n        \n    \n\n\n\n\n\n\n\n\n    \n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/CreateReadingListDto.html":{"url":"classes/CreateReadingListDto.html","title":"class - CreateReadingListDto","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  CreateReadingListDto\n\n\n\n        \n            API Info\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/user/dto/readingList-create.dto.ts\n        \n\n\n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                books\n                            \n                            \n                                    Optional\n                                description\n                            \n                            \n                                kind\n                            \n                            \n                                name\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n\n            \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                        books\n                        \n                    \n                \n            \n                \n                    \n                        Type :     string[]\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @IsString({each: true})@IsDefined()\n                        \n                    \n                \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Optional\n                        description\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @IsString()@IsOptional()@MinLength(20, {message: 'Name must have at least 20 characters'})@MaxLength(1024, {message: 'Name must have at most 1024 characters'})\n                        \n                    \n                \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        kind\n                        \n                    \n                \n            \n                \n                    \n                        Type :         ReadingListType\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @IsEnum(ReadingListKind)@IsDefined()\n                        \n                    \n                \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        name\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @IsString()@IsDefined()@MinLength(3, {message: 'Name must have at least 3 characters'})@MaxLength(54, {message: 'Name must have at most 54 characters'})\n                        \n                    \n                \n\n\n        \n    \n\n\n\n\n\n\n\n\n    \n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/CreateReviewDto.html":{"url":"classes/CreateReviewDto.html","title":"class - CreateReviewDto","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  CreateReviewDto\n\n\n\n        \n            API Info\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/review/dto/create-review.dto.ts\n        \n\n\n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                comment\n                            \n                            \n                                    Optional\n                                rating\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n\n            \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                        comment\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @ApiProperty({description: 'Reviewer comment on book', required: true})@IsString({message: 'Comment must be of type string!'})@MinLength(100, {message: 'Comment must have at least 100 characters!'})@IsDefined({message: 'Comment must not be empty!'})\n                        \n                    \n                \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Optional\n                        rating\n                        \n                    \n                \n            \n                \n                    \n                        Type :         number\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @ApiProperty({description: 'Reviewer rating on book', required: false, default: 0})@IsOptional()@IsPositive({message: 'Review must be a positive number!'})\n                        \n                    \n                \n\n\n        \n    \n\n\n\n\n\n\n\n\n    \n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/CreateUserDto.html":{"url":"classes/CreateUserDto.html","title":"class - CreateUserDto","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  CreateUserDto\n\n\n\n        \n            API Info\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/auth/dto/create-user.dto.ts\n        \n\n\n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                email\n                            \n                            \n                                fullName\n                            \n                            \n                                password\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n\n            \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                        email\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @ApiProperty({type: 'String', description: 'Email address', default: 'test@email.com'})@IsEmail({}, {message: 'Email address must be a valid email!'})@IsDefined({message: 'Email address must not be empty!'})\n                        \n                    \n                \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        fullName\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @ApiProperty({type: 'String', description: 'User full name', default: 'Api Fullname'})@IsDefined({message: 'Name must not be empty!'})@MinLength(4, {message: 'Name must be at least 4 characters!'})@MaxLength(26, {message: 'Name must be at most 26 characters!'})\n                        \n                    \n                \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        password\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @ApiProperty({type: 'String', description: 'User password', default: 'password123'})@IsDefined({message: 'Password must not be empty!'})@MinLength(6, {message: 'Passowrd must have at least 6 characters!'})@MaxLength(32, {message: 'Password must be at most 32 characters!'})\n                        \n                    \n                \n\n\n        \n    \n\n\n\n\n\n\n\n\n    \n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"modules/DatabaseModule.html":{"url":"modules/DatabaseModule.html","title":"module - DatabaseModule","body":"\n                   \n\n\n\n\n    Modules\n    DatabaseModule\n\n\n\n    \n        \n\n\n\n\n\ndependencies\n\ndependencies\n\ncluster_DatabaseModule\n\n\n\ncluster_DatabaseModule_exports\n\n\n\ncluster_DatabaseModule_providers\n\n\n\n\nDatabaseService \n\nDatabaseService \n\n\n\nDatabaseModule\n\nDatabaseModule\n\nDatabaseService  -->\n\nDatabaseModule->DatabaseService \n\n\n\n\n\nDatabaseService\n\nDatabaseService\n\nDatabaseModule -->\n\nDatabaseService->DatabaseModule\n\n\n\n\n\n\n    \n    \n    \n        Zoom in\n        Reset\n        Zoom out\n    \n\n\n\n\n\n    \n        API Info\n    \n\n\n\n    \n\n        \n            File\n        \n        \n            src/db/db.module.ts\n        \n\n\n\n\n\n        \n            \n                \n                    Providers\n                    \n                        \n                            DatabaseService\n                        \n                    \n                \n                \n                    Exports\n                    \n                        \n                            DatabaseService\n                        \n                    \n                \n            \n        \n\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/DatabaseService.html":{"url":"injectables/DatabaseService.html","title":"injectable - DatabaseService","body":"\n                   \n\n\n\n\n\n\n\n\n  Injectables\n  DatabaseService\n\n\n\n        \n            API Info\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/db/db.service.ts\n        \n\n\n\n\n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                getDbHandle\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(connection: Connection)\n                    \n                \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        connection\n                                                  \n                                                        \n                                                                    Connection\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        getDbHandle\n                        \n                    \n                \n            \n            \n                \ngetDbHandle()\n                \n            \n\n\n\n\n            \n                \n\n                    \n                        Returns :     Connection\n\n                    \n                \n            \n        \n    \n\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/EntityRepository.html":{"url":"classes/EntityRepository.html","title":"class - EntityRepository","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  EntityRepository\n\n\n\n        \n            API Info\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/db/entity.repository.ts\n        \n\n\n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Private\n                                    Readonly\n                                baseProjection\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    Public\n                                    Async\n                                create\n                            \n                            \n                                    Public\n                                    Async\n                                deleteMany\n                            \n                            \n                                    Public\n                                    Async\n                                deleteOne\n                            \n                            \n                                    Public\n                                    Async\n                                find\n                            \n                            \n                                    Public\n                                    Async\n                                findById\n                            \n                            \n                                    Public\n                                    Async\n                                findByIdAndUpdate\n                            \n                            \n                                    Public\n                                    Async\n                                findOne\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(entityModal: Model)\n                    \n                \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        entityModal\n                                                  \n                                                        \n                                                                    Model\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                            Private\n                            Readonly\n                        baseProjection\n                        \n                    \n                \n            \n                \n                    \n                        Type :         object\n\n                    \n                \n                \n                    \n                        Default value : { __v: 0 }\n                    \n                \n\n\n        \n    \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        Public\n                        Async\n                        create\n                        \n                    \n                \n            \n            \n                \n                    \n                    create(createEntityData: Partial)\n                \n            \n\n\n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    createEntityData\n                                    \n                                            Partial\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     Promise\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        Public\n                        Async\n                        deleteMany\n                        \n                    \n                \n            \n            \n                \n                    \n                    deleteMany(entityFilterQuery: FilterQuery)\n                \n            \n\n\n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    entityFilterQuery\n                                    \n                                            FilterQuery\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     Promise\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        Public\n                        Async\n                        deleteOne\n                        \n                    \n                \n            \n            \n                \n                    \n                    deleteOne(entityFilterQuery: FilterQuery)\n                \n            \n\n\n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    entityFilterQuery\n                                    \n                                            FilterQuery\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     Promise\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        Public\n                        Async\n                        find\n                        \n                    \n                \n            \n            \n                \n                    \n                    find(entityFilterQuery?: FilterQuery, projection?: Record)\n                \n            \n\n\n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    entityFilterQuery\n                                    \n                                            FilterQuery\n                                    \n\n                                    \n                                        Yes\n                                    \n\n\n                                \n                                \n                                    projection\n                                    \n                                            Record\n                                    \n\n                                    \n                                        Yes\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     Promise\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        Public\n                        Async\n                        findById\n                        \n                    \n                \n            \n            \n                \n                    \n                    findById(entityId: string, projection?: Record)\n                \n            \n\n\n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    entityId\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    projection\n                                    \n                                            Record\n                                    \n\n                                    \n                                        Yes\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     Promise\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        Public\n                        Async\n                        findByIdAndUpdate\n                        \n                    \n                \n            \n            \n                \n                    \n                    findByIdAndUpdate(entityId: string, updateEntityData: UpdateQuery)\n                \n            \n\n\n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    entityId\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    updateEntityData\n                                    \n                                            UpdateQuery\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     Promise\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        Public\n                        Async\n                        findOne\n                        \n                    \n                \n            \n            \n                \n                    \n                    findOne(entityFilterQuery: FilterQuery, projection?: Record)\n                \n            \n\n\n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    entityFilterQuery\n                                    \n                                            FilterQuery\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    projection\n                                    \n                                            Record\n                                    \n\n                                    \n                                        Yes\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     Promise\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n\n\n\n\n\n\n    \n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/GoogleAuthGuard.html":{"url":"injectables/GoogleAuthGuard.html","title":"injectable - GoogleAuthGuard","body":"\n                   \n\n\n\n\n\n\n\n\n  Injectables\n  GoogleAuthGuard\n\n\n\n        \n            API Info\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/auth/guards/google.guard.ts\n        \n\n\n\n\n\n\n\n\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/GoogleStrategy.html":{"url":"injectables/GoogleStrategy.html","title":"injectable - GoogleStrategy","body":"\n                   \n\n\n\n\n\n\n\n\n  Injectables\n  GoogleStrategy\n\n\n\n        \n            API Info\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/auth/strategies/google.strategy.ts\n        \n\n\n\n\n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    Public\n                                    Async\n                                validate\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(configService: ConfigService)\n                    \n                \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        configService\n                                                  \n                                                        \n                                                                        ConfigService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        Public\n                        Async\n                        validate\n                        \n                    \n                \n            \n            \n                \n                    \n                    validate(_accessToken: string, _refreshToken: string, profile: Profile)\n                \n            \n\n\n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    _accessToken\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    _refreshToken\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    profile\n                                    \n                                            Profile\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     Promise\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/IProcessFile.html":{"url":"interfaces/IProcessFile.html","title":"interface - IProcessFile","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  \n  IProcessFile\n\n\n\n        \n            API Info\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/utils/process-file.ts\n        \n\n\n\n\n        \n            Index\n            \n                \n                    \n                        \n                            Properties\n                        \n                    \n                    \n                        \n                            \n                                \n                                            Optional\n                                        \n                                            customExt\n                                        \n                                \n                                \n                                            Optional\n                                        \n                                            customName\n                                        \n                                \n                                \n                                            Optional\n                                        \n                                            fileBuffer\n                                        \n                                \n                                \n                                        \n                                            fileType\n                                        \n                                \n                                \n                                            Optional\n                                        \n                                            subDir\n                                        \n                                \n                            \n                        \n                    \n                \n            \n        \n\n\n\n            \n                Properties\n                    \n                        \n                                \n                                    \n                                        \n                                        customExt\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        customExt:         ProcessFileExtType\n\n                                    \n                                \n\n                                \n                                    \n                                        Default value : \"jpeg\"\n\n                                    \n                                \n\n                                    \n                                        \n                                            Type :         ProcessFileExtType\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                            \n                                \n                                    Custom extension for the file\n\n                                \n                            \n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        customName\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        customName:         string\n\n                                    \n                                \n\n                                \n                                    \n                                        Default value : UUID string\n\n                                    \n                                \n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                            \n                                \n                                    Custom file name to be saved\n\n                                \n                            \n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        fileBuffer\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        fileBuffer:     Buffer\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     Buffer\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                            \n                                \n                                    The buffer data of the file to be processed\n\n                                \n                            \n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        fileType\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        fileType:         ProcessFileType\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         ProcessFileType\n\n                                        \n                                    \n\n\n\n\n\n                            \n                                \n                                    Type of the file to be processed\n\n                                \n                            \n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        subDir\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        subDir:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                            \n                                \n                                    Sub directory name to be placed under\n\n                                \n                            \n                        \n                    \n            \n    \n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/IResizeImageArgs.html":{"url":"interfaces/IResizeImageArgs.html","title":"interface - IResizeImageArgs","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  \n  IResizeImageArgs\n\n\n\n        \n            API Info\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/utils/process-file.ts\n        \n\n\n\n\n        \n            Index\n            \n                \n                    \n                        \n                            Properties\n                        \n                    \n                    \n                        \n                            \n                                \n                                            Optional\n                                        \n                                            customOptions\n                                        \n                                \n                                \n                                        \n                                            height\n                                        \n                                \n                                \n                                        \n                                            width\n                                        \n                                \n                            \n                        \n                    \n                \n            \n        \n\n\n\n            \n                Properties\n                    \n                        \n                                \n                                    \n                                        \n                                        customOptions\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        customOptions:     sharp.ResizeOptions\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     sharp.ResizeOptions\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        height\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        height:     string | number\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     string | number\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        width\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        width:     string | number\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     string | number\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n            \n    \n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/JwtAuthGuard.html":{"url":"injectables/JwtAuthGuard.html","title":"injectable - JwtAuthGuard","body":"\n                   \n\n\n\n\n\n\n\n\n  Injectables\n  JwtAuthGuard\n\n\n\n        \n            API Info\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/auth/guards/jwt.guard.ts\n        \n\n\n\n\n\n\n\n\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/JwtStrategy.html":{"url":"injectables/JwtStrategy.html","title":"injectable - JwtStrategy","body":"\n                   \n\n\n\n\n\n\n\n\n  Injectables\n  JwtStrategy\n\n\n\n        \n            API Info\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/auth/strategies/jwt.strategy.ts\n        \n\n\n\n\n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    Public\n                                    Async\n                                validate\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(configService: ConfigService)\n                    \n                \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        configService\n                                                  \n                                                        \n                                                                        ConfigService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        Public\n                        Async\n                        validate\n                        \n                    \n                \n            \n            \n                \n                    \n                    validate(payload: any)\n                \n            \n\n\n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    payload\n                                    \n                                                any\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     unknown\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/ProcessFile.html":{"url":"classes/ProcessFile.html","title":"class - ProcessFile","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  ProcessFile\n\n\n\n        \n            API Info\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/utils/process-file.ts\n        \n\n\n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Private\n                                    Readonly\n                                buffer\n                            \n                            \n                                    Private\n                                    Readonly\n                                ext\n                            \n                            \n                                    Private\n                                    Readonly\n                                fileName\n                            \n                            \n                                    Private\n                                    Readonly\n                                subDir\n                            \n                            \n                                    Private\n                                    Readonly\n                                type\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    Private\n                                    Async\n                                getOutputDir\n                            \n                            \n                                    Public\n                                    Async\n                                resizeAndSave\n                            \n                            \n                                    Public\n                                    Async\n                                saveFile\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \n                                Public\n                        constructor(args: IProcessFile)\n                    \n                \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        args\n                                                  \n                                                        \n                                                                        IProcessFile\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                            Private\n                            Readonly\n                        buffer\n                        \n                    \n                \n            \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Private\n                            Readonly\n                        ext\n                        \n                    \n                \n            \n                \n                    \n                        Type :         ProcessFileExtType\n\n                    \n                \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Private\n                            Readonly\n                        fileName\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Private\n                            Readonly\n                        subDir\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Private\n                            Readonly\n                        type\n                        \n                    \n                \n            \n                \n                    \n                        Type :         ProcessFileType\n\n                    \n                \n\n\n        \n    \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        Private\n                        Async\n                        getOutputDir\n                        \n                    \n                \n            \n            \n                \n                    \n                    getOutputDir(useStaticPath)\n                \n            \n\n\n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Optional\n                                    Default value\n                                \n                            \n                            \n                                \n                                    useStaticPath\n\n                                    \n                                        No\n                                    \n\n                                    \n                                        false\n                                    \n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     Promise\n\n                    \n                    \n                        The path to the output dir\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        Public\n                        Async\n                        resizeAndSave\n                        \n                    \n                \n            \n            \n                \n                    \n                    resizeAndSave(undefined: IResizeImageArgs)\n                \n            \n\n\n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                    Description\n                                \n                            \n                            \n                                \n                                    [object Object]\n                                    \n                                                IResizeImageArgs\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                    \n                                        \nImage width to be resized to\n\n\n                                    \n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     Promise\n\n                    \n                    \n                        Relative path to the processed saved file\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        Public\n                        Async\n                        saveFile\n                        \n                    \n                \n            \n            \n                \n                    \n                    saveFile()\n                \n            \n\n\n\n\n            \n                \n\n                    \n                    \n                    \n                        Returns :     Promise\n\n                    \n                    \n                        Relative path to the saved file\n\n                    \n                \n            \n        \n    \n\n\n\n\n\n\n    \n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"controllers/ReviewController.html":{"url":"controllers/ReviewController.html","title":"controller - ReviewController","body":"\n                   \n\n\n\n\n\n\n  Controllers\n  ReviewController\n\n\n\n        \n            API Info\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/review/review.controller.ts\n        \n\n\n\n\n\n\n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                create\n                            \n                            \n                                findAll\n                            \n                            \n                                findAllBookReviews\n                            \n                            \n                                findOne\n                            \n                            \n                                remove\n                            \n                            \n                                updateHelpful\n                            \n                            \n                                updateReview\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        create\n                        \n                    \n                \n            \n            \n                \ncreate(userId: string, bookId: string, createReviewDto: CreateReviewDto)\n                \n            \n\n            \n                \n                    Decorators : \n                    \n                    @ApiBody({type: CreateReviewDto})@ApiOkResponse({description: 'The record has been successfully created.'})@ApiNotFoundResponse({description: 'The record was not found.'})@ApiBadRequestResponse({description: 'The record has failed validation.'})@ApiForbiddenResponse({description: 'Forbidden!'})@Post(':userId/create/:bookId')\n                \n            \n\n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    userId\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    bookId\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    createReviewDto\n                                    \n                                                CreateReviewDto\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         any\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        findAll\n                        \n                    \n                \n            \n            \n                \nfindAll()\n                \n            \n\n            \n                \n                    Decorators : \n                    \n                    @ApiOkResponse({description: 'The record has been successfully returned.'})@ApiNotFoundResponse({description: 'The record was not found.'})@ApiBadRequestResponse({description: 'The record has failed validation.'})@ApiForbiddenResponse({description: 'Forbidden!'})@Get()@UseRoles(Role.ADMIN, Role.SUPER_ADMIN)\n                \n            \n\n\n\n            \n                \n\n                    \n                        Returns :         any\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        findAllBookReviews\n                        \n                    \n                \n            \n            \n                \nfindAllBookReviews(bookId: string)\n                \n            \n\n            \n                \n                    Decorators : \n                    \n                    @ApiOkResponse({description: 'The record has been successfully returned.'})@ApiNotFoundResponse({description: 'The record was not found.'})@ApiBadRequestResponse({description: 'The record has failed validation.'})@ApiForbiddenResponse({description: 'Forbidden!'})@Get('/book/:bookId')\n                \n            \n\n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    bookId\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         any\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        findOne\n                        \n                    \n                \n            \n            \n                \nfindOne(id: string)\n                \n            \n\n            \n                \n                    Decorators : \n                    \n                    @ApiOkResponse({description: 'The record has been successfully returned.'})@ApiNotFoundResponse({description: 'The record was not found.'})@ApiBadRequestResponse({description: 'The record has failed validation.'})@ApiForbiddenResponse({description: 'Forbidden!'})@Get(':reviewId')\n                \n            \n\n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    id\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         any\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        remove\n                        \n                    \n                \n            \n            \n                \nremove(userId: string, reviewId: string, bookId: string)\n                \n            \n\n            \n                \n                    Decorators : \n                    \n                    @ApiOkResponse({description: 'The record has been successfully removed.'})@ApiNotFoundResponse({description: 'The record was not found.'})@ApiBadRequestResponse({description: 'The record has failed validation.'})@ApiForbiddenResponse({description: 'Forbidden!'})@Delete(':userId/delete/:reviewId/:bookId')\n                \n            \n\n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    userId\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    reviewId\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    bookId\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         any\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        updateHelpful\n                        \n                    \n                \n            \n            \n                \nupdateHelpful(userId: string, reviewId: string)\n                \n            \n\n            \n                \n                    Decorators : \n                    \n                    @ApiOkResponse({description: 'The record has been successfully updated.'})@ApiNotFoundResponse({description: 'The record was not found.'})@ApiBadRequestResponse({description: 'The record has failed validation.'})@ApiForbiddenResponse({description: 'Forbidden!'})@Patch(':userId/update-helpful/:reviewId')\n                \n            \n\n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    userId\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    reviewId\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         any\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        updateReview\n                        \n                    \n                \n            \n            \n                \nupdateReview(userId: string, reviewId: string, updateReviewDto: UpdateReviewDto)\n                \n            \n\n            \n                \n                    Decorators : \n                    \n                    @ApiOkResponse({description: 'The record has been successfully updated.'})@ApiNotFoundResponse({description: 'The record was not found.'})@ApiBadRequestResponse({description: 'The record has failed validation.'})@ApiForbiddenResponse({description: 'Forbidden!'})@Patch(':userId/update-review/:reviewId')\n                \n            \n\n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    userId\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    reviewId\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    updateReviewDto\n                                    \n                                                UpdateReviewDto\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         any\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/ReviewEntity.html":{"url":"classes/ReviewEntity.html","title":"class - ReviewEntity","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  ReviewEntity\n\n\n\n        \n            API Info\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/review/models/review.entity.ts\n        \n\n\n\n            \n                Extends\n            \n            \n                        BaseEntitySchema\n            \n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                comment\n                            \n                            \n                                countHelpFul\n                            \n                            \n                                helpful\n                            \n                            \n                                rating\n                            \n                            \n                                type\n                            \n                            \n                                user\n                            \n                            \n                                    Readonly\n                                _id\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n\n            \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                        comment\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @Prop({required: true, trim: true, minlength: 100, maxlength: 4000})\n                        \n                    \n                \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        countHelpFul\n                        \n                    \n                \n            \n                \n                    \n                        Type :         number\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @Prop({required: true, default: 0})\n                        \n                    \n                \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        helpful\n                        \n                    \n                \n            \n                \n                    \n                        Type :     string[]\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @Prop({required: true, type: undefined})\n                        \n                    \n                \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        rating\n                        \n                    \n                \n            \n                \n                    \n                        Type :         number\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @Prop({required: true, trim: true})\n                        \n                    \n                \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        type\n                        \n                    \n                \n            \n                \n                    \n                        Type :         RoleType\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @Prop({required: true, enum: undefined, default: undefined})\n                        \n                    \n                \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        user\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @Prop({required: true, type: undefined})\n                        \n                    \n                \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Readonly\n                        _id\n                        \n                    \n                \n            \n                \n                    \n                        Type :     ObjectID\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @Prop()\n                        \n                    \n                \n\n\n        \n    \n\n\n\n\n\n\n\n\n    \n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"modules/ReviewModule.html":{"url":"modules/ReviewModule.html","title":"module - ReviewModule","body":"\n                   \n\n\n\n\n    Modules\n    ReviewModule\n\n\n\n    \n        \n\n\n\n\n\ndependencies\n\ndependencies\n\ncluster_ReviewModule\n\n\n\ncluster_ReviewModule_providers\n\n\n\n\nReviewRepository\n\nReviewRepository\n\n\n\nReviewModule\n\nReviewModule\n\nReviewModule -->\n\nReviewRepository->ReviewModule\n\n\n\n\n\nReviewService\n\nReviewService\n\nReviewModule -->\n\nReviewService->ReviewModule\n\n\n\n\n\n\n    \n    \n    \n        Zoom in\n        Reset\n        Zoom out\n    \n\n\n\n\n\n    \n        API Info\n    \n\n\n\n    \n\n        \n            File\n        \n        \n            src/review/review.module.ts\n        \n\n\n\n\n\n        \n            \n                \n                    Providers\n                    \n                        \n                            ReviewRepository\n                        \n                        \n                            ReviewService\n                        \n                    \n                \n                \n                    Controllers\n                    \n                        \n                            ReviewController\n                        \n                    \n                \n            \n        \n\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/ReviewRepository.html":{"url":"injectables/ReviewRepository.html","title":"injectable - ReviewRepository","body":"\n                   \n\n\n\n\n\n\n\n\n  Injectables\n  ReviewRepository\n\n\n\n        \n            API Info\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/review/models/review.repository.ts\n        \n\n\n\n            \n                Extends\n            \n            \n                        EntityRepository\n            \n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Private\n                                    Readonly\n                                baseProjection\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    Public\n                                    Async\n                                create\n                            \n                            \n                                    Public\n                                    Async\n                                deleteMany\n                            \n                            \n                                    Public\n                                    Async\n                                deleteOne\n                            \n                            \n                                    Public\n                                    Async\n                                find\n                            \n                            \n                                    Public\n                                    Async\n                                findById\n                            \n                            \n                                    Public\n                                    Async\n                                findByIdAndUpdate\n                            \n                            \n                                    Public\n                                    Async\n                                findOne\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(reviewModel: Model)\n                    \n                \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        reviewModel\n                                                  \n                                                        \n                                                                        Model\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        Public\n                        Async\n                        create\n                        \n                    \n                \n            \n            \n                \n                    \n                    create(createEntityData: Partial)\n                \n            \n\n\n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    createEntityData\n                                    \n                                            Partial\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     Promise\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        Public\n                        Async\n                        deleteMany\n                        \n                    \n                \n            \n            \n                \n                    \n                    deleteMany(entityFilterQuery: FilterQuery)\n                \n            \n\n\n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    entityFilterQuery\n                                    \n                                            FilterQuery\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     Promise\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        Public\n                        Async\n                        deleteOne\n                        \n                    \n                \n            \n            \n                \n                    \n                    deleteOne(entityFilterQuery: FilterQuery)\n                \n            \n\n\n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    entityFilterQuery\n                                    \n                                            FilterQuery\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     Promise\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        Public\n                        Async\n                        find\n                        \n                    \n                \n            \n            \n                \n                    \n                    find(entityFilterQuery?: FilterQuery, projection?: Record)\n                \n            \n\n\n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    entityFilterQuery\n                                    \n                                            FilterQuery\n                                    \n\n                                    \n                                        Yes\n                                    \n\n\n                                \n                                \n                                    projection\n                                    \n                                            Record\n                                    \n\n                                    \n                                        Yes\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     Promise\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        Public\n                        Async\n                        findById\n                        \n                    \n                \n            \n            \n                \n                    \n                    findById(entityId: string, projection?: Record)\n                \n            \n\n\n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    entityId\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    projection\n                                    \n                                            Record\n                                    \n\n                                    \n                                        Yes\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     Promise\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        Public\n                        Async\n                        findByIdAndUpdate\n                        \n                    \n                \n            \n            \n                \n                    \n                    findByIdAndUpdate(entityId: string, updateEntityData: UpdateQuery)\n                \n            \n\n\n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    entityId\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    updateEntityData\n                                    \n                                            UpdateQuery\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     Promise\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        Public\n                        Async\n                        findOne\n                        \n                    \n                \n            \n            \n                \n                    \n                    findOne(entityFilterQuery: FilterQuery, projection?: Record)\n                \n            \n\n\n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    entityFilterQuery\n                                    \n                                            FilterQuery\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    projection\n                                    \n                                            Record\n                                    \n\n                                    \n                                        Yes\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     Promise\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n\n            \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                            Private\n                            Readonly\n                        baseProjection\n                        \n                    \n                \n            \n                \n                    \n                        Type :         object\n\n                    \n                \n                \n                    \n                        Default value : { __v: 0 }\n                    \n                \n\n\n        \n    \n\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/ReviewService.html":{"url":"injectables/ReviewService.html","title":"injectable - ReviewService","body":"\n                   \n\n\n\n\n\n\n\n\n  Injectables\n  ReviewService\n\n\n\n        \n            API Info\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/review/review.service.ts\n        \n\n\n\n\n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    Async\n                                create\n                            \n                            \n                                    Public\n                                    Async\n                                findAll\n                            \n                            \n                                    Async\n                                findAllBookReviews\n                            \n                            \n                                    Async\n                                findOne\n                            \n                            \n                                    Async\n                                remove\n                            \n                            \n                                    Async\n                                updateHelpful\n                            \n                            \n                                    Async\n                                updateReview\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(reviewRepository: ReviewRepository, bookRepository: BookRepository)\n                    \n                \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        reviewRepository\n                                                  \n                                                        \n                                                                        ReviewRepository\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        bookRepository\n                                                  \n                                                        \n                                                                        BookRepository\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        Async\n                        create\n                        \n                    \n                \n            \n            \n                \n                    \n                    create(userId: string, bookId: string, r: CreateReviewDto)\n                \n            \n\n\n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    userId\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    bookId\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    r\n                                    \n                                                CreateReviewDto\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     unknown\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        Public\n                        Async\n                        findAll\n                        \n                    \n                \n            \n            \n                \n                    \n                    findAll()\n                \n            \n\n\n\n\n            \n                \n\n                    \n                        Returns :     unknown\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        Async\n                        findAllBookReviews\n                        \n                    \n                \n            \n            \n                \n                    \n                    findAllBookReviews(bookId: string)\n                \n            \n\n\n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    bookId\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     unknown\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        Async\n                        findOne\n                        \n                    \n                \n            \n            \n                \n                    \n                    findOne(id: string)\n                \n            \n\n\n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    id\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     unknown\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        Async\n                        remove\n                        \n                    \n                \n            \n            \n                \n                    \n                    remove(userId: string, reviewId: string, bookId: string)\n                \n            \n\n\n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    userId\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    reviewId\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    bookId\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     unknown\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        Async\n                        updateHelpful\n                        \n                    \n                \n            \n            \n                \n                    \n                    updateHelpful(userId: string, reviewId: string)\n                \n            \n\n\n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    userId\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    reviewId\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     unknown\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        Async\n                        updateReview\n                        \n                    \n                \n            \n            \n                \n                    \n                    updateReview(userId: string, reviewId: string, updateReviewDto: UpdateReviewDto)\n                \n            \n\n\n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    userId\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    reviewId\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    updateReviewDto\n                                    \n                                                UpdateReviewDto\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     unknown\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"guards/RolesGuard.html":{"url":"guards/RolesGuard.html","title":"guard - RolesGuard","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n    Guards\n    RolesGuard\n\n\n\n        \n            API Info\n        \n\n\n\n        \n            \n            File\n            \n            \n                src/auth/guards/role.guard.ts\n            \n\n\n\n\n\n\n                \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                canActivate\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n                \n    Constructor\n        \n            \n                \n                    \nconstructor(reflector: Reflector)\n                    \n                \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        reflector\n                                                  \n                                                        \n                                                                    Reflector\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n                \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        canActivate\n                        \n                    \n                \n            \n            \n                \ncanActivate(context: ExecutionContext)\n                \n            \n\n\n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    context\n                                    \n                                            ExecutionContext\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         boolean\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n\n        \n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/RuntimeSetismConfig.html":{"url":"interfaces/RuntimeSetismConfig.html","title":"interface - RuntimeSetismConfig","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  \n  RuntimeSetismConfig\n\n\n\n        \n            API Info\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/config/config.interface.ts\n        \n\n\n            \n                Description\n            \n            \n                All possible configuration options are defined by the\nSetismConfig interface.\n\n            \n\n\n        \n            Index\n            \n                \n                    \n                        \n                            Properties\n                        \n                    \n                    \n                        \n                            \n                                \n                                        \n                                            apiOptions\n                                        \n                                \n                                \n                                        \n                                            authOptions\n                                        \n                                \n                                \n                                        \n                                            dbOptions\n                                        \n                                \n                            \n                        \n                    \n                \n            \n        \n\n\n\n            \n                Properties\n                    \n                        \n                                \n                                    \n                                        \n                                        apiOptions\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        apiOptions:         Required\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         Required\n\n                                        \n                                    \n\n\n\n\n\n                            \n                                \n                                    Configuration for the REST APIs, including hostname, port, CORS settings,\nmiddleware etc.\n\n                                \n                            \n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        authOptions\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        authOptions:         Required\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         Required\n\n                                        \n                                    \n\n\n\n\n\n                            \n                                \n                                    Configuration for authorization.\n\n                                \n                            \n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        dbOptions\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        dbOptions:         Required\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         Required\n\n                                        \n                                    \n\n\n\n\n\n                            \n                                \n                                    The connection options used to connect to the database.\n\n                                \n                            \n                        \n                    \n            \n    \n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/SuperadminCredentials.html":{"url":"interfaces/SuperadminCredentials.html","title":"interface - SuperadminCredentials","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  \n  SuperadminCredentials\n\n\n\n        \n            API Info\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/config/config.interface.ts\n        \n\n\n\n\n        \n            Index\n            \n                \n                    \n                        \n                            Properties\n                        \n                    \n                    \n                        \n                            \n                                \n                                        \n                                            password\n                                        \n                                \n                            \n                        \n                    \n                \n            \n        \n\n\n\n            \n                Properties\n                    \n                        \n                                \n                                    \n                                        \n                                        password\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        password:         string\n\n                                    \n                                \n\n                                \n                                    \n                                        Default value : 'superadmin'\n\n                                    \n                                \n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                            \n                                \n                                    The password to be used to create a superadmin account\n\n                                \n                            \n                        \n                    \n            \n    \n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/SwaggerOptions.html":{"url":"interfaces/SwaggerOptions.html","title":"interface - SwaggerOptions","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  \n  SwaggerOptions\n\n\n\n        \n            API Info\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/config/config.interface.ts\n        \n\n\n\n\n        \n            Index\n            \n                \n                    \n                        \n                            Properties\n                        \n                    \n                    \n                        \n                            \n                                \n                                            Optional\n                                        \n                                            description\n                                        \n                                \n                                \n                                            Optional\n                                        \n                                            title\n                                        \n                                \n                                \n                                            Optional\n                                        \n                                            version\n                                        \n                                \n                            \n                        \n                    \n                \n            \n        \n\n\n\n            \n                Properties\n                    \n                        \n                                \n                                    \n                                        \n                                        description\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        description:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                            \n                                \n                                    Documentation page API description\n\n                                \n                            \n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        title\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        title:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                            \n                                \n                                    Documentation page title\n\n                                \n                            \n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        version\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        version:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                            \n                                \n                                    Documentation API current version\n\n                                \n                            \n                        \n                    \n            \n    \n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/UpdateAuthorDto.html":{"url":"classes/UpdateAuthorDto.html","title":"class - UpdateAuthorDto","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  UpdateAuthorDto\n\n\n\n        \n            API Info\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/author/dto/update-author.dto.ts\n        \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n    \n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/UpdateBookDto.html":{"url":"classes/UpdateBookDto.html","title":"class - UpdateBookDto","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  UpdateBookDto\n\n\n\n        \n            API Info\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/book/dto/update-book.dto.ts\n        \n\n\n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Optional\n                                publishedDate\n                            \n                            \n                                    Optional\n                                reviews\n                            \n                            \n                                    Optional\n                                srcCoverPath\n                            \n                            \n                                    Optional\n                                srcPath\n                            \n                            \n                                    Optional\n                                totalReviews\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n\n            \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                            Optional\n                        publishedDate\n                        \n                    \n                \n            \n                \n                    \n                        Type :         number\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @ApiProperty({description: 'Book file source path', required: false})@IsOptional()\n                        \n                    \n                \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Optional\n                        reviews\n                        \n                    \n                \n            \n                \n                    \n                        Type :     string[]\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @ApiProperty({description: 'A list of book review ID references', required: false})@IsString({each: true, message: 'Review Must be of type string!'})@IsOptional()\n                        \n                    \n                \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Optional\n                        srcCoverPath\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @ApiProperty({description: 'Book cover image source path', required: false})@IsString({message: 'Path must be of type string!'})@IsOptional()\n                        \n                    \n                \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Optional\n                        srcPath\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @ApiProperty({description: 'Book file source path', required: false})@IsString({message: 'Path must be of type string!'})@IsOptional()\n                        \n                    \n                \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Optional\n                        totalReviews\n                        \n                    \n                \n            \n                \n                    \n                        Type :         number\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @ApiProperty({description: 'Total number of book reviews', required: false})@IsPositive({message: 'Total reviews must be a positive number!'})@IsOptional()\n                        \n                    \n                \n\n\n        \n    \n\n\n\n\n\n\n\n\n    \n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/UpdateCategoryDto.html":{"url":"classes/UpdateCategoryDto.html","title":"class - UpdateCategoryDto","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  UpdateCategoryDto\n\n\n\n        \n            API Info\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/category/dto/update-category.dto.ts\n        \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n    \n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/UpdateReviewDto.html":{"url":"classes/UpdateReviewDto.html","title":"class - UpdateReviewDto","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  UpdateReviewDto\n\n\n\n        \n            API Info\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/review/dto/update-review.dto.ts\n        \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n    \n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/UpdateUserDto.html":{"url":"classes/UpdateUserDto.html","title":"class - UpdateUserDto","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  UpdateUserDto\n\n\n\n        \n            API Info\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/user/dto/update-user.dto.ts\n        \n\n\n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Optional\n                                avatar\n                            \n                            \n                                    Optional\n                                biography\n                            \n                            \n                                    Optional\n                                birthday\n                            \n                            \n                                    Optional\n                                newWish\n                            \n                            \n                                    Optional\n                                username\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n\n            \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                            Optional\n                        avatar\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @ApiProperty({type: 'string', description: 'User avatar', required: false})@IsOptional()\n                        \n                    \n                \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Optional\n                        biography\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @ApiProperty({type: 'string', description: 'User biography', required: false})@IsOptional()@MinLength(20, {message: 'Biography must be at least 20 characters!'})\n                        \n                    \n                \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Optional\n                        birthday\n                        \n                    \n                \n            \n                \n                    \n                        Type :         Date\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @ApiProperty({type: 'date', description: 'User birthday', required: false})@IsOptional()@IsDate({message: 'Birthday must be a valid date!'})\n                        \n                    \n                \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Optional\n                        newWish\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @ApiProperty({type: 'number', description: 'New book to be added to wishlist', required: false})@IsOptional()\n                        \n                    \n                \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Optional\n                        username\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @ApiProperty({type: 'string', description: 'Username', required: false})@IsOptional()@MinLength(4, {message: 'Username must be at least 4 characters!'})@MaxLength(14, {message: 'Username must be at least 12 characters!'})\n                        \n                    \n                \n\n\n        \n    \n\n\n\n\n\n\n\n\n    \n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/UploadBookDto.html":{"url":"classes/UploadBookDto.html","title":"class - UploadBookDto","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  UploadBookDto\n\n\n\n        \n            API Info\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/book/dto/upload-book.dto.ts\n        \n\n\n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Optional\n                                cover\n                            \n                            \n                                    Optional\n                                file\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n\n            \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                            Optional\n                        cover\n                        \n                    \n                \n            \n                \n                    \n                        Type :     Express.Multer.File[]\n\n                    \n                \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Optional\n                        file\n                        \n                    \n                \n            \n                \n                    \n                        Type :     Express.Multer.File[]\n\n                    \n                \n\n\n        \n    \n\n\n\n\n\n\n\n\n    \n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"controllers/UserController.html":{"url":"controllers/UserController.html","title":"controller - UserController","body":"\n                   \n\n\n\n\n\n\n  Controllers\n  UserController\n\n\n\n        \n            API Info\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/user/user.controller.ts\n        \n\n\n\n\n\n\n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                createList\n                            \n                            \n                                find\n                            \n                            \n                                index\n                            \n                            \n                                remove\n                            \n                            \n                                update\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        createList\n                        \n                    \n                \n            \n            \n                \ncreateList(id: string, createReadingListDto: CreateReadingListDto)\n                \n            \n\n            \n                \n                    Decorators : \n                    \n                    @ApiBody({type: CreateReadingListDto})@ApiCreatedResponse({description: 'The record has been successfully created.'})@ApiBadRequestResponse({description: 'The record has failed validation.'})@ApiConflictResponse({description: 'The record has an internal conflict.'})@ApiForbiddenResponse({description: 'Forbidden!'})@Post(':id/list')\n                \n            \n\n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    id\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    createReadingListDto\n                                    \n                                                CreateReadingListDto\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         any\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        find\n                        \n                    \n                \n            \n            \n                \nfind(id: string)\n                \n            \n\n            \n                \n                    Decorators : \n                    \n                    @ApiOkResponse({description: 'The record has been successfully returned.'})@ApiNotFoundResponse({description: 'The record was not found.'})@ApiForbiddenResponse({description: 'Forbidden!'})@ApiParam({name: 'id', type: 'String', description: 'User id'})@Get(':id')\n                \n            \n\n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    id\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         any\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        index\n                        \n                    \n                \n            \n            \n                \nindex()\n                \n            \n\n            \n                \n                    Decorators : \n                    \n                    @ApiOkResponse({description: 'The record has been successfully returned.'})@ApiNotFoundResponse({description: 'The record was not found.'})@ApiForbiddenResponse({description: 'Forbidden!'})@UseRoles(Role.ADMIN)@UseGuards(JwtAuthGuard, RolesGuard)@Get()\n                \n            \n\n\n\n            \n                \n\n                    \n                        Returns :         any\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        remove\n                        \n                    \n                \n            \n            \n                \nremove(id: string)\n                \n            \n\n            \n                \n                    Decorators : \n                    \n                    @ApiOkResponse({description: 'The record has been successfully returned.'})@ApiNotFoundResponse({description: 'The record was not found.'})@ApiForbiddenResponse({description: 'Forbidden!'})@ApiParam({name: 'id', type: 'String', description: 'User id'})@Delete(':id')\n                \n            \n\n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    id\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         any\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        update\n                        \n                    \n                \n            \n            \n                \nupdate(id: string, updateUserDto: UpdateUserDto)\n                \n            \n\n            \n                \n                    Decorators : \n                    \n                    @ApiOkResponse({description: 'The record has been successfully returned.'})@ApiNotFoundResponse({description: 'The record was not found.'})@ApiForbiddenResponse({description: 'Forbidden!'})@ApiParam({name: 'id', type: 'String', description: 'User id'})@Patch(':id')\n                \n            \n\n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    id\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    updateUserDto\n                                    \n                                                UpdateUserDto\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         any\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/UserEntity.html":{"url":"classes/UserEntity.html","title":"class - UserEntity","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  UserEntity\n\n\n\n        \n            API Info\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/user/models/user.entity.ts\n        \n\n\n\n            \n                Extends\n            \n            \n                        BaseEntitySchema\n            \n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Public\n                                avatar\n                            \n                            \n                                    Public\n                                biography\n                            \n                            \n                                    Public\n                                birthday\n                            \n                            \n                                    Public\n                                email\n                            \n                            \n                                    Public\n                                firstLogin\n                            \n                            \n                                    Public\n                                fullName\n                            \n                            \n                                    Public\n                                internalComment\n                            \n                            \n                                    Public\n                                lastLogin\n                            \n                            \n                                    Public\n                                password\n                            \n                            \n                                    Public\n                                provider\n                            \n                            \n                                    Public\n                                providerId\n                            \n                            \n                                    Public\n                                readingList\n                            \n                            \n                                    Public\n                                role\n                            \n                            \n                                    Public\n                                username\n                            \n                            \n                                    Public\n                                wishList\n                            \n                            \n                                    Readonly\n                                _id\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n\n            \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                            Public\n                        avatar\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @Prop({default: '', trim: true})\n                        \n                    \n                \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Public\n                        biography\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @Prop({default: '', trim: true})\n                        \n                    \n                \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Public\n                        birthday\n                        \n                    \n                \n            \n                \n                    \n                        Type :     Date | null\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @Prop({type: String, default: undefined})\n                        \n                    \n                \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Public\n                        email\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @Prop({required: true, unique: true, trim: true})\n                        \n                    \n                \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Public\n                        firstLogin\n                        \n                    \n                \n            \n                \n                    \n                        Type :         Date\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @Prop({required: true})\n                        \n                    \n                \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Public\n                        fullName\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @Prop({required: true, trim: true})\n                        \n                    \n                \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Public\n                        internalComment\n                        \n                    \n                \n            \n                \n                    \n                        Type :     string | null\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @Prop({type: String, default: undefined})\n                        \n                    \n                \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Public\n                        lastLogin\n                        \n                    \n                \n            \n                \n                    \n                        Type :         Date\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @Prop({required: true})\n                        \n                    \n                \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Public\n                        password\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @Prop({required: true, trim: true})\n                        \n                    \n                \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Public\n                        provider\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @Prop({default: 'local', lowercase: true, trim: true})\n                        \n                    \n                \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Public\n                        providerId\n                        \n                    \n                \n            \n                \n                    \n                        Type :     string | null\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @Prop({type: String, default: undefined, trim: true})\n                        \n                    \n                \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Public\n                        readingList\n                        \n                    \n                \n            \n                \n                    \n                        Type :         CreateReadingListDto[]\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @Prop(['CreateReadingListDto'])\n                        \n                    \n                \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Public\n                        role\n                        \n                    \n                \n            \n                \n                    \n                        Type :         RoleType\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @Prop({required: true, enum: undefined, default: undefined})\n                        \n                    \n                \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Public\n                        username\n                        \n                    \n                \n            \n                \n                    \n                        Type :     string | null\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @Prop({type: String, trim: true, default: undefined, minlength: 3, maxlength: 12, lowercase: true})\n                        \n                    \n                \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Public\n                        wishList\n                        \n                    \n                \n            \n                \n                    \n                        Type :     string[]\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @Prop({type: undefined})\n                        \n                    \n                \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Readonly\n                        _id\n                        \n                    \n                \n            \n                \n                    \n                        Type :     ObjectID\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @Prop()\n                        \n                    \n                \n\n\n        \n    \n\n\n\n\n\n\n\n\n    \n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"modules/UserModule.html":{"url":"modules/UserModule.html","title":"module - UserModule","body":"\n                   \n\n\n\n\n    Modules\n    UserModule\n\n\n\n    \n        \n\n\n\n\n\ndependencies\n\ndependencies\n\ncluster_UserModule\n\n\n\ncluster_UserModule_providers\n\n\n\n\nUserRepository\n\nUserRepository\n\n\n\nUserModule\n\nUserModule\n\nUserModule -->\n\nUserRepository->UserModule\n\n\n\n\n\nUserService\n\nUserService\n\nUserModule -->\n\nUserService->UserModule\n\n\n\n\n\n\n    \n    \n    \n        Zoom in\n        Reset\n        Zoom out\n    \n\n\n\n\n\n    \n        API Info\n    \n\n\n\n    \n\n        \n            File\n        \n        \n            src/user/user.module.ts\n        \n\n\n\n\n\n        \n            \n                \n                    Providers\n                    \n                        \n                            UserRepository\n                        \n                        \n                            UserService\n                        \n                    \n                \n                \n                    Controllers\n                    \n                        \n                            UserController\n                        \n                    \n                \n            \n        \n\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/UserRepository.html":{"url":"injectables/UserRepository.html","title":"injectable - UserRepository","body":"\n                   \n\n\n\n\n\n\n\n\n  Injectables\n  UserRepository\n\n\n\n        \n            API Info\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/user/models/user.repository.ts\n        \n\n\n\n            \n                Extends\n            \n            \n                        EntityRepository\n            \n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Private\n                                    Readonly\n                                baseProjection\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    Public\n                                    Async\n                                create\n                            \n                            \n                                    Public\n                                    Async\n                                deleteMany\n                            \n                            \n                                    Public\n                                    Async\n                                deleteOne\n                            \n                            \n                                    Public\n                                    Async\n                                find\n                            \n                            \n                                    Public\n                                    Async\n                                findById\n                            \n                            \n                                    Public\n                                    Async\n                                findByIdAndUpdate\n                            \n                            \n                                    Public\n                                    Async\n                                findOne\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(userModel: Model)\n                    \n                \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        userModel\n                                                  \n                                                        \n                                                                        Model\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        Public\n                        Async\n                        create\n                        \n                    \n                \n            \n            \n                \n                    \n                    create(createEntityData: Partial)\n                \n            \n\n\n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    createEntityData\n                                    \n                                            Partial\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     Promise\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        Public\n                        Async\n                        deleteMany\n                        \n                    \n                \n            \n            \n                \n                    \n                    deleteMany(entityFilterQuery: FilterQuery)\n                \n            \n\n\n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    entityFilterQuery\n                                    \n                                            FilterQuery\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     Promise\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        Public\n                        Async\n                        deleteOne\n                        \n                    \n                \n            \n            \n                \n                    \n                    deleteOne(entityFilterQuery: FilterQuery)\n                \n            \n\n\n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    entityFilterQuery\n                                    \n                                            FilterQuery\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     Promise\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        Public\n                        Async\n                        find\n                        \n                    \n                \n            \n            \n                \n                    \n                    find(entityFilterQuery?: FilterQuery, projection?: Record)\n                \n            \n\n\n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    entityFilterQuery\n                                    \n                                            FilterQuery\n                                    \n\n                                    \n                                        Yes\n                                    \n\n\n                                \n                                \n                                    projection\n                                    \n                                            Record\n                                    \n\n                                    \n                                        Yes\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     Promise\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        Public\n                        Async\n                        findById\n                        \n                    \n                \n            \n            \n                \n                    \n                    findById(entityId: string, projection?: Record)\n                \n            \n\n\n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    entityId\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    projection\n                                    \n                                            Record\n                                    \n\n                                    \n                                        Yes\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     Promise\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        Public\n                        Async\n                        findByIdAndUpdate\n                        \n                    \n                \n            \n            \n                \n                    \n                    findByIdAndUpdate(entityId: string, updateEntityData: UpdateQuery)\n                \n            \n\n\n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    entityId\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    updateEntityData\n                                    \n                                            UpdateQuery\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     Promise\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        Public\n                        Async\n                        findOne\n                        \n                    \n                \n            \n            \n                \n                    \n                    findOne(entityFilterQuery: FilterQuery, projection?: Record)\n                \n            \n\n\n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    entityFilterQuery\n                                    \n                                            FilterQuery\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    projection\n                                    \n                                            Record\n                                    \n\n                                    \n                                        Yes\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     Promise\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n\n            \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                            Private\n                            Readonly\n                        baseProjection\n                        \n                    \n                \n            \n                \n                    \n                        Type :         object\n\n                    \n                \n                \n                    \n                        Default value : { __v: 0 }\n                    \n                \n\n\n        \n    \n\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/UserService.html":{"url":"injectables/UserService.html","title":"injectable - UserService","body":"\n                   \n\n\n\n\n\n\n\n\n  Injectables\n  UserService\n\n\n\n        \n            API Info\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/user/user.service.ts\n        \n\n\n\n\n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    Public\n                                    Async\n                                createList\n                            \n                            \n                                    Public\n                                    Async\n                                index\n                            \n                            \n                                    Public\n                                    Async\n                                remove\n                            \n                            \n                                    Public\n                                    Async\n                                show\n                            \n                            \n                                    Public\n                                    Async\n                                update\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(userRepository: UserRepository)\n                    \n                \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        userRepository\n                                                  \n                                                        \n                                                                        UserRepository\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        Public\n                        Async\n                        createList\n                        \n                    \n                \n            \n            \n                \n                    \n                    createList(id: string, createReadingListDto: CreateReadingListDto)\n                \n            \n\n\n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    id\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    createReadingListDto\n                                    \n                                                CreateReadingListDto\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     unknown\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        Public\n                        Async\n                        index\n                        \n                    \n                \n            \n            \n                \n                    \n                    index()\n                \n            \n\n\n\n\n            \n                \n\n                    \n                        Returns :     unknown\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        Public\n                        Async\n                        remove\n                        \n                    \n                \n            \n            \n                \n                    \n                    remove(id: string)\n                \n            \n\n\n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    id\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     unknown\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        Public\n                        Async\n                        show\n                        \n                    \n                \n            \n            \n                \n                    \n                    show(id: string)\n                \n            \n\n\n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    id\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     unknown\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        Public\n                        Async\n                        update\n                        \n                    \n                \n            \n            \n                \n                    \n                    update(id: string, updateUserDto: UpdateUserDto)\n                \n            \n\n\n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    id\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    updateUserDto\n                                    \n                                                UpdateUserDto\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     unknown\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"contributing.html":{"url":"contributing.html","title":"getting-started - contributing","body":"\n                   \n\nContributing\nContributions are what make the open source community such an amazing place to learn, inspire, and create. We heartily welcome any and all contributions that match our code style standards!\nThat being said, this codebase isn't your typical open source project because it's not a library or package with a limited scope — it's an entire product.\nGround Rules\nContributions and discussion guidelines\n\nAll discussions agree to GitHub's Community Guidelines and Acceptable Use Policies. We expect discussions in issues and pull requests to stay positive, productive, and respectful.\n\nReporting a bug or discussing a feature idea\n\nIf you found a technical bug or have ideas for features we should implement, open a new issue. Make sure to follow the issue template and you should be golden! (click here to open a new issue)\n\nFixing a bug or implementing a new feature\n\nIf you find a bug and open a PR that fixes it we'll review it as soon as possible to ensure it matches our code style standards.\nIf you want to implement a new feature, open an issue first to discuss what it'd look like and to ensure it fits in our roadmap and plans for the app (see the roadmap for planned and currently ongoing work).\n\nPrerequisites\nWe require you to use volta to manage your npm and node environment versions\n\nvolta\nGetting Started\n\n\nyarn\nInstallation\n\n\n\nGetting Started\nInstallation\n\nFork the project\nClone the repo\nInstall NPM packagesyarn install\nRun development serveryarn start:dev\n\nBranching\n\nCreate your Feature Branch (git checkout -b feature/#_amazing-feature)\nCommit your Changes (git commit -m \"feat: add some amazing feature\")\nPush to the Branch (git push -u origin feature/#_amazing-feature)\nOpen a Pull Request\n\nPull Requests\nWe require all new PRs to follow these guidelines. Any PR should use git keywords\n [Short summury of the PR, under 50 characters]\n [Detailed description of the PR, it can be used the initial issue description]\n\nFixes #\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"coverage.html":{"url":"coverage.html","title":"coverage - coverage","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n    Documentation coverage\n\n\n\n    \n\n\n\n    \n        \n            File\n            Type\n            Identifier\n            Statements\n        \n    \n    \n        \n            \n                \n                src/auth/auth.controller.ts\n            \n            controller\n            AuthController\n            \n                0 %\n                (0/5)\n            \n        \n        \n            \n                \n                src/auth/auth.service.ts\n            \n            injectable\n            AuthService\n            \n                0 %\n                (0/7)\n            \n        \n        \n            \n                \n                src/auth/decorators/role.decorator.ts\n            \n            variable\n            ROLES_KEY\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                src/auth/decorators/role.decorator.ts\n            \n            variable\n            UseRoles\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                src/auth/dto/auth.dto.ts\n            \n            class\n            AuthDto\n            \n                0 %\n                (0/3)\n            \n        \n        \n            \n                \n                src/auth/dto/create-user.dto.ts\n            \n            class\n            CreateUserDto\n            \n                0 %\n                (0/4)\n            \n        \n        \n            \n                \n                src/auth/guards/google.guard.ts\n            \n            injectable\n            GoogleAuthGuard\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                src/auth/guards/jwt.guard.ts\n            \n            injectable\n            JwtAuthGuard\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                src/auth/guards/role.guard.ts\n            \n            guard\n            RolesGuard\n            \n                0 %\n                (0/3)\n            \n        \n        \n            \n                \n                src/auth/strategies/google.strategy.ts\n            \n            injectable\n            GoogleStrategy\n            \n                0 %\n                (0/3)\n            \n        \n        \n            \n                \n                src/auth/strategies/jwt.strategy.ts\n            \n            injectable\n            JwtStrategy\n            \n                0 %\n                (0/3)\n            \n        \n        \n            \n                \n                src/author/author.controller.ts\n            \n            controller\n            AuthorController\n            \n                0 %\n                (0/6)\n            \n        \n        \n            \n                \n                src/author/author.controller.ts\n            \n            variable\n            CONTROLLER_NAME\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                src/author/author.service.ts\n            \n            injectable\n            AuthorService\n            \n                0 %\n                (0/8)\n            \n        \n        \n            \n                \n                src/author/dto/create-author.dto.ts\n            \n            class\n            CreateAuthorDto\n            \n                0 %\n                (0/5)\n            \n        \n        \n            \n                \n                src/author/dto/update-author.dto.ts\n            \n            class\n            UpdateAuthorDto\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                src/author/models/author.entity.ts\n            \n            class\n            AuthorEntity\n            \n                0 %\n                (0/6)\n            \n        \n        \n            \n                \n                src/author/models/author.entity.ts\n            \n            variable\n            AuthorEntitySchema\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                src/author/models/author.repository.ts\n            \n            injectable\n            AuthorRepository\n            \n                0 %\n                (0/10)\n            \n        \n        \n            \n                \n                src/book/book.controller.ts\n            \n            controller\n            BookController\n            \n                0 %\n                (0/6)\n            \n        \n        \n            \n                \n                src/book/book.service.ts\n            \n            injectable\n            BookService\n            \n                0 %\n                (0/8)\n            \n        \n        \n            \n                \n                src/book/dto/create-book.dto.ts\n            \n            class\n            CreateBookDto\n            \n                0 %\n                (0/8)\n            \n        \n        \n            \n                \n                src/book/dto/create-book.dto.ts\n            \n            variable\n            BOOK_DESCRIPTION\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                src/book/dto/create-book.dto.ts\n            \n            variable\n            BOOK_NAME\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                src/book/dto/update-book.dto.ts\n            \n            class\n            UpdateBookDto\n            \n                0 %\n                (0/6)\n            \n        \n        \n            \n                \n                src/book/dto/upload-book.dto.ts\n            \n            class\n            UploadBookDto\n            \n                0 %\n                (0/3)\n            \n        \n        \n            \n                \n                src/book/models/book.entity.ts\n            \n            class\n            BookEntity\n            \n                0 %\n                (0/14)\n            \n        \n        \n            \n                \n                src/book/models/book.entity.ts\n            \n            variable\n            BookEntitySchema\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                src/book/models/book.repository.ts\n            \n            injectable\n            BookRepository\n            \n                0 %\n                (0/10)\n            \n        \n        \n            \n                \n                src/category/category.controller.ts\n            \n            controller\n            CategoryController\n            \n                0 %\n                (0/6)\n            \n        \n        \n            \n                \n                src/category/category.controller.ts\n            \n            variable\n            CONTROLLER_NAME\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                src/category/category.service.ts\n            \n            injectable\n            CategoryService\n            \n                0 %\n                (0/7)\n            \n        \n        \n            \n                \n                src/category/dto/create-category.dto.ts\n            \n            class\n            CreateCategoryDto\n            \n                0 %\n                (0/4)\n            \n        \n        \n            \n                \n                src/category/dto/update-category.dto.ts\n            \n            class\n            UpdateCategoryDto\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                src/category/models/category.entity.ts\n            \n            class\n            CategoryEntity\n            \n                0 %\n                (0/5)\n            \n        \n        \n            \n                \n                src/category/models/category.entity.ts\n            \n            variable\n            CategoryEntitySchema\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                src/category/models/category.repository.ts\n            \n            injectable\n            CategoryRepository\n            \n                0 %\n                (0/10)\n            \n        \n        \n            \n                \n                src/config/config.interface.ts\n            \n            interface\n            ApiOptions\n            \n                100 %\n                (7/7)\n            \n        \n        \n            \n                \n                src/config/config.interface.ts\n            \n            interface\n            AuthOptions\n            \n                100 %\n                (7/7)\n            \n        \n        \n            \n                \n                src/config/config.interface.ts\n            \n            interface\n            ConnectionOptions\n            \n                66 %\n                (2/3)\n            \n        \n        \n            \n                \n                src/config/config.interface.ts\n            \n            interface\n            RuntimeSetismConfig\n            \n                100 %\n                (4/4)\n            \n        \n        \n            \n                \n                src/config/config.interface.ts\n            \n            interface\n            SuperadminCredentials\n            \n                50 %\n                (1/2)\n            \n        \n        \n            \n                \n                src/config/config.interface.ts\n            \n            interface\n            SwaggerOptions\n            \n                75 %\n                (3/4)\n            \n        \n        \n            \n                \n                src/config/config.service.ts\n            \n            class\n            ConfigService\n            \n                0 %\n                (0/5)\n            \n        \n        \n            \n                \n                src/db/base.schema.ts\n            \n            class\n            BaseEntitySchema\n            \n                0 %\n                (0/2)\n            \n        \n        \n            \n                \n                src/db/db.service.ts\n            \n            injectable\n            DatabaseService\n            \n                0 %\n                (0/3)\n            \n        \n        \n            \n                \n                src/db/entity.repository.ts\n            \n            class\n            EntityRepository\n            \n                0 %\n                (0/10)\n            \n        \n        \n            \n                \n                src/main.ts\n            \n            function\n            bootstrap\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                src/main.ts\n            \n            variable\n            LOG_LABEL\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                src/review/dto/create-review.dto.ts\n            \n            class\n            CreateReviewDto\n            \n                0 %\n                (0/3)\n            \n        \n        \n            \n                \n                src/review/dto/update-review.dto.ts\n            \n            class\n            UpdateReviewDto\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                src/review/models/review.entity.ts\n            \n            class\n            ReviewEntity\n            \n                0 %\n                (0/8)\n            \n        \n        \n            \n                \n                src/review/models/review.entity.ts\n            \n            variable\n            ReviewEntitySchema\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                src/review/models/review.repository.ts\n            \n            injectable\n            ReviewRepository\n            \n                0 %\n                (0/10)\n            \n        \n        \n            \n                \n                src/review/review.controller.ts\n            \n            controller\n            ReviewController\n            \n                0 %\n                (0/8)\n            \n        \n        \n            \n                \n                src/review/review.controller.ts\n            \n            variable\n            CONTROLLER_NAME\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                src/review/review.service.ts\n            \n            injectable\n            ReviewService\n            \n                0 %\n                (0/9)\n            \n        \n        \n            \n                \n                src/swagger.ts\n            \n            function\n            createdocument\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                src/user/dto/readingList-create.dto.ts\n            \n            class\n            CreateReadingListDto\n            \n                0 %\n                (0/5)\n            \n        \n        \n            \n                \n                src/user/dto/update-user.dto.ts\n            \n            class\n            UpdateUserDto\n            \n                0 %\n                (0/6)\n            \n        \n        \n            \n                \n                src/user/models/user.entity.ts\n            \n            class\n            UserEntity\n            \n                0 %\n                (0/17)\n            \n        \n        \n            \n                \n                src/user/models/user.entity.ts\n            \n            variable\n            UserEntitySchema\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                src/user/models/user.repository.ts\n            \n            injectable\n            UserRepository\n            \n                0 %\n                (0/10)\n            \n        \n        \n            \n                \n                src/user/user.controller.ts\n            \n            controller\n            UserController\n            \n                0 %\n                (0/6)\n            \n        \n        \n            \n                \n                src/user/user.service.ts\n            \n            injectable\n            UserService\n            \n                0 %\n                (0/7)\n            \n        \n        \n            \n                \n                src/utils/file-system.ts\n            \n            function\n            doesPathExist\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                src/utils/file-system.ts\n            \n            function\n            makeDir\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                src/utils/file-system.ts\n            \n            function\n            readFile\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                src/utils/file-system.ts\n            \n            function\n            writeFile\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                src/utils/formatters.ts\n            \n            function\n            formatStringForPath\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                src/utils/process-file.ts\n            \n            class\n            ProcessFile\n            \n                0 %\n                (0/10)\n            \n        \n        \n            \n                \n                src/utils/process-file.ts\n            \n            interface\n            IProcessFile\n            \n                83 %\n                (5/6)\n            \n        \n        \n            \n                \n                src/utils/process-file.ts\n            \n            interface\n            IResizeImageArgs\n            \n                0 %\n                (0/4)\n            \n        \n        \n            \n                \n                src/utils/process-file.ts\n            \n            variable\n            LOG_LABEL\n            \n                0 %\n                (0/1)\n            \n        \n    \n\n\n\n\n\n    new Tablesort(document.getElementById('coverage-table'));\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"dependencies.html":{"url":"dependencies.html","title":"package-dependencies - dependencies","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n    \n        Dependencies\n    \n    \n        \n            @nestjs/common : ^8.0.0\n        \n            @nestjs/config : ^1.0.1\n        \n            @nestjs/core : ^8.0.0\n        \n            @nestjs/jwt : ^8.0.0\n        \n            @nestjs/mongoose : ^8.0.1\n        \n            @nestjs/passport : ^8.0.1\n        \n            @nestjs/platform-express : ^8.0.0\n        \n            @nestjs/swagger : ^5.0.9\n        \n            argon2 : ^0.28.2\n        \n            class-transformer : ^0.4.0\n        \n            class-validator : ^0.13.1\n        \n            csurf : ^1.11.0\n        \n            envalid : ^6.0.2\n        \n            helmet : ^4.6.0\n        \n            mongoose : ^5.13.8\n        \n            multer : ^1.4.3\n        \n            passport : ^0.4.1\n        \n            passport-google-oauth20 : ^2.0.0\n        \n            passport-jwt : ^4.0.0\n        \n            reflect-metadata : ^0.1.13\n        \n            rimraf : ^3.0.2\n        \n            rxjs : ^7.2.0\n        \n            sharp : ^0.29.1\n        \n            swagger-ui-express : ^4.1.6\n        \n            uuid : ^8.3.2\n    \n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"miscellaneous/enumerations.html":{"url":"miscellaneous/enumerations.html","title":"miscellaneous-enumerations - enumerations","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n  Miscellaneous\n  Enumerations\n\n\n\n    Index\n    \n        \n            \n                \n                    \n                        \n                            Environment   (src/.../config.interface.ts)\n                        \n                        \n                            ReadingListKind   (src/.../reading-list.enum.ts)\n                        \n                        \n                            Role   (src/.../role.enum.ts)\n                        \n                        \n                            Role   (src/.../role.enum.ts)\n                        \n                    \n                \n            \n        \n    \n\n\n    src/config/config.interface.ts\n    \n        \n            \n                \n                    \n                        \n                        Environment\n                    \n                \n                        \n                            \n                                 Development\n                            \n                        \n                        \n                            \n                                Value : development\n                            \n                        \n                        \n                            \n                                 Production\n                            \n                        \n                        \n                            \n                                Value : production\n                            \n                        \n                        \n                            \n                                 Test\n                            \n                        \n                        \n                            \n                                Value : test\n                            \n                        \n            \n        \n\n    src/user/reading-list.enum.ts\n    \n        \n            \n                \n                    \n                        \n                        ReadingListKind\n                    \n                \n                        \n                            \n                                 PUBLIC\n                            \n                        \n                        \n                            \n                                Value : 0\n                            \n                        \n                        \n                            \n                                 PRIVATE\n                            \n                        \n                        \n                            \n                                Value : 1\n                            \n                        \n            \n        \n\n    src/auth/role.enum.ts\n    \n        \n            \n                \n                    \n                        \n                        Role\n                    \n                \n                        \n                            \n                                 SUPER_ADMIN\n                            \n                        \n                        \n                            \n                                Value : 1\n                            \n                        \n                        \n                            \n                                 ADMIN\n                            \n                        \n                        \n                            \n                                Value : 2\n                            \n                        \n                        \n                            \n                                 READER\n                            \n                        \n                        \n                            \n                                Value : 3\n                            \n                        \n                        \n                            \n                                 PUBLISHER\n                            \n                        \n                        \n                            \n                                Value : 4\n                            \n                        \n                        \n                            \n                                 CRITIC\n                            \n                        \n                        \n                            \n                                Value : 5\n                            \n                        \n                        \n                            \n                                 AUTHOR\n                            \n                        \n                        \n                            \n                                Value : 6\n                            \n                        \n            \n        \n\n    src/review/role.enum.ts\n    \n        \n            \n                \n                    \n                        \n                        Role\n                    \n                \n                        \n                            \n                                 READER\n                            \n                        \n                        \n                            \n                                Value : 1\n                            \n                        \n                        \n                            \n                                 AUTHOR\n                            \n                        \n                        \n                            \n                                Value : 2\n                            \n                        \n            \n        \n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"miscellaneous/functions.html":{"url":"miscellaneous/functions.html","title":"miscellaneous-functions - functions","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n  Miscellaneous\n  Functions\n\n\n\n    Index\n    \n        \n            \n                \n                    \n                        \n                            bootstrap   (src/.../main.ts)\n                        \n                        \n                            createdocument   (src/.../swagger.ts)\n                        \n                        \n                            doesPathExist   (src/.../file-system.ts)\n                        \n                        \n                            formatStringForPath   (src/.../formatters.ts)\n                        \n                        \n                            makeDir   (src/.../file-system.ts)\n                        \n                        \n                            readFile   (src/.../file-system.ts)\n                        \n                        \n                            writeFile   (src/.../file-system.ts)\n                        \n                    \n                \n            \n        \n    \n\n\n    src/main.ts\n    \n        \n        \n            \n                \n                    \n                    \n                        bootstrap\n                        \n                    \n                \n            \n            \n                \nbootstrap()\n                \n            \n\n\n\n\n        \n    \n    src/swagger.ts\n    \n        \n        \n            \n                \n                    \n                    \n                        createdocument\n                        \n                    \n                \n            \n            \n                \ncreatedocument(app: INestApplication)\n                \n            \n\n\n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    app\n                                    \n                                            INestApplication\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     OpenAPIObject\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    src/utils/file-system.ts\n    \n        \n        \n            \n                \n                    \n                    \n                        doesPathExist\n                        \n                    \n                \n            \n            \n                \ndoesPathExist(path: string)\n                \n            \n\n\n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                    Description\n                                \n                            \n                            \n                                \n                                    path\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                    \n                                        \nThe absolute path to be verified\n\n\n                                    \n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     Promise\n\n                    \n                    \n                        true or false\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        makeDir\n                        \n                    \n                \n            \n            \n                \nmakeDir(path: string)\n                \n            \n\n\n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                    Description\n                                \n                            \n                            \n                                \n                                    path\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                    \n                                        \nThe absolute path to where the directory will be created\n\n\n                                    \n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     Promise\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        readFile\n                        \n                    \n                \n            \n            \n                \nreadFile(path: string)\n                \n            \n\n\n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                    Description\n                                \n                            \n                            \n                                \n                                    path\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                    \n                                        \nThe absolute path to the file\n\n\n                                    \n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     Promise\n\n                    \n                    \n                        A buffer of the file or undefined if no file found\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        writeFile\n                        \n                    \n                \n            \n            \n                \nwriteFile(path: string, data: Buffer)\n                \n            \n\n\n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                    Description\n                                \n                            \n                            \n                                \n                                    path\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                    \n                                        \nThe absolute path to the file\n\n\n                                    \n                                \n                                \n                                    data\n                                    \n                                            Buffer\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                    \n                                        \nA buffer containing your file data\n\n\n                                    \n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     Promise\n\n                    \n                    \n                        A buffer of the file or undefined if no file found\n\n                    \n                \n            \n        \n    \n    src/utils/formatters.ts\n    \n        \n        \n            \n                \n                    \n                    \n                        formatStringForPath\n                        \n                    \n                \n            \n            \n                \nformatStringForPath(rawName: string)\n                \n            \n\n\n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                    Description\n                                \n                            \n                            \n                                \n                                    rawName\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                    \n                                        Book name\n\n                                    \n                                \n                            \n                        \n                    \n                    \n                        Example :\n                        \n                            My Book -&gt; my-book\n                        \n                    \n                    \n                        Returns :         string\n\n                    \n                    \n                        Formated book name\n\n                    \n                \n            \n        \n    \n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"index.html":{"url":"index.html","title":"getting-started - index","body":"\n                   \n\n\n  \n  \n    \n  \n  \n  Read anytime, anywhere.\n  \n\n\n\n  \n    \n  \n\n\n\n  About •\n  Roadmap •\n  Contributing •\n  Feedback •\n  Contributors •\n  License •\n  Acknowledgements\n\n\n\n\n\nQuick Links\n\nLive at: dekoo.tk\nBackend Docs: docs.dekoo.tk\nAPI Docs: svr.dekoo.tk\n\n\n\nAbout The Project\nWe all seen services that provides virtual books at outrageous subscription prices and at Dekoo we think that is a stopping point for a lot of people. This fact inspired us to build a service that will provide access to free reading titles along with accessible prices for anyone and everyone.\nHere's why:\n\n33% of people surveyed feel happier after reading.\n55% of people surveyed feel more relaxed after reading\n70% of people surveyed believe that reading has a positive impact on their careers.\nReading stimulates the part of the brain that deals with depression. Self-help books, can help ward off depressive occurrences.\nBeing well-spoken and articulate can help increase job performance and self-esteem.\n\nKey Features\n\nRead books right in your browser\nInstantly have access to a book and it's content from your borwser window\n\n\nSaving books for later\nCreating reading lists\nPublic and private reading lists that you can share on your profile\n\n\nDownload a book in PDF format\nRead what other people think about a book\nReviews are important in picking the right book for you, our review system allows other readers and critics to leave their opinion on the book.\n\n\nDark/Light mode\nProfile page\nSearch and fiter your favorite books\n\nBuilt With\nThe entire codebase consists in TypeScript, here is a list of technologies used:\n\nNestJs: Back-end framework\nMongoDB: Data storage\nSwagger: API Docs\nPassportJs: Authentication Middleware\n\nFolder structure\ndekoo/\n├── assets       # Vendor files\n├── docs         # Compodoc Code documentation\n├── src          # Source files\n└── tests        # E2E testsCode Style\n\nWe run Prettier on-commit, which means you can write code in whatever style you want and it will be automatically formatted according to the common style when you run git commit. We also have ESLint set up, along with Jest tests.\nWe use commitlint with config-conventional, which means all commit messages should follow conventional rules.\n\n\n\nRoadmap\nSee the open issues for a list of proposed features (and known issues).\n\n\nContributing\nAny contributions you make are greatly appreciated. There are many ways in which you can participate in this project, for example:\n\nSubmit bugs and feature requests, and help us verify as they are checked in\nReview source code changes\n\nIf you are interested in fixing issues and contributing directly to the code base,\nplease see the document How to Contribute, which covers the following:\nFeedback\n\nRequest a new feature\nUpvote feature requests\nFile an issue\n\nContributors\nThis project follows the all-contributors specification. See more details about the contributors\n\n\n\n\n  \n    Andrei Chirila💻\n    Arturo Ducasse💻\n  \n\n\n\n\n\n\n\n\n\nLicense\nLicensed under the MIT license. See MIT for more information.\n\n\nAcknowledgements\n\nImg Shields\nHeroku\nGithub Pages\nCompodoc\nHusky\nMongoose\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"license.html":{"url":"license.html","title":"getting-started - license","body":"\n                   \n\nMIT License\nCopyright (c) 2021 Dekoo\nPermission is hereby granted, free of charge, to any person obtaining a copy\nof this software and associated documentation files (the \"Software\"), to deal\nin the Software without restriction, including without limitation the rights\nto use, copy, modify, merge, publish, distribute, sublicense, and/or sell\ncopies of the Software, and to permit persons to whom the Software is\nfurnished to do so, subject to the following conditions:\nThe above copyright notice and this permission notice shall be included in all\ncopies or substantial portions of the Software.\nTHE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR\nIMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,\nFITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE\nAUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER\nLIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,\nOUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE\nSOFTWARE.\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"modules.html":{"url":"modules.html","title":"modules - modules","body":"\n                   \n\n\n\n\n    Modules\n\n\n    \n            \n                \n                    \n                        AppModule\n                    \n                    \n                                \n                                    \n                                        Your browser does not support SVG\n                                    \n                                \n                        \n                            Browse\n                        \n                    \n                \n            \n            \n                \n                    \n                        AuthModule\n                    \n                    \n                                \n                                    \n                                        Your browser does not support SVG\n                                    \n                                \n                        \n                            Browse\n                        \n                    \n                \n            \n            \n                \n                    \n                        AuthorModule\n                    \n                    \n                                \n                                    \n                                        Your browser does not support SVG\n                                    \n                                \n                        \n                            Browse\n                        \n                    \n                \n            \n            \n                \n                    \n                        BookModule\n                    \n                    \n                                \n                                    \n                                        Your browser does not support SVG\n                                    \n                                \n                        \n                            Browse\n                        \n                    \n                \n            \n            \n                \n                    \n                        CategoryModule\n                    \n                    \n                                \n                                    \n                                        Your browser does not support SVG\n                                    \n                                \n                        \n                            Browse\n                        \n                    \n                \n            \n            \n                \n                    \n                        ConfigModule\n                    \n                    \n                                \n                                    \n                                        Your browser does not support SVG\n                                    \n                                \n                        \n                            Browse\n                        \n                    \n                \n            \n            \n                \n                    \n                        DatabaseModule\n                    \n                    \n                                \n                                    \n                                        Your browser does not support SVG\n                                    \n                                \n                        \n                            Browse\n                        \n                    \n                \n            \n            \n                \n                    \n                        ReviewModule\n                    \n                    \n                                \n                                    \n                                        Your browser does not support SVG\n                                    \n                                \n                        \n                            Browse\n                        \n                    \n                \n            \n            \n                \n                    \n                        UserModule\n                    \n                    \n                                \n                                    \n                                        Your browser does not support SVG\n                                    \n                                \n                        \n                            Browse\n                        \n                    \n                \n            \n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"overview.html":{"url":"overview.html","title":"overview - overview","body":"\n                   \n\n\n\n    Overview\n\n  \n\n    \n        \n\n\n\n\n\ndependencies\n\ndependencies\n\ncluster_AppModule\n\n\n\ncluster_AppModule_imports\n\n\n\ncluster_AuthModule\n\n\n\ncluster_AuthModule_exports\n\n\n\ncluster_AuthModule_providers\n\n\n\ncluster_AuthorModule\n\n\n\ncluster_AuthorModule_providers\n\n\n\ncluster_BookModule\n\n\n\ncluster_BookModule_providers\n\n\n\ncluster_CategoryModule\n\n\n\ncluster_CategoryModule_providers\n\n\n\ncluster_ConfigModule\n\n\n\ncluster_ConfigModule_exports\n\n\n\ncluster_DatabaseModule\n\n\n\ncluster_DatabaseModule_exports\n\n\n\ncluster_DatabaseModule_providers\n\n\n\ncluster_ReviewModule\n\n\n\ncluster_ReviewModule_providers\n\n\n\ncluster_UserModule\n\n\n\ncluster_UserModule_providers\n\n\n\n\nAuthModule\n\nAuthModule\n\n\n\nAppModule\n\nAppModule\n\nAppModule -->\n\nAuthModule->AppModule\n\n\n\n\n\nAuthService \n\nAuthService \n\nAuthService  -->\n\nAuthModule->AuthService \n\n\n\n\n\nAuthorModule\n\nAuthorModule\n\nAppModule -->\n\nAuthorModule->AppModule\n\n\n\n\n\nBookModule\n\nBookModule\n\nAppModule -->\n\nBookModule->AppModule\n\n\n\n\n\nCategoryModule\n\nCategoryModule\n\nAppModule -->\n\nCategoryModule->AppModule\n\n\n\n\n\nConfigModule\n\nConfigModule\n\nAppModule -->\n\nConfigModule->AppModule\n\n\n\n\n\nConfigService \n\nConfigService \n\nConfigService  -->\n\nConfigModule->ConfigService \n\n\n\n\n\nDatabaseModule\n\nDatabaseModule\n\nAppModule -->\n\nDatabaseModule->AppModule\n\n\n\n\n\nDatabaseService \n\nDatabaseService \n\nDatabaseService  -->\n\nDatabaseModule->DatabaseService \n\n\n\n\n\nReviewModule\n\nReviewModule\n\nAppModule -->\n\nReviewModule->AppModule\n\n\n\n\n\nUserModule\n\nUserModule\n\nAppModule -->\n\nUserModule->AppModule\n\n\n\n\n\nAuthService\n\nAuthService\n\nAuthModule -->\n\nAuthService->AuthModule\n\n\n\n\n\nGoogleStrategy\n\nGoogleStrategy\n\nAuthModule -->\n\nGoogleStrategy->AuthModule\n\n\n\n\n\nJwtStrategy\n\nJwtStrategy\n\nAuthModule -->\n\nJwtStrategy->AuthModule\n\n\n\n\n\nUserRepository\n\nUserRepository\n\nAuthModule -->\n\nUserRepository->AuthModule\n\n\n\nUserModule -->\n\nUserRepository->UserModule\n\n\n\n\n\nAuthorRepository\n\nAuthorRepository\n\nAuthorModule -->\n\nAuthorRepository->AuthorModule\n\n\n\n\n\nAuthorService\n\nAuthorService\n\nAuthorModule -->\n\nAuthorService->AuthorModule\n\n\n\n\n\nBookRepository\n\nBookRepository\n\nBookModule -->\n\nBookRepository->BookModule\n\n\n\n\n\nBookService\n\nBookService\n\nBookModule -->\n\nBookService->BookModule\n\n\n\n\n\nCategoryRepository\n\nCategoryRepository\n\nCategoryModule -->\n\nCategoryRepository->CategoryModule\n\n\n\n\n\nCategoryService\n\nCategoryService\n\nCategoryModule -->\n\nCategoryService->CategoryModule\n\n\n\n\n\nDatabaseService\n\nDatabaseService\n\nDatabaseModule -->\n\nDatabaseService->DatabaseModule\n\n\n\n\n\nReviewRepository\n\nReviewRepository\n\nReviewModule -->\n\nReviewRepository->ReviewModule\n\n\n\n\n\nReviewService\n\nReviewService\n\nReviewModule -->\n\nReviewService->ReviewModule\n\n\n\n\n\nUserService\n\nUserService\n\nUserModule -->\n\nUserService->UserModule\n\n\n\n\n\n\n    \n    \n    \n        Zoom in\n        Reset\n        Zoom out\n    \n\n  \n\n    \n        \n            \n                \n                    \n                    \n                        9 Modules\n                    \n                \n            \n        \n        \n            \n                \n                    \n                    6 Controllers\n                \n            \n        \n        \n            \n                \n                    \n                    16 Injectables\n                \n            \n        \n        \n            \n                \n                    \n                    22 Classes\n                \n            \n        \n        \n            \n                \n                    \n                    1 Guard\n                \n            \n        \n        \n            \n                \n                    \n                    8 Interfaces\n                \n            \n        \n    \n\n\n \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"miscellaneous/typealiases.html":{"url":"miscellaneous/typealiases.html","title":"miscellaneous-typealiases - typealiases","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n  Miscellaneous\n  Type aliases\n\n\n\n    Index\n    \n        \n            \n                \n                    \n                        \n                            AuthorDocument   (src/.../author.entity.ts)\n                        \n                        \n                            BookDocument   (src/.../book.entity.ts)\n                        \n                        \n                            CategoryDocument   (src/.../category.entity.ts)\n                        \n                        \n                            ProcessFileExtType   (src/.../process-file.ts)\n                        \n                        \n                            ProcessFileType   (src/.../process-file.ts)\n                        \n                        \n                            ReadingListType   (src/.../reading-list.enum.ts)\n                        \n                        \n                            ReviewDocument   (src/.../review.entity.ts)\n                        \n                        \n                            RoleType   (src/.../role.enum.ts)\n                        \n                        \n                            RoleType   (src/.../role.enum.ts)\n                        \n                        \n                            SharpExtType   (src/.../process-file.ts)\n                        \n                        \n                            UserDocument   (src/.../user.entity.ts)\n                        \n                    \n                \n            \n        \n    \n\n\n    src/author/models/author.entity.ts\n    \n    \n        \n            \n                \n                    \n                    AuthorDocument\n                \n            \n            \n                \n                        \n\n                \n            \n        \n    \n    src/book/models/book.entity.ts\n    \n    \n        \n            \n                \n                    \n                    BookDocument\n                \n            \n            \n                \n                        \n\n                \n            \n        \n    \n    src/category/models/category.entity.ts\n    \n    \n        \n            \n                \n                    \n                    CategoryDocument\n                \n            \n            \n                \n                        \n\n                \n            \n        \n    \n    src/utils/process-file.ts\n    \n    \n        \n            \n                \n                    \n                    ProcessFileExtType\n                \n            \n            \n                \n                            SharpExtType | \"pdf\"\n\n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    ProcessFileType\n                \n            \n            \n                \n                        \"cover\" | \"avatar\" | \"file\"\n\n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    SharpExtType\n                \n            \n            \n                \n                        \"jpeg\" | \"png\" | \"webp\"\n\n                \n            \n        \n    \n    src/user/reading-list.enum.ts\n    \n    \n        \n            \n                \n                    \n                    ReadingListType\n                \n            \n            \n                \n                             `${ReadingListKind}`\n\n                \n            \n        \n    \n    src/review/models/review.entity.ts\n    \n    \n        \n            \n                \n                    \n                    ReviewDocument\n                \n            \n            \n                \n                        \n\n                \n            \n        \n    \n    src/auth/role.enum.ts\n    \n    \n        \n            \n                \n                    \n                    RoleType\n                \n            \n            \n                \n                         `${Role}`\n\n                \n            \n        \n    \n    src/review/role.enum.ts\n    \n    \n        \n            \n                \n                    \n                    RoleType\n                \n            \n            \n                \n                         `${Role}`\n\n                \n            \n        \n    \n    src/user/models/user.entity.ts\n    \n    \n        \n            \n                \n                    \n                    UserDocument\n                \n            \n            \n                \n                        \n\n                \n            \n        \n    \n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"miscellaneous/variables.html":{"url":"miscellaneous/variables.html","title":"miscellaneous-variables - variables","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n  Miscellaneous\n  Variables\n\n\n\n    Index\n    \n        \n            \n                \n                    \n                        \n                            AuthorEntitySchema   (src/.../author.entity.ts)\n                        \n                        \n                            BOOK_DESCRIPTION   (src/.../create-book.dto.ts)\n                        \n                        \n                            BOOK_NAME   (src/.../create-book.dto.ts)\n                        \n                        \n                            BookEntitySchema   (src/.../book.entity.ts)\n                        \n                        \n                            CategoryEntitySchema   (src/.../category.entity.ts)\n                        \n                        \n                            CONTROLLER_NAME   (src/.../author.controller.ts)\n                        \n                        \n                            CONTROLLER_NAME   (src/.../category.controller.ts)\n                        \n                        \n                            CONTROLLER_NAME   (src/.../review.controller.ts)\n                        \n                        \n                            LOG_LABEL   (src/.../main.ts)\n                        \n                        \n                            LOG_LABEL   (src/.../process-file.ts)\n                        \n                        \n                            ReviewEntitySchema   (src/.../review.entity.ts)\n                        \n                        \n                            ROLES_KEY   (src/.../role.decorator.ts)\n                        \n                        \n                            UserEntitySchema   (src/.../user.entity.ts)\n                        \n                        \n                            UseRoles   (src/.../role.decorator.ts)\n                        \n                    \n                \n            \n        \n    \n\n\n    src/author/models/author.entity.ts\n    \n        \n        \n            \n                \n                    \n                    \n                        AuthorEntitySchema\n                        \n                    \n                \n            \n                \n                    \n                        Default value : SchemaFactory.createForClass(AuthorEntity)\n                    \n                \n\n\n        \n    \n\n    src/book/dto/create-book.dto.ts\n    \n        \n        \n            \n                \n                    \n                    \n                        BOOK_DESCRIPTION\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Default value : 'The measure of the executive, Drucker reminds us, is the ability to \"get the right things done.\" This usually involves doing what other people have overlooked as well as avoiding what is unproductive. Intelligence, imagination, and knowledge may all be wasted in an executive job without the acquired habits of mind that mold them into results.'\n                    \n                \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        BOOK_NAME\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Default value : \"The Effective Executive\"\n                    \n                \n\n\n        \n    \n\n    src/book/models/book.entity.ts\n    \n        \n        \n            \n                \n                    \n                    \n                        BookEntitySchema\n                        \n                    \n                \n            \n                \n                    \n                        Default value : SchemaFactory.createForClass(BookEntity)\n                    \n                \n\n\n        \n    \n\n    src/category/models/category.entity.ts\n    \n        \n        \n            \n                \n                    \n                    \n                        CategoryEntitySchema\n                        \n                    \n                \n            \n                \n                    \n                        Default value : SchemaFactory.createForClass(CategoryEntity)\n                    \n                \n\n\n        \n    \n\n    src/author/author.controller.ts\n    \n        \n        \n            \n                \n                    \n                    \n                        CONTROLLER_NAME\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Default value : \"authors\"\n                    \n                \n\n\n        \n    \n\n    src/category/category.controller.ts\n    \n        \n        \n            \n                \n                    \n                    \n                        CONTROLLER_NAME\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Default value : \"categories\"\n                    \n                \n\n\n        \n    \n\n    src/review/review.controller.ts\n    \n        \n        \n            \n                \n                    \n                    \n                        CONTROLLER_NAME\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Default value : \"reviews\"\n                    \n                \n\n\n        \n    \n\n    src/main.ts\n    \n        \n        \n            \n                \n                    \n                    \n                        LOG_LABEL\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Default value : \"BOOTSTRAP\"\n                    \n                \n\n\n        \n    \n\n    src/utils/process-file.ts\n    \n        \n        \n            \n                \n                    \n                    \n                        LOG_LABEL\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Default value : \"PROCESS_FILE\"\n                    \n                \n\n\n        \n    \n\n    src/review/models/review.entity.ts\n    \n        \n        \n            \n                \n                    \n                    \n                        ReviewEntitySchema\n                        \n                    \n                \n            \n                \n                    \n                        Default value : SchemaFactory.createForClass(ReviewEntity)\n                    \n                \n\n\n        \n    \n\n    src/auth/decorators/role.decorator.ts\n    \n        \n        \n            \n                \n                    \n                    \n                        ROLES_KEY\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Default value : \"claim\"\n                    \n                \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        UseRoles\n                        \n                    \n                \n            \n                \n                    \n                        Default value : (...roles: Role[]) => SetMetadata(ROLES_KEY, roles)\n                    \n                \n\n\n        \n    \n\n    src/user/models/user.entity.ts\n    \n        \n        \n            \n                \n                    \n                    \n                        UserEntitySchema\n                        \n                    \n                \n            \n                \n                    \n                        Default value : SchemaFactory.createForClass(UserEntity)\n                    \n                \n\n\n        \n    \n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"}}
}
