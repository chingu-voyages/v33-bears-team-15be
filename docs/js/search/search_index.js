var COMPODOC_SEARCH_INDEX = {
  index: {
    version: "2.3.9",
    fields: ["title", "body"],
    fieldVectors: [
      ["title/interfaces/ApiOptions.html", [0, 1.61, 1, 2.063]],
      [
        "body/interfaces/ApiOptions.html",
        [
          1, 2.227, 2, 1.261, 3, 0.484, 4, 0.255, 5, 0.204, 6, 1.167, 7, 1.007, 8, 2.088,
          9, 2.473, 10, 2.088, 11, 2.088, 12, 2.473, 13, 2.088, 14, 2.473, 15, 2.088, 16,
          2.473, 17, 1.835, 18, 0.282, 19, 1.064, 20, 1.634, 21, 4.407, 22, 3.719, 23,
          4.121, 24, 4.121, 25, 4.88, 26, 3.872, 27, 3.685, 28, 2.137, 29, 2.488, 30,
          0.025, 31, 3.111, 32, 3.685, 33, 2.227, 34, 3.685, 35, 3.685, 36, 3.685, 37,
          2.734, 38, 0.73, 39, 4.407, 40, 2.473, 41, 5.472, 42, 1.835, 43, 1.835, 44,
          2.088, 45, 3.111, 46, 3.685, 47, 2.734, 48, 2.734, 49, 1.316, 50, 2.473, 51,
          2.473, 52, 2.734, 53, 2.473, 54, 2.473, 55, 2.473, 56, 2.088, 57, 1.369, 58,
          2.473, 59, 3.685, 60, 2.473, 61, 2.734, 62, 1.494, 63, 1.835, 64, 2.088, 65,
          0.014, 66, 0.014,
        ],
      ],
      ["title/modules/AppModule.html", [67, 2.063, 68, 2.271]],
      [
        "body/modules/AppModule.html",
        [
          3, 0.368, 4, 0.41, 5, 0.328, 30, 0.024, 65, 0.02, 66, 0.02, 68, 4.473, 69,
          1.872, 70, 2.417, 71, 3.352, 72, 3.352, 73, 3.623, 74, 3.623, 75, 3.623, 76,
          3.623, 77, 2.835, 78, 2.197, 79, 2.024, 80, 3.969, 81, 3.969,
        ],
      ],
      ["title/controllers/AuthController.html", [82, 2.532, 83, 2.271]],
      [
        "body/controllers/AuthController.html",
        [
          3, 0.32, 4, 0.356, 5, 0.285, 18, 0.393, 20, 1.259, 30, 0.024, 38, 0.585, 65,
          0.018, 66, 0.018, 83, 2.294, 84, 2.083, 85, 2.911, 86, 1.901, 87, 2.483, 88,
          3.138, 89, 3.941, 90, 3.941, 91, 3.448, 92, 3.198, 93, 2.202, 94, 3.941, 95,
          3.448, 96, 3.943, 97, 3.941, 98, 3.448, 99, 3.941, 100, 3.448, 101, 3.448, 102,
          3.448, 103, 3.448, 104, 1.901, 105, 1.653, 106, 1.772, 107, 3.106, 108, 3.448,
          109, 3.198, 110, 3.448, 111, 2.911, 112, 2.911, 113, 2.911, 114, 2.911, 115,
          3.448,
        ],
      ],
      ["title/classes/AuthDto.html", [92, 2.063, 116, 1.39]],
      [
        "body/classes/AuthDto.html",
        [
          3, 0.349, 4, 0.388, 5, 0.31, 7, 2.014, 18, 0.429, 19, 1.428, 28, 2.165, 30,
          0.024, 38, 0.62, 49, 1.583, 65, 0.019, 66, 0.019, 92, 2.271, 93, 2.332, 117,
          1.646, 118, 3.174, 119, 4.058, 120, 4.058, 121, 3.669, 122, 4.666, 123, 3.174,
          124, 3.677, 125, 2.501, 126, 3.174, 127, 3.174, 128, 2.501, 129, 3.174, 130,
          3.174, 131, 3.174, 132, 2.501, 133, 3.174, 134, 3.174, 135, 2.271,
        ],
      ],
      ["title/modules/AuthModule.html", [67, 2.063, 73, 2.063]],
      [
        "body/modules/AuthModule.html",
        [
          3, 0.36, 4, 0.401, 5, 0.321, 30, 0.024, 65, 0.019, 66, 0.019, 69, 1.831, 70,
          2.382, 73, 4.019, 77, 2.795, 78, 2.148, 79, 1.979, 83, 2.583, 84, 2.346, 136,
          3.278, 137, 3.278, 138, 3.278, 139, 3.984, 140, 3.592, 141, 2.804, 142, 3.882,
          143, 2.88, 144, 2.88,
        ],
      ],
      ["title/interfaces/AuthOptions.html", [0, 1.61, 145, 2.063]],
      [
        "body/interfaces/AuthOptions.html",
        [
          2, 1.554, 3, 0.283, 4, 0.315, 5, 0.252, 6, 1.437, 7, 1.241, 8, 2.573, 15, 2.573,
          18, 0.348, 19, 1.238, 20, 1.663, 28, 1.334, 29, 1.554, 30, 0.024, 37, 2.261, 38,
          0.675, 49, 1.629, 52, 3.18, 57, 1.686, 65, 0.016, 66, 0.016, 125, 2.028, 145,
          2.59, 146, 2.573, 147, 3.047, 148, 4.958, 149, 4.958, 150, 3.773, 151, 4.958,
          152, 4.286, 153, 3.047, 154, 2.573, 155, 3.047, 156, 3.047, 157, 2.573, 158,
          2.573, 159, 4.958, 160, 3.047, 161, 3.047, 162, 3.047, 163, 3.047, 164, 3.047,
          165, 3.047, 166, 1.841, 167, 2.573, 168, 4.286, 169, 3.047, 170, 4.286, 171,
          4.286, 172, 3.047, 173, 3.047, 174, 3.047, 175, 3.047, 176, 3.047, 177, 3.047,
          178, 3.047, 179, 3.047, 180, 2.261, 181, 3.047, 182, 3.047,
        ],
      ],
      ["title/injectables/AuthService.html", [139, 2.063, 183, 1.74]],
      [
        "body/injectables/AuthService.html",
        [
          3, 0.273, 4, 0.304, 5, 0.243, 18, 0.336, 20, 1.51, 30, 0.024, 38, 0.702, 49,
          1.649, 65, 0.016, 66, 0.016, 86, 1.705, 87, 2.32, 88, 3.219, 89, 3.534, 90,
          3.534, 92, 2.529, 104, 2.28, 105, 1.983, 106, 2.012, 107, 3.239, 109, 2.529,
          119, 1.96, 139, 1.78, 141, 2.296, 184, 1.502, 185, 2.488, 186, 2.933, 187,
          4.185, 188, 4.185, 189, 1.39, 190, 2.488, 191, 5.3, 192, 2.702, 193, 2.946, 194,
          2.946, 195, 2.946, 196, 2.946, 197, 2.529, 198, 3.105, 199, 2.186, 200, 2.946,
          201, 4.185, 202, 3.105,
        ],
      ],
      ["title/classes/BaseEntitySchema.html", [116, 1.39, 203, 2.271]],
      [
        "body/classes/BaseEntitySchema.html",
        [
          3, 0.431, 4, 0.48, 5, 0.384, 18, 0.53, 19, 1.633, 30, 0.024, 38, 0.583, 65,
          0.022, 66, 0.022, 93, 2.191, 117, 2.034, 203, 3.091, 204, 3.923, 205, 3.417,
          206, 4.775, 207, 3.923, 208, 3.923,
        ],
      ],
      ["title/modules/ConfigModule.html", [67, 2.063, 74, 2.063]],
      [
        "body/modules/ConfigModule.html",
        [
          3, 0.417, 4, 0.464, 5, 0.371, 30, 0.023, 65, 0.021, 66, 0.021, 69, 2.122, 70,
          2.615, 74, 3.791, 77, 3.068, 78, 2.489, 79, 2.293, 144, 3.337, 192, 3.285, 209,
          3.798, 210, 3.798, 211, 4.498,
        ],
      ],
      ["title/classes/ConfigService.html", [116, 1.39, 192, 1.74]],
      [
        "body/classes/ConfigService.html",
        [
          1, 2.967, 3, 0.345, 4, 0.384, 5, 0.307, 18, 0.424, 19, 1.418, 30, 0.023, 38,
          0.466, 65, 0.019, 66, 0.019, 86, 2, 106, 1.864, 117, 1.628, 145, 2.967, 186,
          3.455, 189, 2.316, 192, 1.896, 205, 2.967, 212, 3.141, 213, 4.146, 214, 5.497,
          215, 4.642, 216, 4.91, 217, 4.91, 218, 4.91, 219, 4.91, 220, 4.146, 221, 3.267,
          222, 3.719, 223, 3.719, 224, 3.719, 225, 3.719, 226, 3.719, 227, 3.719,
        ],
      ],
      ["title/interfaces/ConnectionOptions.html", [0, 1.61, 228, 2.532]],
      [
        "body/interfaces/ConnectionOptions.html",
        [
          2, 2.144, 3, 0.39, 4, 0.434, 5, 0.347, 6, 1.983, 18, 0.48, 19, 1.535, 20, 1.652,
          22, 3.551, 30, 0.023, 38, 0.667, 49, 1.74, 65, 0.02, 66, 0.02, 228, 3.12, 229,
          5.829, 230, 5.829, 231, 4.488, 232, 3.537, 233, 4.205,
        ],
      ],
      ["title/classes/CreateReadingListDto.html", [116, 1.39, 234, 1.889]],
      [
        "body/classes/CreateReadingListDto.html",
        [
          3, 0.338, 4, 0.376, 5, 0.301, 7, 1.973, 18, 0.416, 19, 1.398, 20, 1.306, 30,
          0.025, 38, 0.727, 49, 1.467, 65, 0.019, 66, 0.019, 93, 2.735, 105, 2.199, 117,
          1.595, 124, 3.858, 135, 2.927, 234, 2.016, 235, 3.076, 236, 3.076, 237, 4.09,
          238, 4.09, 239, 3.643, 240, 3.643, 241, 3.643, 242, 3.076, 243, 3.643, 244,
          3.643, 245, 3.076, 246, 3.643, 247, 3.643, 248, 2.703, 249, 3.643, 250, 3.643,
        ],
      ],
      ["title/classes/CreateUserDto.html", [109, 2.063, 116, 1.39]],
      [
        "body/classes/CreateUserDto.html",
        [
          3, 0.419, 4, 0.339, 5, 0.272, 7, 2.103, 18, 0.375, 19, 1.305, 28, 2.261, 30,
          0.024, 38, 0.647, 49, 1.624, 65, 0.017, 66, 0.017, 93, 2.436, 105, 1.969, 109,
          1.987, 117, 1.439, 119, 3.878, 120, 3.878, 121, 3.831, 122, 4.36, 123, 2.776,
          124, 3.878, 125, 2.188, 126, 2.776, 127, 2.776, 128, 3.007, 129, 2.776, 130,
          2.776, 131, 2.776, 132, 2.188, 133, 2.776, 134, 2.776, 135, 2.731, 202, 3.353,
          251, 2.776, 252, 2.439, 253, 3.288, 254, 3.288, 255, 3.288, 256, 2.439, 257,
          3.288, 258, 3.288,
        ],
      ],
      ["title/modules/DatabaseModule.html", [67, 2.063, 75, 2.063]],
      [
        "body/modules/DatabaseModule.html",
        [
          3, 0.395, 4, 0.439, 5, 0.351, 30, 0.024, 65, 0.021, 66, 0.021, 69, 2.007, 70,
          2.526, 75, 3.91, 77, 2.964, 78, 2.355, 79, 2.169, 143, 3.157, 144, 3.157, 259,
          3.593, 260, 3.593, 261, 3.593, 262, 4.051, 263, 4.255,
        ],
      ],
      ["title/injectables/DatabaseService.html", [183, 1.74, 262, 2.063]],
      [
        "body/injectables/DatabaseService.html",
        [
          3, 0.415, 4, 0.461, 5, 0.369, 18, 0.51, 20, 1.206, 30, 0.024, 38, 0.561, 65,
          0.021, 66, 0.021, 86, 2.25, 104, 1.821, 105, 1.583, 106, 1.697, 184, 2.279, 189,
          2.108, 232, 4.165, 262, 2.701, 264, 3.774, 265, 5.993, 266, 4.47,
        ],
      ],
      ["title/classes/EntityRepository.html", [116, 1.39, 267, 2.271]],
      [
        "body/classes/EntityRepository.html",
        [
          3, 0.208, 4, 0.231, 5, 0.185, 18, 0.255, 19, 0.987, 20, 1.524, 28, 0.98, 29,
          1.141, 30, 0.025, 33, 1.353, 38, 0.726, 49, 1.251, 65, 0.013, 66, 0.013, 86,
          1.392, 87, 2.729, 88, 3.449, 96, 3.506, 104, 2.302, 105, 2.002, 106, 2.081, 117,
          0.98, 166, 2.065, 186, 1.892, 189, 1.056, 205, 2.065, 267, 1.49, 268, 1.89, 269,
          2.886, 270, 2.886, 271, 2.886, 272, 2.274, 273, 2.886, 274, 2.886, 275, 2.886,
          276, 2.239, 277, 2.886, 278, 2.239, 279, 1.89, 280, 1.89, 281, 1.89, 282, 2.886,
          283, 1.89, 284, 4.628, 285, 1.89, 286, 4.772, 287, 3.918, 288, 1.89, 289, 1.89,
          290, 4.449, 291, 3.918, 292, 1.89, 293, 2.886, 294, 1.89, 295, 2.886, 296,
          2.886, 297, 1.89,
        ],
      ],
      ["title/injectables/JwtAuthGuard.html", [183, 1.74, 298, 2.532]],
      [
        "body/injectables/JwtAuthGuard.html",
        [
          3, 0.471, 4, 0.524, 5, 0.419, 30, 0.023, 65, 0.023, 66, 0.023, 184, 2.589, 298,
          3.768, 299, 4.289,
        ],
      ],
      ["title/injectables/JwtStrategy.html", [140, 2.063, 183, 1.74]],
      [
        "body/injectables/JwtStrategy.html",
        [
          3, 0.39, 4, 0.434, 5, 0.347, 18, 0.48, 20, 1.434, 30, 0.024, 38, 0.667, 65,
          0.02, 66, 0.02, 86, 2.165, 87, 2.327, 88, 2.942, 104, 2.165, 105, 1.883, 106,
          1.596, 107, 2.798, 140, 2.541, 184, 2.144, 189, 1.983, 192, 2.972, 215, 4.488,
          300, 3.551, 301, 4.205, 302, 4.205, 303, 4.205,
        ],
      ],
      ["title/guards/RolesGuard.html", [304, 2.532, 305, 2.532]],
      [
        "body/guards/RolesGuard.html",
        [
          3, 0.395, 4, 0.439, 5, 0.351, 18, 0.486, 20, 1.444, 30, 0.024, 38, 0.672, 65,
          0.021, 66, 0.021, 86, 2.182, 104, 2.182, 105, 1.897, 106, 1.615, 189, 2.007,
          305, 3.157, 306, 4.255, 307, 3.593, 308, 5.356, 309, 4.255, 310, 5.861, 311,
          4.255, 312, 5.356, 313, 4.255, 314, 4.255,
        ],
      ],
      ["title/interfaces/RuntimeSetismConfig.html", [0, 1.61, 221, 2.271]],
      [
        "body/interfaces/RuntimeSetismConfig.html",
        [
          0, 1.782, 1, 3.348, 2, 1.926, 3, 0.35, 4, 0.39, 5, 0.312, 6, 1.782, 7, 1.539,
          10, 3.191, 11, 3.191, 17, 2.804, 18, 0.431, 19, 1.433, 21, 3.191, 23, 3.191, 24,
          3.191, 30, 0.023, 37, 2.804, 38, 0.695, 57, 2.091, 61, 4.653, 64, 4.19, 65,
          0.019, 66, 0.019, 145, 3.348, 220, 4.678, 221, 2.514, 231, 3.191, 232, 2.514,
          315, 3.191, 316, 5.54, 317, 3.779, 318, 3.779, 319, 3.191, 320, 3.779, 321,
          3.779, 322, 3.779,
        ],
      ],
      ["title/interfaces/SuperadminCredentials.html", [0, 1.61, 150, 2.271]],
      [
        "body/interfaces/SuperadminCredentials.html",
        [
          2, 2.279, 3, 0.415, 4, 0.461, 5, 0.369, 6, 2.108, 18, 0.51, 19, 1.595, 28,
          1.957, 29, 2.279, 30, 0.024, 38, 0.561, 49, 1.489, 57, 2.474, 65, 0.021, 66,
          0.021, 120, 4.165, 150, 2.974, 166, 2.701, 167, 4.663, 323, 4.47,
        ],
      ],
      ["title/interfaces/SwaggerOptions.html", [0, 1.61, 324, 2.532]],
      [
        "body/interfaces/SwaggerOptions.html",
        [
          2, 2.001, 3, 0.523, 4, 0.405, 5, 0.324, 6, 1.852, 7, 2.432, 18, 0.448, 19,
          1.469, 20, 1.709, 30, 0.024, 38, 0.708, 49, 1.709, 62, 3.41, 63, 3.774, 65,
          0.019, 66, 0.019, 324, 2.912, 325, 5.969, 326, 5.969, 327, 3.925,
        ],
      ],
      ["title/classes/UpdateUserDto.html", [116, 1.39, 328, 2.063]],
      [
        "body/classes/UpdateUserDto.html",
        [
          3, 0.274, 4, 0.305, 5, 0.244, 7, 2.284, 18, 0.338, 19, 1.212, 20, 1.703, 30,
          0.025, 38, 0.703, 49, 1.615, 52, 2.195, 61, 4.16, 65, 0.016, 66, 0.016, 93,
          2.645, 117, 1.295, 121, 4.16, 124, 3.246, 125, 1.968, 128, 3.246, 135, 2.537,
          242, 2.498, 252, 2.195, 256, 2.195, 328, 1.788, 329, 2.498, 330, 4.12, 331,
          4.484, 332, 4.484, 333, 4.198, 334, 4.734, 335, 4.198, 336, 2.958, 337, 4.12,
          338, 2.958, 339, 1.968, 340, 2.498, 341, 2.958, 342, 2.498, 343, 2.958, 344,
          2.958, 345, 2.498,
        ],
      ],
      ["title/controllers/UserController.html", [82, 2.532, 346, 2.271]],
      [
        "body/controllers/UserController.html",
        [
          3, 0.238, 4, 0.265, 5, 0.212, 7, 1.832, 18, 0.567, 20, 1.339, 30, 0.025, 38,
          0.719, 49, 1.672, 65, 0.014, 66, 0.014, 84, 1.548, 86, 1.541, 93, 2.498, 94,
          2.164, 96, 4.125, 97, 4.473, 99, 2.164, 104, 2.023, 105, 1.759, 106, 2.011, 111,
          2.164, 112, 2.164, 113, 2.164, 114, 2.164, 128, 2.992, 199, 4.254, 234, 2.748,
          272, 2.517, 328, 3.001, 346, 1.705, 347, 2.164, 348, 3.194, 349, 3.194, 350,
          3.194, 351, 2.164, 352, 2.562, 353, 2.562, 354, 2.562, 355, 4.965, 356, 4.965,
          357, 4.965, 358, 4.497, 359, 2.562, 360, 2.562, 361, 2.562, 362, 2.164, 363,
          2.562, 364, 2.164, 365, 2.562,
        ],
      ],
      ["title/classes/UserEntity.html", [116, 1.39, 366, 2.532]],
      [
        "body/classes/UserEntity.html",
        [
          3, 0.198, 4, 0.22, 5, 0.176, 18, 0.243, 19, 0.95, 28, 1.98, 30, 0.026, 38,
          0.774, 49, 1.6, 65, 0.013, 66, 0.013, 87, 2.896, 93, 2.911, 117, 0.933, 119,
          2.19, 120, 2.19, 197, 1.989, 198, 1.581, 202, 2.442, 203, 1.418, 205, 1.989,
          206, 2.779, 207, 1.799, 208, 1.799, 234, 1.179, 248, 1.581, 330, 2.779, 331,
          2.779, 332, 2.779, 334, 2.779, 337, 3.395, 342, 2.779, 345, 1.799, 366, 1.581,
          367, 1.418, 368, 1.799, 369, 3.291, 370, 3.291, 371, 3.291, 372, 3.291, 373,
          3.291, 374, 5.166, 375, 6.17, 376, 4.021, 377, 4.522, 378, 5.166, 379, 4.887,
          380, 2.131, 381, 2.131, 382, 2.131, 383, 2.131, 384, 2.131, 385, 2.131, 386,
          2.131,
        ],
      ],
      ["title/modules/UserModule.html", [67, 2.063, 76, 2.063]],
      [
        "body/modules/UserModule.html",
        [
          3, 0.395, 4, 0.439, 5, 0.351, 30, 0.024, 65, 0.021, 66, 0.021, 69, 2.007, 70,
          2.526, 76, 3.97, 77, 2.964, 78, 2.355, 79, 2.169, 84, 2.571, 141, 2.901, 143,
          3.157, 346, 2.831, 387, 3.593, 388, 3.593, 389, 3.717, 390, 4.255,
        ],
      ],
      ["title/injectables/UserRepository.html", [141, 1.61, 183, 1.74]],
      [
        "body/injectables/UserRepository.html",
        [
          3, 0.206, 4, 0.23, 5, 0.184, 18, 0.254, 19, 0.982, 20, 1.521, 28, 0.974, 29,
          1.134, 30, 0.025, 33, 1.344, 38, 0.725, 49, 1.247, 65, 0.013, 66, 0.013, 86,
          1.386, 87, 2.725, 88, 3.445, 96, 3.497, 104, 2.297, 105, 1.998, 106, 2.076, 141,
          1.049, 166, 2.056, 184, 1.134, 186, 1.882, 189, 1.049, 205, 2.056, 267, 1.48,
          269, 2.872, 270, 2.872, 271, 2.872, 272, 2.263, 273, 2.872, 274, 2.872, 275,
          2.872, 277, 2.872, 279, 1.878, 280, 1.878, 281, 1.878, 282, 2.872, 283, 1.878,
          284, 4.617, 285, 1.878, 286, 4.762, 287, 3.906, 288, 1.878, 289, 1.878, 290,
          4.438, 291, 3.906, 292, 1.878, 293, 2.872, 294, 1.878, 295, 2.872, 296, 2.872,
          297, 1.878, 368, 1.878, 391, 1.878, 392, 2.225, 393, 2.225,
        ],
      ],
      ["title/injectables/UserService.html", [183, 1.74, 389, 2.063]],
      [
        "body/injectables/UserService.html",
        [
          3, 0.271, 4, 0.302, 5, 0.241, 18, 0.603, 20, 1.505, 30, 0.025, 38, 0.7, 49,
          1.645, 65, 0.016, 66, 0.016, 86, 1.695, 87, 2.757, 88, 3.485, 104, 2.273, 105,
          1.977, 106, 2.119, 107, 3.713, 141, 2.286, 184, 1.49, 189, 1.378, 190, 2.467,
          199, 3.917, 234, 2.922, 328, 3.191, 348, 3.513, 349, 3.513, 350, 3.513, 351,
          2.467, 362, 2.467, 364, 2.467, 389, 1.766, 394, 2.467, 395, 4.161, 396, 2.922,
        ],
      ],
      ["title/contributing.html", [397, 1.904, 398, 1.904, 399, 2.123]],
      [
        "body/contributing.html",
        [
          7, 1.322, 30, 0.017, 31, 1.767, 42, 1.553, 45, 1.767, 47, 1.553, 48, 1.553, 57,
          1.158, 65, 0.012, 66, 0.012, 135, 1.265, 166, 1.961, 272, 1.393, 315, 1.767,
          339, 3.225, 397, 2.16, 398, 2.16, 399, 1.553, 400, 3.357, 401, 2.741, 402,
          4.518, 403, 2.741, 404, 3.246, 405, 2.093, 406, 3.246, 407, 2.093, 408, 2.093,
          409, 2.093, 410, 2.093, 411, 2.093, 412, 2.093, 413, 2.741, 414, 2.741, 415,
          3.246, 416, 1.767, 417, 1.767, 418, 2.093, 419, 2.093, 420, 2.741, 421, 2.741,
          422, 2.093, 423, 1.767, 424, 1.767, 425, 2.093, 426, 1.767, 427, 2.093, 428,
          2.093, 429, 1.767, 430, 2.093, 431, 3.975, 432, 3.246, 433, 2.093, 434, 2.093,
          435, 2.093, 436, 2.95, 437, 2.093, 438, 2.093, 439, 1.767, 440, 3.975, 441,
          2.741, 442, 2.093, 443, 1.767, 444, 2.093, 445, 2.093, 446, 2.093, 447, 4.479,
          448, 2.093, 449, 4.518, 450, 2.093, 451, 2.093, 452, 2.093, 453, 2.093, 454,
          1.767, 455, 3.246, 456, 4.093, 457, 2.093, 458, 2.741, 459, 2.093, 460, 2.093,
          461, 1.767, 462, 1.767, 463, 2.093, 464, 4.479, 465, 3.246, 466, 2.093, 467,
          1.767, 468, 2.093, 469, 3.246, 470, 2.093, 471, 1.767, 472, 2.093, 473, 2.093,
          474, 2.093, 475, 2.093, 476, 2.093, 477, 2.741, 478, 2.093, 479, 1.767, 480,
          2.093, 481, 2.093, 482, 2.093, 483, 2.093, 484, 2.093, 485, 3.246, 486, 3.246,
          487, 2.093, 488, 3.246, 489, 2.093, 490, 2.093, 491, 2.093, 492, 2.093, 493,
          2.093, 494, 2.093, 495, 3.246, 496, 2.093, 497, 2.741, 498, 2.093, 499, 2.093,
          500, 2.093, 501, 3.246, 502, 3.782, 503, 2.093, 504, 2.093, 505, 3.246, 506,
          2.741, 507, 1.767, 508, 2.093, 509, 2.093, 510, 2.093, 511, 3.246, 512, 2.093,
          513, 1.767, 514, 2.093, 515, 2.093, 516, 2.093, 517, 2.093, 518, 1.767, 519,
          1.767, 520, 2.093, 521, 2.093,
        ],
      ],
      ["title/coverage.html", [522, 3.915]],
      [
        "body/coverage.html",
        [
          0, 2.494, 1, 1.366, 5, 0.187, 6, 2.494, 30, 0.026, 33, 3.969, 38, 0.283, 62,
          1.366, 65, 0.013, 66, 0.013, 82, 2.554, 83, 1.504, 85, 1.908, 92, 1.366, 109,
          1.366, 116, 2.309, 118, 1.908, 139, 1.366, 140, 1.366, 141, 1.066, 145, 1.366,
          150, 1.504, 183, 2.696, 185, 1.908, 192, 1.152, 203, 1.504, 204, 1.908, 212,
          1.908, 221, 1.504, 228, 1.677, 234, 1.251, 235, 1.908, 236, 1.908, 251, 1.908,
          252, 2.554, 262, 1.366, 264, 1.908, 267, 1.504, 268, 1.908, 298, 1.677, 299,
          1.908, 300, 1.908, 304, 1.677, 305, 1.677, 307, 1.908, 324, 1.677, 328, 1.366,
          329, 1.908, 339, 1.504, 346, 1.504, 347, 1.908, 366, 1.677, 367, 2.291, 389,
          1.366, 391, 1.908, 394, 1.908, 519, 1.908, 522, 1.908, 523, 2.26, 524, 2.26,
          525, 5.019, 526, 4.17, 527, 2.907, 528, 4.17, 529, 1.908, 530, 5.288, 531,
          1.908, 532, 2.26, 533, 4.17, 534, 2.26, 535, 2.26, 536, 2.26, 537, 2.26, 538,
          2.26, 539, 2.26, 540, 2.26, 541, 2.26, 542, 3.443, 543, 2.26, 544, 3.443, 545,
          1.908, 546, 3.443, 547, 1.908, 548, 1.908, 549, 1.908, 550, 2.26, 551, 1.908,
          552, 2.26, 553, 2.26, 554, 2.26,
        ],
      ],
      ["title/dependencies.html", [70, 1.934, 423, 2.416]],
      [
        "body/dependencies.html",
        [
          26, 2.571, 30, 0.026, 43, 3.475, 65, 0.018, 66, 0.018, 70, 1.634, 116, 1.908,
          157, 2.926, 555, 3.465, 556, 5.682, 557, 3.465, 558, 3.465, 559, 3.465, 560,
          3.465, 561, 3.465, 562, 4.683, 563, 3.465, 564, 3.465, 565, 3.465, 566, 3.465,
          567, 3.465, 568, 3.465, 569, 3.465, 570, 3.465, 571, 3.465, 572, 3.465, 573,
          3.465, 574, 3.465, 575, 3.465, 576, 3.465, 577, 3.465, 578, 3.465, 579, 2.926,
          580, 3.465, 581, 4.683, 582, 3.465, 583, 3.465, 584, 3.465, 585, 3.465, 586,
          3.465, 587, 3.465, 588, 3.465, 589, 3.465, 590, 3.465, 591, 3.465, 592, 3.465,
        ],
      ],
      ["title/miscellaneous/enumerations.html", [593, 1.35, 594, 3.461]],
      [
        "body/miscellaneous/enumerations.html",
        [
          6, 1.718, 18, 0.416, 29, 3.381, 30, 0.026, 33, 2.201, 47, 3.593, 48, 3.593, 65,
          0.019, 66, 0.019, 87, 1.595, 132, 2.424, 180, 2.703, 186, 2.016, 197, 2.927,
          248, 2.703, 256, 2.703, 593, 1.718, 594, 3.076, 595, 3.643, 596, 4.09, 597,
          3.076, 598, 4.09, 599, 3.076, 600, 4.843, 601, 4.843, 602, 3.076, 603, 4.09,
          604, 3.076, 605, 3.643, 606, 3.643, 607, 3.643, 608, 3.643, 609, 3.643, 610,
          3.076, 611, 3.643,
        ],
      ],
      ["title/miscellaneous/functions.html", [593, 1.35, 612, 3.461]],
      [
        "body/miscellaneous/functions.html",
        [
          18, 0.513, 20, 1.213, 30, 0.024, 38, 0.564, 65, 0.021, 66, 0.021, 104, 1.832,
          105, 1.594, 106, 1.708, 479, 3.798, 545, 3.798, 547, 5.075, 548, 3.798, 549,
          4.682, 593, 2.122, 612, 3.798, 613, 4.498, 614, 4.498, 615, 4.498, 616, 5.544,
          617, 4.498,
        ],
      ],
      ["title/index.html", [18, 0.327, 397, 1.904, 398, 1.904]],
      [
        "body/index.html",
        [
          3, 0.241, 5, 0.131, 13, 1.337, 17, 1.175, 26, 1.175, 30, 0.023, 39, 1.337, 42,
          2.835, 44, 3.226, 56, 1.337, 57, 0.876, 62, 0.957, 63, 1.175, 65, 0.01, 66,
          0.01, 87, 0.693, 146, 1.337, 154, 1.337, 158, 2.193, 186, 0.876, 213, 1.337,
          237, 3.562, 339, 1.054, 340, 3.562, 399, 2.45, 400, 1.337, 401, 1.337, 402,
          1.337, 403, 2.193, 413, 3.226, 414, 2.789, 416, 1.337, 417, 1.337, 420, 2.789,
          421, 1.337, 426, 1.337, 429, 1.337, 436, 1.175, 439, 2.789, 441, 2.193, 443,
          1.337, 449, 2.789, 454, 2.193, 456, 1.337, 458, 1.337, 461, 1.337, 462, 1.337,
          467, 2.193, 471, 1.337, 477, 2.193, 497, 2.193, 502, 1.337, 506, 2.789, 507,
          1.337, 513, 1.337, 518, 1.337, 579, 1.337, 618, 3.302, 619, 1.583, 620, 1.583,
          621, 2.597, 622, 3.821, 623, 2.45, 624, 2.597, 625, 1.583, 626, 1.583, 627,
          1.583, 628, 1.583, 629, 1.583, 630, 1.583, 631, 1.583, 632, 1.583, 633, 1.583,
          634, 1.583, 635, 1.583, 636, 1.583, 637, 1.583, 638, 2.597, 639, 2.193, 640,
          2.597, 641, 1.583, 642, 1.583, 643, 1.583, 644, 4.218, 645, 1.583, 646, 1.583,
          647, 1.583, 648, 1.583, 649, 1.583, 650, 1.337, 651, 4.787, 652, 1.583, 653,
          2.597, 654, 1.583, 655, 1.583, 656, 1.583, 657, 1.583, 658, 1.583, 659, 3.302,
          660, 2.597, 661, 1.583, 662, 1.583, 663, 3.302, 664, 1.583, 665, 1.583, 666,
          1.583, 667, 1.583, 668, 1.583, 669, 1.583, 670, 1.583, 671, 1.583, 672, 1.583,
          673, 1.583, 674, 2.597, 675, 3.821, 676, 1.583, 677, 1.583, 678, 1.583, 679,
          1.583, 680, 1.583, 681, 1.583, 682, 1.583, 683, 1.583, 684, 1.583, 685, 2.597,
          686, 1.337, 687, 1.583, 688, 1.583, 689, 1.583, 690, 1.583, 691, 1.583, 692,
          1.583, 693, 1.583, 694, 2.597, 695, 1.583, 696, 2.597, 697, 1.583, 698, 1.583,
          699, 1.583, 700, 1.583, 701, 1.583, 702, 1.583, 703, 1.583, 704, 1.583, 705,
          1.583, 706, 1.583, 707, 1.583, 708, 1.583, 709, 1.583, 710, 1.583, 711, 1.583,
          712, 1.583, 713, 1.583, 714, 1.583, 715, 1.583, 716, 1.583, 717, 2.597, 718,
          1.583, 719, 1.583, 720, 1.583, 721, 1.583, 722, 1.583, 723, 1.583, 724, 1.583,
          725, 1.583, 726, 1.583, 727, 1.583, 728, 1.583, 729, 1.583, 730, 1.583, 731,
          2.193, 732, 2.597, 733, 1.583, 734, 2.597, 735, 1.583, 736, 1.583, 737, 1.583,
          738, 2.597, 739, 1.583, 740, 1.583, 741, 1.583, 742, 1.583, 743, 1.583, 744,
          1.583, 745, 1.583, 746, 1.583, 747, 1.583, 748, 1.583, 749, 2.597, 750, 1.583,
          751, 1.583, 752, 1.583, 753, 1.583, 754, 1.583, 755, 1.583, 756, 1.583, 757,
          1.583, 758, 1.583, 759, 1.583, 760, 1.583, 761, 1.583, 762, 1.583, 763, 1.583,
          764, 1.583, 765, 1.583, 766, 1.583, 767, 1.583, 768, 1.583, 769, 1.337, 770,
          1.583, 771, 1.583, 772, 1.583, 773, 1.583, 774, 1.583, 775, 1.583, 776, 1.583,
          777, 2.193, 778, 1.583, 779, 1.583, 780, 1.583, 781, 1.583, 782, 1.583, 783,
          1.583, 784, 1.583,
        ],
      ],
      ["title/license.html", [397, 1.904, 398, 1.904, 623, 2.123]],
      [
        "body/license.html",
        [
          30, 0.017, 43, 2.331, 62, 1.899, 65, 0.017, 66, 0.017, 79, 1.602, 232, 2.091,
          238, 2.653, 319, 3.698, 424, 2.653, 436, 3.249, 623, 2.331, 639, 2.653, 650,
          2.653, 731, 2.653, 769, 2.653, 777, 2.653, 785, 5.041, 786, 3.142, 787, 3.142,
          788, 4.379, 789, 3.142, 790, 3.142, 791, 3.142, 792, 3.142, 793, 3.142, 794,
          4.379, 795, 6.312, 796, 3.142, 797, 3.142, 798, 5.041, 799, 3.142, 800, 3.142,
          801, 3.142, 802, 3.142, 803, 3.142, 804, 3.142, 805, 3.142, 806, 3.142, 807,
          3.142, 808, 3.142, 809, 4.379, 810, 3.142, 811, 3.142, 812, 3.142, 813, 3.142,
          814, 3.142, 815, 3.142, 816, 4.379, 817, 4.379, 818, 3.142, 819, 3.142, 820,
          3.142, 821, 3.142, 822, 3.142, 823, 3.142, 824, 3.142, 825, 3.142, 826, 3.142,
          827, 3.142, 828, 3.142, 829, 3.142, 830, 3.142, 831, 3.142, 832, 3.142, 833,
          3.142, 834, 2.653, 835, 3.142, 836, 3.142, 837, 3.142, 838, 3.142, 839, 3.142,
          840, 3.142, 841, 3.142, 842, 3.142, 843, 3.142,
        ],
      ],
      ["title/modules.html", [69, 2.187]],
      [
        "body/modules.html",
        [
          30, 0.021, 65, 0.021, 66, 0.021, 68, 2.956, 69, 2.095, 73, 2.684, 74, 2.684, 75,
          2.684, 76, 2.684, 686, 5.421, 844, 6.419, 845, 6.419, 846, 6.419,
        ],
      ],
      ["title/overview.html", [847, 3.915]],
      [
        "body/overview.html",
        [
          2, 1.49, 30, 0.025, 65, 0.016, 66, 0.016, 68, 4.19, 69, 1.378, 70, 1.963, 71,
          2.467, 72, 2.467, 73, 3.805, 74, 3.191, 75, 3.505, 76, 3.606, 77, 2.302, 78,
          1.617, 79, 1.49, 84, 1.766, 117, 1.279, 132, 2.768, 136, 2.467, 137, 2.467, 138,
          2.467, 139, 3.606, 140, 2.928, 141, 2.491, 180, 2.168, 184, 1.49, 192, 2.692,
          209, 2.467, 210, 2.467, 259, 2.467, 260, 2.467, 261, 2.467, 262, 3.606, 304,
          2.168, 387, 2.467, 388, 2.467, 389, 2.928, 603, 2.467, 610, 2.467, 847, 2.467,
          848, 2.922,
        ],
      ],
      ["title/miscellaneous/typealiases.html", [593, 1.35, 849, 4.099]],
      [
        "body/miscellaneous/typealiases.html",
        [
          18, 0.527, 30, 0.022, 38, 0.579, 65, 0.022, 66, 0.022, 197, 2.789, 198, 4.179,
          245, 4.756, 367, 3.071, 593, 2.177, 596, 3.897, 597, 3.897, 598, 4.756, 599,
          3.897, 602, 3.897, 604, 3.897, 850, 4.615, 851, 5.632, 852, 3.897,
        ],
      ],
      ["title/miscellaneous/variables.html", [593, 1.35, 853, 3.461]],
      [
        "body/miscellaneous/variables.html",
        [
          18, 0.486, 28, 2.566, 29, 2.988, 30, 0.025, 38, 0.534, 49, 1.148, 65, 0.021, 66,
          0.021, 197, 2.571, 367, 2.831, 527, 3.593, 529, 4.522, 531, 4.522, 551, 4.522,
          593, 2.007, 834, 3.593, 852, 3.593, 853, 3.593, 854, 5.356, 855, 5.356, 856,
          4.255, 857, 4.255,
        ],
      ],
    ],
    invertedIndex: [
      [
        "",
        {
          _index: 30,
          title: {},
          body: {
            "interfaces/ApiOptions.html": {},
            "modules/AppModule.html": {},
            "controllers/AuthController.html": {},
            "classes/AuthDto.html": {},
            "modules/AuthModule.html": {},
            "interfaces/AuthOptions.html": {},
            "injectables/AuthService.html": {},
            "classes/BaseEntitySchema.html": {},
            "modules/ConfigModule.html": {},
            "classes/ConfigService.html": {},
            "interfaces/ConnectionOptions.html": {},
            "classes/CreateReadingListDto.html": {},
            "classes/CreateUserDto.html": {},
            "modules/DatabaseModule.html": {},
            "injectables/DatabaseService.html": {},
            "classes/EntityRepository.html": {},
            "injectables/JwtAuthGuard.html": {},
            "injectables/JwtStrategy.html": {},
            "guards/RolesGuard.html": {},
            "interfaces/RuntimeSetismConfig.html": {},
            "interfaces/SuperadminCredentials.html": {},
            "interfaces/SwaggerOptions.html": {},
            "classes/UpdateUserDto.html": {},
            "controllers/UserController.html": {},
            "classes/UserEntity.html": {},
            "modules/UserModule.html": {},
            "injectables/UserRepository.html": {},
            "injectables/UserService.html": {},
            "contributing.html": {},
            "coverage.html": {},
            "dependencies.html": {},
            "miscellaneous/enumerations.html": {},
            "miscellaneous/functions.html": {},
            "index.html": {},
            "license.html": {},
            "modules.html": {},
            "overview.html": {},
            "miscellaneous/typealiases.html": {},
            "miscellaneous/variables.html": {},
          },
        },
      ],
      [
        "0",
        {
          _index: 33,
          title: {},
          body: {
            "interfaces/ApiOptions.html": {},
            "classes/EntityRepository.html": {},
            "injectables/UserRepository.html": {},
            "coverage.html": {},
            "miscellaneous/enumerations.html": {},
          },
        },
      ],
      ["0.1.13", { _index: 586, title: {}, body: { "dependencies.html": {} } }],
      ["0.13.1", { _index: 572, title: {}, body: { "dependencies.html": {} } }],
      ["0.28.2", { _index: 568, title: {}, body: { "dependencies.html": {} } }],
      ["0.4.0", { _index: 570, title: {}, body: { "dependencies.html": {} } }],
      ["0.4.1", { _index: 582, title: {}, body: { "dependencies.html": {} } }],
      ["0/1", { _index: 530, title: {}, body: { "coverage.html": {} } }],
      ["0/10", { _index: 544, title: {}, body: { "coverage.html": {} } }],
      ["0/15", { _index: 550, title: {}, body: { "coverage.html": {} } }],
      ["0/2", { _index: 543, title: {}, body: { "coverage.html": {} } }],
      ["0/3", { _index: 525, title: {}, body: { "coverage.html": {} } }],
      ["0/4", { _index: 532, title: {}, body: { "coverage.html": {} } }],
      ["0/5", { _index: 542, title: {}, body: { "coverage.html": {} } }],
      ["0/6", { _index: 526, title: {}, body: { "coverage.html": {} } }],
      ["0/7", { _index: 552, title: {}, body: { "coverage.html": {} } }],
      [
        "1",
        {
          _index: 603,
          title: {},
          body: { "miscellaneous/enumerations.html": {}, "overview.html": {} },
        },
      ],
      ["1.0.1", { _index: 558, title: {}, body: { "dependencies.html": {} } }],
      ["1.11.0", { _index: 574, title: {}, body: { "dependencies.html": {} } }],
      ["1/2", { _index: 539, title: {}, body: { "coverage.html": {} } }],
      ["100", { _index: 533, title: {}, body: { "coverage.html": {} } }],
      [
        "1024",
        { _index: 244, title: {}, body: { "classes/CreateReadingListDto.html": {} } },
      ],
      ["10h", { _index: 182, title: {}, body: { "interfaces/AuthOptions.html": {} } }],
      [
        "12",
        {
          _index: 345,
          title: {},
          body: { "classes/UpdateUserDto.html": {}, "classes/UserEntity.html": {} },
        },
      ],
      [
        "2",
        {
          _index: 180,
          title: {},
          body: {
            "interfaces/AuthOptions.html": {},
            "miscellaneous/enumerations.html": {},
            "overview.html": {},
          },
        },
      ],
      ["2/3", { _index: 537, title: {}, body: { "coverage.html": {} } }],
      [
        "20",
        {
          _index: 242,
          title: {},
          body: {
            "classes/CreateReadingListDto.html": {},
            "classes/UpdateUserDto.html": {},
          },
        },
      ],
      ["200", { _index: 35, title: {}, body: { "interfaces/ApiOptions.html": {} } }],
      ["2021", { _index: 787, title: {}, body: { "license.html": {} } }],
      ["26", { _index: 258, title: {}, body: { "classes/CreateUserDto.html": {} } }],
      [
        "3",
        {
          _index: 248,
          title: {},
          body: {
            "classes/CreateReadingListDto.html": {},
            "classes/UserEntity.html": {},
            "miscellaneous/enumerations.html": {},
          },
        },
      ],
      ["3.0.2", { _index: 588, title: {}, body: { "dependencies.html": {} } }],
      ["3/4", { _index: 541, title: {}, body: { "coverage.html": {} } }],
      ["3000", { _index: 53, title: {}, body: { "interfaces/ApiOptions.html": {} } }],
      [
        "32",
        {
          _index: 134,
          title: {},
          body: { "classes/AuthDto.html": {}, "classes/CreateUserDto.html": {} },
        },
      ],
      ["33", { _index: 658, title: {}, body: { "index.html": {} } }],
      [
        "4",
        {
          _index: 256,
          title: {},
          body: {
            "classes/CreateUserDto.html": {},
            "classes/UpdateUserDto.html": {},
            "miscellaneous/enumerations.html": {},
          },
        },
      ],
      ["4.0.0", { _index: 583, title: {}, body: { "dependencies.html": {} } }],
      ["4.1.6", { _index: 592, title: {}, body: { "dependencies.html": {} } }],
      ["4.6.0", { _index: 578, title: {}, body: { "dependencies.html": {} } }],
      ["4/4", { _index: 538, title: {}, body: { "coverage.html": {} } }],
      [
        "5",
        {
          _index: 610,
          title: {},
          body: { "miscellaneous/enumerations.html": {}, "overview.html": {} },
        },
      ],
      ["5.0.9", { _index: 566, title: {}, body: { "dependencies.html": {} } }],
      ["5.13.8", { _index: 580, title: {}, body: { "dependencies.html": {} } }],
      ["5/5", { _index: 535, title: {}, body: { "coverage.html": {} } }],
      [
        "50",
        {
          _index: 519,
          title: {},
          body: { "contributing.html": {}, "coverage.html": {} },
        },
      ],
      [
        "54",
        { _index: 250, title: {}, body: { "classes/CreateReadingListDto.html": {} } },
      ],
      ["55", { _index: 662, title: {}, body: { "index.html": {} } }],
      [
        "6",
        {
          _index: 132,
          title: {},
          body: {
            "classes/AuthDto.html": {},
            "classes/CreateUserDto.html": {},
            "miscellaneous/enumerations.html": {},
            "overview.html": {},
          },
        },
      ],
      ["6.0.2", { _index: 576, title: {}, body: { "dependencies.html": {} } }],
      ["60", { _index: 179, title: {}, body: { "interfaces/AuthOptions.html": {} } }],
      ["66", { _index: 536, title: {}, body: { "coverage.html": {} } }],
      ["7.2.0", { _index: 590, title: {}, body: { "dependencies.html": {} } }],
      ["7/7", { _index: 534, title: {}, body: { "coverage.html": {} } }],
      ["70", { _index: 665, title: {}, body: { "index.html": {} } }],
      ["75", { _index: 540, title: {}, body: { "coverage.html": {} } }],
      ["7d", { _index: 168, title: {}, body: { "interfaces/AuthOptions.html": {} } }],
      ["8", { _index: 848, title: {}, body: { "overview.html": {} } }],
      ["8.0.0", { _index: 556, title: {}, body: { "dependencies.html": {} } }],
      ["8.0.1", { _index: 562, title: {}, body: { "dependencies.html": {} } }],
      [
        "__v",
        {
          _index: 280,
          title: {},
          body: {
            "classes/EntityRepository.html": {},
            "injectables/UserRepository.html": {},
          },
        },
      ],
      [
        "_id",
        {
          _index: 206,
          title: {},
          body: { "classes/BaseEntitySchema.html": {}, "classes/UserEntity.html": {} },
        },
      ],
      ["above", { _index: 815, title: {}, body: { "license.html": {} } }],
      ["acceptable", { _index: 435, title: {}, body: { "contributing.html": {} } }],
      [
        "access",
        {
          _index: 158,
          title: {},
          body: { "interfaces/AuthOptions.html": {}, "index.html": {} },
        },
      ],
      ["accessible", { _index: 654, title: {}, body: { "index.html": {} } }],
      [
        "accessors",
        { _index: 216, title: {}, body: { "classes/ConfigService.html": {} } },
      ],
      ["according", { _index: 743, title: {}, body: { "index.html": {} } }],
      [
        "account",
        { _index: 323, title: {}, body: { "interfaces/SuperadminCredentials.html": {} } },
      ],
      ["acknowledgements", { _index: 624, title: {}, body: { "index.html": {} } }],
      ["action", { _index: 838, title: {}, body: { "license.html": {} } }],
      [
        "action.'})@apiforbiddenresponse({description",
        { _index: 102, title: {}, body: { "controllers/AuthController.html": {} } },
      ],
      ["add", { _index: 510, title: {}, body: { "contributing.html": {} } }],
      ["added", { _index: 341, title: {}, body: { "classes/UpdateUserDto.html": {} } }],
      [
        "address",
        {
          _index: 122,
          title: {},
          body: { "classes/AuthDto.html": {}, "classes/CreateUserDto.html": {} },
        },
      ],
      [
        "admin",
        { _index: 606, title: {}, body: { "miscellaneous/enumerations.html": {} } },
      ],
      ["agree", { _index: 433, title: {}, body: { "contributing.html": {} } }],
      [
        "aliases",
        { _index: 850, title: {}, body: { "miscellaneous/typealiases.html": {} } },
      ],
      ["allowing", { _index: 14, title: {}, body: { "interfaces/ApiOptions.html": {} } }],
      ["allows", { _index: 704, title: {}, body: { "index.html": {} } }],
      ["along", { _index: 653, title: {}, body: { "index.html": {} } }],
      ["amazing", { _index: 406, title: {}, body: { "contributing.html": {} } }],
      ["and/or", { _index: 807, title: {}, body: { "license.html": {} } }],
      ["andrei", { _index: 774, title: {}, body: { "index.html": {} } }],
      ["anyone", { _index: 655, title: {}, body: { "index.html": {} } }],
      ["anytime", { _index: 619, title: {}, body: { "index.html": {} } }],
      ["anywhere", { _index: 620, title: {}, body: { "index.html": {} } }],
      [
        "api",
        {
          _index: 3,
          title: {},
          body: {
            "interfaces/ApiOptions.html": {},
            "modules/AppModule.html": {},
            "controllers/AuthController.html": {},
            "classes/AuthDto.html": {},
            "modules/AuthModule.html": {},
            "interfaces/AuthOptions.html": {},
            "injectables/AuthService.html": {},
            "classes/BaseEntitySchema.html": {},
            "modules/ConfigModule.html": {},
            "classes/ConfigService.html": {},
            "interfaces/ConnectionOptions.html": {},
            "classes/CreateReadingListDto.html": {},
            "classes/CreateUserDto.html": {},
            "modules/DatabaseModule.html": {},
            "injectables/DatabaseService.html": {},
            "classes/EntityRepository.html": {},
            "injectables/JwtAuthGuard.html": {},
            "injectables/JwtStrategy.html": {},
            "guards/RolesGuard.html": {},
            "interfaces/RuntimeSetismConfig.html": {},
            "interfaces/SuperadminCredentials.html": {},
            "interfaces/SwaggerOptions.html": {},
            "classes/UpdateUserDto.html": {},
            "controllers/UserController.html": {},
            "classes/UserEntity.html": {},
            "modules/UserModule.html": {},
            "injectables/UserRepository.html": {},
            "injectables/UserService.html": {},
            "index.html": {},
          },
        },
      ],
      [
        "apibody({type",
        {
          _index: 94,
          title: {},
          body: {
            "controllers/AuthController.html": {},
            "controllers/UserController.html": {},
          },
        },
      ],
      [
        "apiokresponse({description",
        { _index: 355, title: {}, body: { "controllers/UserController.html": {} } },
      ],
      [
        "apioptions",
        {
          _index: 1,
          title: { "interfaces/ApiOptions.html": {} },
          body: {
            "interfaces/ApiOptions.html": {},
            "classes/ConfigService.html": {},
            "interfaces/RuntimeSetismConfig.html": {},
            "coverage.html": {},
          },
        },
      ],
      [
        "apiproperty({type",
        {
          _index: 121,
          title: {},
          body: {
            "classes/AuthDto.html": {},
            "classes/CreateUserDto.html": {},
            "classes/UpdateUserDto.html": {},
          },
        },
      ],
      [
        "apis",
        {
          _index: 11,
          title: {},
          body: {
            "interfaces/ApiOptions.html": {},
            "interfaces/RuntimeSetismConfig.html": {},
          },
        },
      ],
      [
        "app",
        {
          _index: 479,
          title: {},
          body: { "contributing.html": {}, "miscellaneous/functions.html": {} },
        },
      ],
      [
        "appmodule",
        {
          _index: 68,
          title: { "modules/AppModule.html": {} },
          body: { "modules/AppModule.html": {}, "modules.html": {}, "overview.html": {} },
        },
      ],
      ["appreciated", { _index: 754, title: {}, body: { "index.html": {} } }],
      ["argon2", { _index: 567, title: {}, body: { "dependencies.html": {} } }],
      ["arising", { _index: 842, title: {}, body: { "license.html": {} } }],
      ["articulate", { _index: 680, title: {}, body: { "index.html": {} } }],
      ["assets", { _index: 729, title: {}, body: { "index.html": {} } }],
      ["associated", { _index: 796, title: {}, body: { "license.html": {} } }],
      [
        "async",
        {
          _index: 88,
          title: {},
          body: {
            "controllers/AuthController.html": {},
            "injectables/AuthService.html": {},
            "classes/EntityRepository.html": {},
            "injectables/JwtStrategy.html": {},
            "injectables/UserRepository.html": {},
            "injectables/UserService.html": {},
          },
        },
      ],
      [
        "authcontroller",
        {
          _index: 83,
          title: { "controllers/AuthController.html": {} },
          body: {
            "controllers/AuthController.html": {},
            "modules/AuthModule.html": {},
            "coverage.html": {},
          },
        },
      ],
      [
        "authdto",
        {
          _index: 92,
          title: { "classes/AuthDto.html": {} },
          body: {
            "controllers/AuthController.html": {},
            "classes/AuthDto.html": {},
            "injectables/AuthService.html": {},
            "coverage.html": {},
          },
        },
      ],
      [
        "authdto})@apiokresponse({description",
        { _index: 95, title: {}, body: { "controllers/AuthController.html": {} } },
      ],
      [
        "authentication",
        {
          _index: 146,
          title: {},
          body: { "interfaces/AuthOptions.html": {}, "index.html": {} },
        },
      ],
      [
        "authmodule",
        {
          _index: 73,
          title: { "modules/AuthModule.html": {} },
          body: {
            "modules/AppModule.html": {},
            "modules/AuthModule.html": {},
            "modules.html": {},
            "overview.html": {},
          },
        },
      ],
      [
        "authoptions",
        {
          _index: 145,
          title: { "interfaces/AuthOptions.html": {} },
          body: {
            "interfaces/AuthOptions.html": {},
            "classes/ConfigService.html": {},
            "interfaces/RuntimeSetismConfig.html": {},
            "coverage.html": {},
          },
        },
      ],
      [
        "author",
        { _index: 611, title: {}, body: { "miscellaneous/enumerations.html": {} } },
      ],
      [
        "authorization",
        {
          _index: 37,
          title: {},
          body: {
            "interfaces/ApiOptions.html": {},
            "interfaces/AuthOptions.html": {},
            "interfaces/RuntimeSetismConfig.html": {},
          },
        },
      ],
      ["authors", { _index: 831, title: {}, body: { "license.html": {} } }],
      [
        "authservice",
        {
          _index: 139,
          title: { "injectables/AuthService.html": {} },
          body: {
            "modules/AuthModule.html": {},
            "injectables/AuthService.html": {},
            "coverage.html": {},
            "overview.html": {},
          },
        },
      ],
      ["automatically", { _index: 741, title: {}, body: { "index.html": {} } }],
      [
        "available",
        { _index: 50, title: {}, body: { "interfaces/ApiOptions.html": {} } },
      ],
      [
        "avatar",
        {
          _index: 330,
          title: {},
          body: { "classes/UpdateUserDto.html": {}, "classes/UserEntity.html": {} },
        },
      ],
      ["b", { _index: 504, title: {}, body: { "contributing.html": {} } }],
      ["back", { _index: 720, title: {}, body: { "index.html": {} } }],
      ["backend", { _index: 629, title: {}, body: { "index.html": {} } }],
      [
        "base",
        {
          _index: 56,
          title: {},
          body: { "interfaces/ApiOptions.html": {}, "index.html": {} },
        },
      ],
      [
        "baseentityschema",
        {
          _index: 203,
          title: { "classes/BaseEntitySchema.html": {} },
          body: {
            "classes/BaseEntitySchema.html": {},
            "classes/UserEntity.html": {},
            "coverage.html": {},
          },
        },
      ],
      [
        "baseprojection",
        {
          _index: 269,
          title: {},
          body: {
            "classes/EntityRepository.html": {},
            "injectables/UserRepository.html": {},
          },
        },
      ],
      [
        "being",
        { _index: 416, title: {}, body: { "contributing.html": {}, "index.html": {} } },
      ],
      ["believe", { _index: 666, title: {}, body: { "index.html": {} } }],
      [
        "biography",
        {
          _index: 331,
          title: {},
          body: { "classes/UpdateUserDto.html": {}, "classes/UserEntity.html": {} },
        },
      ],
      [
        "birthday",
        {
          _index: 332,
          title: {},
          body: { "classes/UpdateUserDto.html": {}, "classes/UserEntity.html": {} },
        },
      ],
      [
        "book",
        {
          _index: 340,
          title: {},
          body: { "classes/UpdateUserDto.html": {}, "index.html": {} },
        },
      ],
      [
        "books",
        {
          _index: 237,
          title: {},
          body: { "classes/CreateReadingListDto.html": {}, "index.html": {} },
        },
      ],
      ["boolean", { _index: 314, title: {}, body: { "guards/RolesGuard.html": {} } }],
      [
        "bootstrap",
        {
          _index: 547,
          title: {},
          body: { "coverage.html": {}, "miscellaneous/functions.html": {} },
        },
      ],
      ["borwser", { _index: 689, title: {}, body: { "index.html": {} } }],
      ["both", { _index: 58, title: {}, body: { "interfaces/ApiOptions.html": {} } }],
      ["brain", { _index: 671, title: {}, body: { "index.html": {} } }],
      ["branch", { _index: 501, title: {}, body: { "contributing.html": {} } }],
      ["branching", { _index: 500, title: {}, body: { "contributing.html": {} } }],
      ["browse", { _index: 846, title: {}, body: { "modules.html": {} } }],
      [
        "browser",
        { _index: 686, title: {}, body: { "index.html": {}, "modules.html": {} } },
      ],
      ["bug", { _index: 447, title: {}, body: { "contributing.html": {} } }],
      ["bugs", { _index: 760, title: {}, body: { "index.html": {} } }],
      ["build", { _index: 647, title: {}, body: { "index.html": {} } }],
      ["built", { _index: 714, title: {}, body: { "index.html": {} } }],
      ["c", { _index: 786, title: {}, body: { "license.html": {} } }],
      ["canactivate", { _index: 308, title: {}, body: { "guards/RolesGuard.html": {} } }],
      [
        "canactivate(context",
        { _index: 311, title: {}, body: { "guards/RolesGuard.html": {} } },
      ],
      ["careers", { _index: 668, title: {}, body: { "index.html": {} } }],
      [
        "changes",
        { _index: 507, title: {}, body: { "contributing.html": {}, "index.html": {} } },
      ],
      [
        "characters",
        {
          _index: 135,
          title: {},
          body: {
            "classes/AuthDto.html": {},
            "classes/CreateReadingListDto.html": {},
            "classes/CreateUserDto.html": {},
            "classes/UpdateUserDto.html": {},
            "contributing.html": {},
          },
        },
      ],
      [
        "characters!'})@maxlength(14",
        { _index: 344, title: {}, body: { "classes/UpdateUserDto.html": {} } },
      ],
      [
        "characters!'})@maxlength(26",
        { _index: 257, title: {}, body: { "classes/CreateUserDto.html": {} } },
      ],
      [
        "characters!'})@maxlength(32",
        {
          _index: 133,
          title: {},
          body: { "classes/AuthDto.html": {}, "classes/CreateUserDto.html": {} },
        },
      ],
      [
        "characters'})@maxlength(1024",
        { _index: 243, title: {}, body: { "classes/CreateReadingListDto.html": {} } },
      ],
      [
        "characters'})@maxlength(54",
        { _index: 249, title: {}, body: { "classes/CreateReadingListDto.html": {} } },
      ],
      ["charge", { _index: 791, title: {}, body: { "license.html": {} } }],
      ["checked", { _index: 762, title: {}, body: { "index.html": {} } }],
      ["checkout", { _index: 503, title: {}, body: { "contributing.html": {} } }],
      ["chirila", { _index: 775, title: {}, body: { "index.html": {} } }],
      [
        "claim",
        {
          _index: 834,
          title: {},
          body: { "license.html": {}, "miscellaneous/variables.html": {} },
        },
      ],
      [
        "class",
        {
          _index: 116,
          title: {
            "classes/AuthDto.html": {},
            "classes/BaseEntitySchema.html": {},
            "classes/ConfigService.html": {},
            "classes/CreateReadingListDto.html": {},
            "classes/CreateUserDto.html": {},
            "classes/EntityRepository.html": {},
            "classes/UpdateUserDto.html": {},
            "classes/UserEntity.html": {},
          },
          body: { "coverage.html": {}, "dependencies.html": {} },
        },
      ],
      [
        "classes",
        {
          _index: 117,
          title: {},
          body: {
            "classes/AuthDto.html": {},
            "classes/BaseEntitySchema.html": {},
            "classes/ConfigService.html": {},
            "classes/CreateReadingListDto.html": {},
            "classes/CreateUserDto.html": {},
            "classes/EntityRepository.html": {},
            "classes/UpdateUserDto.html": {},
            "classes/UserEntity.html": {},
            "overview.html": {},
          },
        },
      ],
      ["click", { _index: 460, title: {}, body: { "contributing.html": {} } }],
      ["clone", { _index: 493, title: {}, body: { "contributing.html": {} } }],
      [
        "cluster_appmodule",
        {
          _index: 71,
          title: {},
          body: { "modules/AppModule.html": {}, "overview.html": {} },
        },
      ],
      [
        "cluster_appmodule_imports",
        {
          _index: 72,
          title: {},
          body: { "modules/AppModule.html": {}, "overview.html": {} },
        },
      ],
      [
        "cluster_authmodule",
        {
          _index: 136,
          title: {},
          body: { "modules/AuthModule.html": {}, "overview.html": {} },
        },
      ],
      [
        "cluster_authmodule_exports",
        {
          _index: 137,
          title: {},
          body: { "modules/AuthModule.html": {}, "overview.html": {} },
        },
      ],
      [
        "cluster_authmodule_providers",
        {
          _index: 138,
          title: {},
          body: { "modules/AuthModule.html": {}, "overview.html": {} },
        },
      ],
      [
        "cluster_configmodule",
        {
          _index: 209,
          title: {},
          body: { "modules/ConfigModule.html": {}, "overview.html": {} },
        },
      ],
      [
        "cluster_configmodule_exports",
        {
          _index: 210,
          title: {},
          body: { "modules/ConfigModule.html": {}, "overview.html": {} },
        },
      ],
      [
        "cluster_databasemodule",
        {
          _index: 259,
          title: {},
          body: { "modules/DatabaseModule.html": {}, "overview.html": {} },
        },
      ],
      [
        "cluster_databasemodule_exports",
        {
          _index: 260,
          title: {},
          body: { "modules/DatabaseModule.html": {}, "overview.html": {} },
        },
      ],
      [
        "cluster_databasemodule_providers",
        {
          _index: 261,
          title: {},
          body: { "modules/DatabaseModule.html": {}, "overview.html": {} },
        },
      ],
      [
        "cluster_usermodule",
        {
          _index: 387,
          title: {},
          body: { "modules/UserModule.html": {}, "overview.html": {} },
        },
      ],
      [
        "cluster_usermodule_providers",
        {
          _index: 388,
          title: {},
          body: { "modules/UserModule.html": {}, "overview.html": {} },
        },
      ],
      [
        "code",
        { _index: 413, title: {}, body: { "contributing.html": {}, "index.html": {} } },
      ],
      [
        "codebase",
        { _index: 417, title: {}, body: { "contributing.html": {}, "index.html": {} } },
      ],
      [
        "commit",
        { _index: 506, title: {}, body: { "contributing.html": {}, "index.html": {} } },
      ],
      ["commitlint", { _index: 748, title: {}, body: { "index.html": {} } }],
      ["common", { _index: 744, title: {}, body: { "index.html": {} } }],
      ["community", { _index: 404, title: {}, body: { "contributing.html": {} } }],
      ["compodoc", { _index: 732, title: {}, body: { "index.html": {} } }],
      ["conditions", { _index: 814, title: {}, body: { "license.html": {} } }],
      [
        "config",
        {
          _index: 213,
          title: {},
          body: { "classes/ConfigService.html": {}, "index.html": {} },
        },
      ],
      [
        "configmodule",
        {
          _index: 74,
          title: { "modules/ConfigModule.html": {} },
          body: {
            "modules/AppModule.html": {},
            "modules/ConfigModule.html": {},
            "modules.html": {},
            "overview.html": {},
          },
        },
      ],
      [
        "configservice",
        {
          _index: 192,
          title: { "classes/ConfigService.html": {} },
          body: {
            "injectables/AuthService.html": {},
            "modules/ConfigModule.html": {},
            "classes/ConfigService.html": {},
            "injectables/JwtStrategy.html": {},
            "coverage.html": {},
            "overview.html": {},
          },
        },
      ],
      [
        "configuration",
        { _index: 316, title: {}, body: { "interfaces/RuntimeSetismConfig.html": {} } },
      ],
      [
        "configures",
        { _index: 164, title: {}, body: { "interfaces/AuthOptions.html": {} } },
      ],
      [
        "conflict.'})@apiforbiddenresponse({description",
        {
          _index: 114,
          title: {},
          body: {
            "controllers/AuthController.html": {},
            "controllers/UserController.html": {},
          },
        },
      ],
      [
        "connect",
        { _index: 322, title: {}, body: { "interfaces/RuntimeSetismConfig.html": {} } },
      ],
      [
        "connection",
        {
          _index: 232,
          title: {},
          body: {
            "interfaces/ConnectionOptions.html": {},
            "injectables/DatabaseService.html": {},
            "interfaces/RuntimeSetismConfig.html": {},
            "license.html": {},
          },
        },
      ],
      [
        "connectionoptions",
        {
          _index: 228,
          title: { "interfaces/ConnectionOptions.html": {} },
          body: { "interfaces/ConnectionOptions.html": {}, "coverage.html": {} },
        },
      ],
      [
        "connectionuri",
        { _index: 229, title: {}, body: { "interfaces/ConnectionOptions.html": {} } },
      ],
      ["consists", { _index: 715, title: {}, body: { "index.html": {} } }],
      [
        "constructor",
        {
          _index: 189,
          title: {},
          body: {
            "injectables/AuthService.html": {},
            "classes/ConfigService.html": {},
            "injectables/DatabaseService.html": {},
            "classes/EntityRepository.html": {},
            "injectables/JwtStrategy.html": {},
            "guards/RolesGuard.html": {},
            "injectables/UserRepository.html": {},
            "injectables/UserService.html": {},
          },
        },
      ],
      [
        "constructor(configservice",
        { _index: 301, title: {}, body: { "injectables/JwtStrategy.html": {} } },
      ],
      [
        "constructor(connection",
        { _index: 266, title: {}, body: { "injectables/DatabaseService.html": {} } },
      ],
      [
        "constructor(entitymodal",
        { _index: 276, title: {}, body: { "classes/EntityRepository.html": {} } },
      ],
      [
        "constructor(reflector",
        { _index: 309, title: {}, body: { "guards/RolesGuard.html": {} } },
      ],
      [
        "constructor(usermodel",
        { _index: 392, title: {}, body: { "injectables/UserRepository.html": {} } },
      ],
      [
        "constructor(userrepository",
        {
          _index: 190,
          title: {},
          body: {
            "injectables/AuthService.html": {},
            "injectables/UserService.html": {},
          },
        },
      ],
      ["content", { _index: 688, title: {}, body: { "index.html": {} } }],
      ["context", { _index: 313, title: {}, body: { "guards/RolesGuard.html": {} } }],
      ["contract", { _index: 839, title: {}, body: { "license.html": {} } }],
      ["contribute", { _index: 767, title: {}, body: { "index.html": {} } }],
      [
        "contributing",
        {
          _index: 399,
          title: { "contributing.html": {} },
          body: { "contributing.html": {}, "index.html": {} },
        },
      ],
      [
        "contributions",
        { _index: 400, title: {}, body: { "contributing.html": {}, "index.html": {} } },
      ],
      ["contributors", { _index: 622, title: {}, body: { "index.html": {} } }],
      [
        "controller",
        {
          _index: 82,
          title: {
            "controllers/AuthController.html": {},
            "controllers/UserController.html": {},
          },
          body: { "coverage.html": {} },
        },
      ],
      [
        "controllers",
        {
          _index: 84,
          title: {},
          body: {
            "controllers/AuthController.html": {},
            "modules/AuthModule.html": {},
            "controllers/UserController.html": {},
            "modules/UserModule.html": {},
            "overview.html": {},
          },
        },
      ],
      ["conventional", { _index: 749, title: {}, body: { "index.html": {} } }],
      ["copies", { _index: 809, title: {}, body: { "license.html": {} } }],
      ["copy", { _index: 794, title: {}, body: { "license.html": {} } }],
      ["copyright", { _index: 785, title: {}, body: { "license.html": {} } }],
      [
        "cors",
        {
          _index: 21,
          title: {},
          body: {
            "interfaces/ApiOptions.html": {},
            "interfaces/RuntimeSetismConfig.html": {},
          },
        },
      ],
      [
        "corsoptions",
        { _index: 27, title: {}, body: { "interfaces/ApiOptions.html": {} } },
      ],
      [
        "coverage",
        { _index: 522, title: { "coverage.html": {} }, body: { "coverage.html": {} } },
      ],
      ["covers", { _index: 768, title: {}, body: { "index.html": {} } }],
      [
        "create",
        {
          _index: 166,
          title: {},
          body: {
            "interfaces/AuthOptions.html": {},
            "classes/EntityRepository.html": {},
            "interfaces/SuperadminCredentials.html": {},
            "injectables/UserRepository.html": {},
            "contributing.html": {},
          },
        },
      ],
      [
        "create(createentitydata",
        {
          _index: 281,
          title: {},
          body: {
            "classes/EntityRepository.html": {},
            "injectables/UserRepository.html": {},
          },
        },
      ],
      [
        "create.dto.ts",
        {
          _index: 236,
          title: {},
          body: { "classes/CreateReadingListDto.html": {}, "coverage.html": {} },
        },
      ],
      [
        "created.'})@apibadrequestresponse({description",
        {
          _index: 111,
          title: {},
          body: {
            "controllers/AuthController.html": {},
            "controllers/UserController.html": {},
          },
        },
      ],
      [
        "createdocument",
        {
          _index: 549,
          title: {},
          body: { "coverage.html": {}, "miscellaneous/functions.html": {} },
        },
      ],
      [
        "createdocument(app",
        { _index: 615, title: {}, body: { "miscellaneous/functions.html": {} } },
      ],
      [
        "createentitydata",
        {
          _index: 283,
          title: {},
          body: {
            "classes/EntityRepository.html": {},
            "injectables/UserRepository.html": {},
          },
        },
      ],
      [
        "createlist",
        {
          _index: 348,
          title: {},
          body: {
            "controllers/UserController.html": {},
            "injectables/UserService.html": {},
          },
        },
      ],
      [
        "createlist(id",
        {
          _index: 351,
          title: {},
          body: {
            "controllers/UserController.html": {},
            "injectables/UserService.html": {},
          },
        },
      ],
      [
        "createreadinglistdto",
        {
          _index: 234,
          title: { "classes/CreateReadingListDto.html": {} },
          body: {
            "classes/CreateReadingListDto.html": {},
            "controllers/UserController.html": {},
            "classes/UserEntity.html": {},
            "injectables/UserService.html": {},
            "coverage.html": {},
          },
        },
      ],
      [
        "createreadinglistdto})@apicreatedresponse({description",
        { _index: 352, title: {}, body: { "controllers/UserController.html": {} } },
      ],
      [
        "createuserdto",
        {
          _index: 109,
          title: { "classes/CreateUserDto.html": {} },
          body: {
            "controllers/AuthController.html": {},
            "injectables/AuthService.html": {},
            "classes/CreateUserDto.html": {},
            "coverage.html": {},
          },
        },
      ],
      [
        "createuserdto})@apicreatedresponse({description",
        { _index: 110, title: {}, body: { "controllers/AuthController.html": {} } },
      ],
      ["creating", { _index: 693, title: {}, body: { "index.html": {} } }],
      [
        "credentials",
        { _index: 165, title: {}, body: { "interfaces/AuthOptions.html": {} } },
      ],
      [
        "critic",
        { _index: 609, title: {}, body: { "miscellaneous/enumerations.html": {} } },
      ],
      ["critics", { _index: 706, title: {}, body: { "index.html": {} } }],
      ["csurf", { _index: 573, title: {}, body: { "dependencies.html": {} } }],
      [
        "current",
        { _index: 327, title: {}, body: { "interfaces/SwaggerOptions.html": {} } },
      ],
      ["currently", { _index: 481, title: {}, body: { "contributing.html": {} } }],
      ["damages", { _index: 835, title: {}, body: { "license.html": {} } }],
      ["dark/light", { _index: 709, title: {}, body: { "index.html": {} } }],
      ["data", { _index: 724, title: {}, body: { "index.html": {} } }],
      [
        "database",
        {
          _index: 231,
          title: {},
          body: {
            "interfaces/ConnectionOptions.html": {},
            "interfaces/RuntimeSetismConfig.html": {},
          },
        },
      ],
      [
        "databasemodule",
        {
          _index: 75,
          title: { "modules/DatabaseModule.html": {} },
          body: {
            "modules/AppModule.html": {},
            "modules/DatabaseModule.html": {},
            "modules.html": {},
            "overview.html": {},
          },
        },
      ],
      [
        "databaseservice",
        {
          _index: 262,
          title: { "injectables/DatabaseService.html": {} },
          body: {
            "modules/DatabaseModule.html": {},
            "injectables/DatabaseService.html": {},
            "coverage.html": {},
            "overview.html": {},
          },
        },
      ],
      [
        "date",
        {
          _index: 337,
          title: {},
          body: { "classes/UpdateUserDto.html": {}, "classes/UserEntity.html": {} },
        },
      ],
      ["days", { _index: 181, title: {}, body: { "interfaces/AuthOptions.html": {} } }],
      [
        "dboptions",
        {
          _index: 220,
          title: {},
          body: {
            "classes/ConfigService.html": {},
            "interfaces/RuntimeSetismConfig.html": {},
          },
        },
      ],
      ["deal", { _index: 797, title: {}, body: { "license.html": {} } }],
      ["dealings", { _index: 843, title: {}, body: { "license.html": {} } }],
      ["deals", { _index: 672, title: {}, body: { "index.html": {} } }],
      [
        "decoding",
        { _index: 155, title: {}, body: { "interfaces/AuthOptions.html": {} } },
      ],
      [
        "decorators",
        {
          _index: 93,
          title: {},
          body: {
            "controllers/AuthController.html": {},
            "classes/AuthDto.html": {},
            "classes/BaseEntitySchema.html": {},
            "classes/CreateReadingListDto.html": {},
            "classes/CreateUserDto.html": {},
            "classes/UpdateUserDto.html": {},
            "controllers/UserController.html": {},
            "classes/UserEntity.html": {},
          },
        },
      ],
      [
        "default",
        {
          _index: 28,
          title: {},
          body: {
            "interfaces/ApiOptions.html": {},
            "classes/AuthDto.html": {},
            "interfaces/AuthOptions.html": {},
            "classes/CreateUserDto.html": {},
            "classes/EntityRepository.html": {},
            "interfaces/SuperadminCredentials.html": {},
            "classes/UserEntity.html": {},
            "injectables/UserRepository.html": {},
            "miscellaneous/variables.html": {},
          },
        },
      ],
      [
        "define",
        {
          _index: 8,
          title: {},
          body: { "interfaces/ApiOptions.html": {}, "interfaces/AuthOptions.html": {} },
        },
      ],
      [
        "defined",
        { _index: 317, title: {}, body: { "interfaces/RuntimeSetismConfig.html": {} } },
      ],
      [
        "dekoo",
        { _index: 639, title: {}, body: { "index.html": {}, "license.html": {} } },
      ],
      ["dekoo.tk", { _index: 628, title: {}, body: { "index.html": {} } }],
      [
        "deletemany",
        {
          _index: 270,
          title: {},
          body: {
            "classes/EntityRepository.html": {},
            "injectables/UserRepository.html": {},
          },
        },
      ],
      [
        "deletemany(entityfilterquery",
        {
          _index: 285,
          title: {},
          body: {
            "classes/EntityRepository.html": {},
            "injectables/UserRepository.html": {},
          },
        },
      ],
      [
        "deleteone",
        {
          _index: 271,
          title: {},
          body: {
            "classes/EntityRepository.html": {},
            "injectables/UserRepository.html": {},
          },
        },
      ],
      [
        "deleteone(entityfilterquery",
        {
          _index: 288,
          title: {},
          body: {
            "classes/EntityRepository.html": {},
            "injectables/UserRepository.html": {},
          },
        },
      ],
      [
        "dependencies",
        {
          _index: 70,
          title: { "dependencies.html": {} },
          body: {
            "modules/AppModule.html": {},
            "modules/AuthModule.html": {},
            "modules/ConfigModule.html": {},
            "modules/DatabaseModule.html": {},
            "modules/UserModule.html": {},
            "dependencies.html": {},
            "overview.html": {},
          },
        },
      ],
      ["depression", { _index: 673, title: {}, body: { "index.html": {} } }],
      ["depressive", { _index: 677, title: {}, body: { "index.html": {} } }],
      [
        "describing",
        { _index: 174, title: {}, body: { "interfaces/AuthOptions.html": {} } },
      ],
      [
        "description",
        {
          _index: 7,
          title: {},
          body: {
            "interfaces/ApiOptions.html": {},
            "classes/AuthDto.html": {},
            "interfaces/AuthOptions.html": {},
            "classes/CreateReadingListDto.html": {},
            "classes/CreateUserDto.html": {},
            "interfaces/RuntimeSetismConfig.html": {},
            "interfaces/SwaggerOptions.html": {},
            "classes/UpdateUserDto.html": {},
            "controllers/UserController.html": {},
            "contributing.html": {},
          },
        },
      ],
      ["detailed", { _index: 520, title: {}, body: { "contributing.html": {} } }],
      ["details", { _index: 773, title: {}, body: { "index.html": {} } }],
      ["dev", { _index: 499, title: {}, body: { "contributing.html": {} } }],
      [
        "development",
        {
          _index: 47,
          title: {},
          body: {
            "interfaces/ApiOptions.html": {},
            "contributing.html": {},
            "miscellaneous/enumerations.html": {},
          },
        },
      ],
      ["directly", { _index: 764, title: {}, body: { "index.html": {} } }],
      ["discuss", { _index: 473, title: {}, body: { "contributing.html": {} } }],
      ["discussing", { _index: 448, title: {}, body: { "contributing.html": {} } }],
      ["discussion", { _index: 430, title: {}, body: { "contributing.html": {} } }],
      ["discussions", { _index: 432, title: {}, body: { "contributing.html": {} } }],
      ["distribute", { _index: 805, title: {}, body: { "license.html": {} } }],
      [
        "docs",
        {
          _index: 44,
          title: {},
          body: { "interfaces/ApiOptions.html": {}, "index.html": {} },
        },
      ],
      ["docs.dekoo.tk", { _index: 630, title: {}, body: { "index.html": {} } }],
      ["document", { _index: 766, title: {}, body: { "index.html": {} } }],
      [
        "documentation",
        {
          _index: 62,
          title: {},
          body: {
            "interfaces/ApiOptions.html": {},
            "interfaces/SwaggerOptions.html": {},
            "coverage.html": {},
            "index.html": {},
            "license.html": {},
          },
        },
      ],
      ["download", { _index: 697, title: {}, body: { "index.html": {} } }],
      ["e2e", { _index: 735, title: {}, body: { "index.html": {} } }],
      ["eg", { _index: 178, title: {}, body: { "interfaces/AuthOptions.html": {} } }],
      [
        "email",
        {
          _index: 119,
          title: {},
          body: {
            "classes/AuthDto.html": {},
            "injectables/AuthService.html": {},
            "classes/CreateUserDto.html": {},
            "classes/UserEntity.html": {},
          },
        },
      ],
      [
        "email!'})@isdefined({message",
        {
          _index: 126,
          title: {},
          body: { "classes/AuthDto.html": {}, "classes/CreateUserDto.html": {} },
        },
      ],
      [
        "empty",
        {
          _index: 127,
          title: {},
          body: { "classes/AuthDto.html": {}, "classes/CreateUserDto.html": {} },
        },
      ],
      [
        "empty!'})@minlength(4",
        { _index: 255, title: {}, body: { "classes/CreateUserDto.html": {} } },
      ],
      [
        "empty!'})@minlength(6",
        {
          _index: 130,
          title: {},
          body: { "classes/AuthDto.html": {}, "classes/CreateUserDto.html": {} },
        },
      ],
      ["end", { _index: 721, title: {}, body: { "index.html": {} } }],
      ["ensure", { _index: 469, title: {}, body: { "contributing.html": {} } }],
      [
        "entire",
        { _index: 426, title: {}, body: { "contributing.html": {}, "index.html": {} } },
      ],
      [
        "entityfilterquery",
        {
          _index: 287,
          title: {},
          body: {
            "classes/EntityRepository.html": {},
            "injectables/UserRepository.html": {},
          },
        },
      ],
      [
        "entityid",
        {
          _index: 293,
          title: {},
          body: {
            "classes/EntityRepository.html": {},
            "injectables/UserRepository.html": {},
          },
        },
      ],
      [
        "entitymodal",
        { _index: 278, title: {}, body: { "classes/EntityRepository.html": {} } },
      ],
      [
        "entityrepository",
        {
          _index: 267,
          title: { "classes/EntityRepository.html": {} },
          body: {
            "classes/EntityRepository.html": {},
            "injectables/UserRepository.html": {},
            "coverage.html": {},
          },
        },
      ],
      ["enum", { _index: 383, title: {}, body: { "classes/UserEntity.html": {} } }],
      [
        "enumerations",
        {
          _index: 594,
          title: { "miscellaneous/enumerations.html": {} },
          body: { "miscellaneous/enumerations.html": {} },
        },
      ],
      [
        "env",
        {
          _index: 22,
          title: {},
          body: {
            "interfaces/ApiOptions.html": {},
            "interfaces/ConnectionOptions.html": {},
          },
        },
      ],
      ["envalid", { _index: 575, title: {}, body: { "dependencies.html": {} } }],
      [
        "environment",
        {
          _index: 48,
          title: {},
          body: {
            "interfaces/ApiOptions.html": {},
            "contributing.html": {},
            "miscellaneous/enumerations.html": {},
          },
        },
      ],
      ["eslint", { _index: 745, title: {}, body: { "index.html": {} } }],
      ["esteem", { _index: 684, title: {}, body: { "index.html": {} } }],
      [
        "etc",
        { _index: 321, title: {}, body: { "interfaces/RuntimeSetismConfig.html": {} } },
      ],
      ["event", { _index: 830, title: {}, body: { "license.html": {} } }],
      ["everyone", { _index: 656, title: {}, body: { "index.html": {} } }],
      ["example", { _index: 758, title: {}, body: { "index.html": {} } }],
      [
        "executioncontext",
        { _index: 312, title: {}, body: { "guards/RolesGuard.html": {} } },
      ],
      ["expect", { _index: 438, title: {}, body: { "contributing.html": {} } }],
      [
        "exports",
        {
          _index: 144,
          title: {},
          body: {
            "modules/AuthModule.html": {},
            "modules/ConfigModule.html": {},
            "modules/DatabaseModule.html": {},
          },
        },
      ],
      ["exposed", { _index: 12, title: {}, body: { "interfaces/ApiOptions.html": {} } }],
      [
        "exposedheaders",
        { _index: 36, title: {}, body: { "interfaces/ApiOptions.html": {} } },
      ],
      [
        "express",
        {
          _index: 43,
          title: {},
          body: {
            "interfaces/ApiOptions.html": {},
            "dependencies.html": {},
            "license.html": {},
          },
        },
      ],
      [
        "expressed",
        { _index: 173, title: {}, body: { "interfaces/AuthOptions.html": {} } },
      ],
      ["extended", { _index: 16, title: {}, body: { "interfaces/ApiOptions.html": {} } }],
      [
        "extends",
        {
          _index: 368,
          title: {},
          body: { "classes/UserEntity.html": {}, "injectables/UserRepository.html": {} },
        },
      ],
      ["extra", { _index: 160, title: {}, body: { "interfaces/AuthOptions.html": {} } }],
      ["fact", { _index: 645, title: {}, body: { "index.html": {} } }],
      [
        "failed",
        {
          _index: 99,
          title: {},
          body: {
            "controllers/AuthController.html": {},
            "controllers/UserController.html": {},
          },
        },
      ],
      [
        "false})@isoptional",
        { _index: 335, title: {}, body: { "classes/UpdateUserDto.html": {} } },
      ],
      [
        "false})@isoptional()@isdate({message",
        { _index: 338, title: {}, body: { "classes/UpdateUserDto.html": {} } },
      ],
      [
        "false})@isoptional()@minlength(20",
        { _index: 336, title: {}, body: { "classes/UpdateUserDto.html": {} } },
      ],
      [
        "false})@isoptional()@minlength(4",
        { _index: 343, title: {}, body: { "classes/UpdateUserDto.html": {} } },
      ],
      ["favorite", { _index: 713, title: {}, body: { "index.html": {} } }],
      ["feat", { _index: 509, title: {}, body: { "contributing.html": {} } }],
      [
        "feature",
        { _index: 449, title: {}, body: { "contributing.html": {}, "index.html": {} } },
      ],
      [
        "feature/#_amazing",
        { _index: 505, title: {}, body: { "contributing.html": {} } },
      ],
      [
        "features",
        { _index: 454, title: {}, body: { "contributing.html": {}, "index.html": {} } },
      ],
      ["feedback", { _index: 621, title: {}, body: { "index.html": {} } }],
      ["feel", { _index: 660, title: {}, body: { "index.html": {} } }],
      [
        "file",
        {
          _index: 5,
          title: {},
          body: {
            "interfaces/ApiOptions.html": {},
            "modules/AppModule.html": {},
            "controllers/AuthController.html": {},
            "classes/AuthDto.html": {},
            "modules/AuthModule.html": {},
            "interfaces/AuthOptions.html": {},
            "injectables/AuthService.html": {},
            "classes/BaseEntitySchema.html": {},
            "modules/ConfigModule.html": {},
            "classes/ConfigService.html": {},
            "interfaces/ConnectionOptions.html": {},
            "classes/CreateReadingListDto.html": {},
            "classes/CreateUserDto.html": {},
            "modules/DatabaseModule.html": {},
            "injectables/DatabaseService.html": {},
            "classes/EntityRepository.html": {},
            "injectables/JwtAuthGuard.html": {},
            "injectables/JwtStrategy.html": {},
            "guards/RolesGuard.html": {},
            "interfaces/RuntimeSetismConfig.html": {},
            "interfaces/SuperadminCredentials.html": {},
            "interfaces/SwaggerOptions.html": {},
            "classes/UpdateUserDto.html": {},
            "controllers/UserController.html": {},
            "classes/UserEntity.html": {},
            "modules/UserModule.html": {},
            "injectables/UserRepository.html": {},
            "injectables/UserService.html": {},
            "coverage.html": {},
            "index.html": {},
          },
        },
      ],
      [
        "files",
        { _index: 731, title: {}, body: { "index.html": {}, "license.html": {} } },
      ],
      [
        "filterquery",
        {
          _index: 286,
          title: {},
          body: {
            "classes/EntityRepository.html": {},
            "injectables/UserRepository.html": {},
          },
        },
      ],
      [
        "find",
        {
          _index: 272,
          title: {},
          body: {
            "classes/EntityRepository.html": {},
            "controllers/UserController.html": {},
            "injectables/UserRepository.html": {},
            "contributing.html": {},
          },
        },
      ],
      [
        "find(entityfilterquery",
        {
          _index: 289,
          title: {},
          body: {
            "classes/EntityRepository.html": {},
            "injectables/UserRepository.html": {},
          },
        },
      ],
      [
        "find(id",
        { _index: 354, title: {}, body: { "controllers/UserController.html": {} } },
      ],
      [
        "findbyid",
        {
          _index: 273,
          title: {},
          body: {
            "classes/EntityRepository.html": {},
            "injectables/UserRepository.html": {},
          },
        },
      ],
      [
        "findbyid(entityid",
        {
          _index: 292,
          title: {},
          body: {
            "classes/EntityRepository.html": {},
            "injectables/UserRepository.html": {},
          },
        },
      ],
      [
        "findbyidandupdate",
        {
          _index: 274,
          title: {},
          body: {
            "classes/EntityRepository.html": {},
            "injectables/UserRepository.html": {},
          },
        },
      ],
      [
        "findbyidandupdate(entityid",
        {
          _index: 294,
          title: {},
          body: {
            "classes/EntityRepository.html": {},
            "injectables/UserRepository.html": {},
          },
        },
      ],
      [
        "findone",
        {
          _index: 275,
          title: {},
          body: {
            "classes/EntityRepository.html": {},
            "injectables/UserRepository.html": {},
          },
        },
      ],
      [
        "findone(entityfilterquery",
        {
          _index: 297,
          title: {},
          body: {
            "classes/EntityRepository.html": {},
            "injectables/UserRepository.html": {},
          },
        },
      ],
      ["first", { _index: 472, title: {}, body: { "contributing.html": {} } }],
      ["firstlogin", { _index: 369, title: {}, body: { "classes/UserEntity.html": {} } }],
      ["fiter", { _index: 712, title: {}, body: { "index.html": {} } }],
      ["fitness", { _index: 826, title: {}, body: { "license.html": {} } }],
      ["fits", { _index: 476, title: {}, body: { "contributing.html": {} } }],
      ["fixes", { _index: 465, title: {}, body: { "contributing.html": {} } }],
      [
        "fixing",
        { _index: 462, title: {}, body: { "contributing.html": {}, "index.html": {} } },
      ],
      ["folder", { _index: 727, title: {}, body: { "index.html": {} } }],
      [
        "follow",
        { _index: 458, title: {}, body: { "contributing.html": {}, "index.html": {} } },
      ],
      [
        "following",
        { _index: 769, title: {}, body: { "index.html": {}, "license.html": {} } },
      ],
      ["follows", { _index: 771, title: {}, body: { "index.html": {} } }],
      [
        "forbidden!'})@apiparam({name",
        { _index: 358, title: {}, body: { "controllers/UserController.html": {} } },
      ],
      [
        "forbidden!'})@post(':id/list",
        { _index: 353, title: {}, body: { "controllers/UserController.html": {} } },
      ],
      [
        "forbidden!'})@post('signin",
        { _index: 103, title: {}, body: { "controllers/AuthController.html": {} } },
      ],
      [
        "forbidden!'})@post('signup",
        { _index: 115, title: {}, body: { "controllers/AuthController.html": {} } },
      ],
      [
        "forbidden!'})@useroles(role.admin)@useguards(jwtauthguard",
        { _index: 360, title: {}, body: { "controllers/UserController.html": {} } },
      ],
      ["fork", { _index: 492, title: {}, body: { "contributing.html": {} } }],
      ["format", { _index: 699, title: {}, body: { "index.html": {} } }],
      ["formatted", { _index: 742, title: {}, body: { "index.html": {} } }],
      ["found", { _index: 451, title: {}, body: { "contributing.html": {} } }],
      [
        "found.'})@apiforbiddenresponse({description",
        { _index: 357, title: {}, body: { "controllers/UserController.html": {} } },
      ],
      ["framework", { _index: 722, title: {}, body: { "index.html": {} } }],
      [
        "free",
        { _index: 650, title: {}, body: { "index.html": {}, "license.html": {} } },
      ],
      ["full", { _index: 253, title: {}, body: { "classes/CreateUserDto.html": {} } }],
      [
        "fullname",
        {
          _index: 202,
          title: {},
          body: {
            "injectables/AuthService.html": {},
            "classes/CreateUserDto.html": {},
            "classes/UserEntity.html": {},
          },
        },
      ],
      [
        "fullname'})@isdefined({message",
        { _index: 254, title: {}, body: { "classes/CreateUserDto.html": {} } },
      ],
      ["function", { _index: 546, title: {}, body: { "coverage.html": {} } }],
      [
        "functions",
        {
          _index: 612,
          title: { "miscellaneous/functions.html": {} },
          body: { "miscellaneous/functions.html": {} },
        },
      ],
      ["furnished", { _index: 812, title: {}, body: { "license.html": {} } }],
      [
        "getapioptions",
        { _index: 225, title: {}, body: { "classes/ConfigService.html": {} } },
      ],
      [
        "getauthoptions",
        { _index: 226, title: {}, body: { "classes/ConfigService.html": {} } },
      ],
      [
        "getdbhandle",
        { _index: 265, title: {}, body: { "injectables/DatabaseService.html": {} } },
      ],
      [
        "getdboptions",
        { _index: 227, title: {}, body: { "classes/ConfigService.html": {} } },
      ],
      [
        "getisdevelopment",
        { _index: 222, title: {}, body: { "classes/ConfigService.html": {} } },
      ],
      [
        "getisproduction",
        { _index: 223, title: {}, body: { "classes/ConfigService.html": {} } },
      ],
      [
        "getistest",
        { _index: 224, title: {}, body: { "classes/ConfigService.html": {} } },
      ],
      [
        "getting",
        {
          _index: 397,
          title: { "contributing.html": {}, "index.html": {}, "license.html": {} },
          body: { "contributing.html": {} },
        },
      ],
      [
        "git",
        { _index: 502, title: {}, body: { "contributing.html": {}, "index.html": {} } },
      ],
      ["github", { _index: 782, title: {}, body: { "index.html": {} } }],
      ["github's", { _index: 434, title: {}, body: { "contributing.html": {} } }],
      ["golden", { _index: 459, title: {}, body: { "contributing.html": {} } }],
      ["granted", { _index: 790, title: {}, body: { "license.html": {} } }],
      ["greatly", { _index: 753, title: {}, body: { "index.html": {} } }],
      ["ground", { _index: 428, title: {}, body: { "contributing.html": {} } }],
      [
        "guard",
        {
          _index: 304,
          title: { "guards/RolesGuard.html": {} },
          body: { "coverage.html": {}, "overview.html": {} },
        },
      ],
      ["guards", { _index: 306, title: {}, body: { "guards/RolesGuard.html": {} } }],
      ["guidelines", { _index: 431, title: {}, body: { "contributing.html": {} } }],
      ["handling", { _index: 40, title: {}, body: { "interfaces/ApiOptions.html": {} } }],
      ["happier", { _index: 661, title: {}, body: { "index.html": {} } }],
      ["hash", { _index: 201, title: {}, body: { "injectables/AuthService.html": {} } }],
      [
        "hashing",
        { _index: 162, title: {}, body: { "interfaces/AuthOptions.html": {} } },
      ],
      ["heartily", { _index: 410, title: {}, body: { "contributing.html": {} } }],
      ["helmet", { _index: 577, title: {}, body: { "dependencies.html": {} } }],
      ["help", { _index: 675, title: {}, body: { "index.html": {} } }],
      [
        "here",
        { _index: 461, title: {}, body: { "contributing.html": {}, "index.html": {} } },
      ],
      ["here's", { _index: 657, title: {}, body: { "index.html": {} } }],
      ["hereby", { _index: 789, title: {}, body: { "license.html": {} } }],
      ["heroku", { _index: 781, title: {}, body: { "index.html": {} } }],
      ["holders", { _index: 832, title: {}, body: { "license.html": {} } }],
      [
        "hostname",
        {
          _index: 23,
          title: {},
          body: {
            "interfaces/ApiOptions.html": {},
            "interfaces/RuntimeSetismConfig.html": {},
          },
        },
      ],
      ["husky", { _index: 784, title: {}, body: { "index.html": {} } }],
      [
        "id",
        {
          _index: 199,
          title: {},
          body: {
            "injectables/AuthService.html": {},
            "controllers/UserController.html": {},
            "injectables/UserService.html": {},
          },
        },
      ],
      [
        "id'})@delete(':id",
        { _index: 363, title: {}, body: { "controllers/UserController.html": {} } },
      ],
      [
        "id'})@get(':id",
        { _index: 359, title: {}, body: { "controllers/UserController.html": {} } },
      ],
      [
        "id'})@patch(':id",
        { _index: 365, title: {}, body: { "controllers/UserController.html": {} } },
      ],
      ["idea", { _index: 450, title: {}, body: { "contributing.html": {} } }],
      ["ideas", { _index: 453, title: {}, body: { "contributing.html": {} } }],
      ["identifier", { _index: 523, title: {}, body: { "coverage.html": {} } }],
      ["img", { _index: 779, title: {}, body: { "index.html": {} } }],
      ["impact", { _index: 667, title: {}, body: { "index.html": {} } }],
      ["implement", { _index: 455, title: {}, body: { "contributing.html": {} } }],
      ["implementing", { _index: 463, title: {}, body: { "contributing.html": {} } }],
      ["implied", { _index: 823, title: {}, body: { "license.html": {} } }],
      ["important", { _index: 701, title: {}, body: { "index.html": {} } }],
      ["imports", { _index: 81, title: {}, body: { "modules/AppModule.html": {} } }],
      ["included", { _index: 818, title: {}, body: { "license.html": {} } }],
      [
        "including",
        {
          _index: 319,
          title: {},
          body: { "interfaces/RuntimeSetismConfig.html": {}, "license.html": {} },
        },
      ],
      ["increase", { _index: 681, title: {}, body: { "index.html": {} } }],
      [
        "index",
        {
          _index: 18,
          title: { "index.html": {} },
          body: {
            "interfaces/ApiOptions.html": {},
            "controllers/AuthController.html": {},
            "classes/AuthDto.html": {},
            "interfaces/AuthOptions.html": {},
            "injectables/AuthService.html": {},
            "classes/BaseEntitySchema.html": {},
            "classes/ConfigService.html": {},
            "interfaces/ConnectionOptions.html": {},
            "classes/CreateReadingListDto.html": {},
            "classes/CreateUserDto.html": {},
            "injectables/DatabaseService.html": {},
            "classes/EntityRepository.html": {},
            "injectables/JwtStrategy.html": {},
            "guards/RolesGuard.html": {},
            "interfaces/RuntimeSetismConfig.html": {},
            "interfaces/SuperadminCredentials.html": {},
            "interfaces/SwaggerOptions.html": {},
            "classes/UpdateUserDto.html": {},
            "controllers/UserController.html": {},
            "classes/UserEntity.html": {},
            "injectables/UserRepository.html": {},
            "injectables/UserService.html": {},
            "miscellaneous/enumerations.html": {},
            "miscellaneous/functions.html": {},
            "miscellaneous/typealiases.html": {},
            "miscellaneous/variables.html": {},
          },
        },
      ],
      [
        "inestapplication",
        { _index: 616, title: {}, body: { "miscellaneous/functions.html": {} } },
      ],
      [
        "info",
        {
          _index: 4,
          title: {},
          body: {
            "interfaces/ApiOptions.html": {},
            "modules/AppModule.html": {},
            "controllers/AuthController.html": {},
            "classes/AuthDto.html": {},
            "modules/AuthModule.html": {},
            "interfaces/AuthOptions.html": {},
            "injectables/AuthService.html": {},
            "classes/BaseEntitySchema.html": {},
            "modules/ConfigModule.html": {},
            "classes/ConfigService.html": {},
            "interfaces/ConnectionOptions.html": {},
            "classes/CreateReadingListDto.html": {},
            "classes/CreateUserDto.html": {},
            "modules/DatabaseModule.html": {},
            "injectables/DatabaseService.html": {},
            "classes/EntityRepository.html": {},
            "injectables/JwtAuthGuard.html": {},
            "injectables/JwtStrategy.html": {},
            "guards/RolesGuard.html": {},
            "interfaces/RuntimeSetismConfig.html": {},
            "interfaces/SuperadminCredentials.html": {},
            "interfaces/SwaggerOptions.html": {},
            "classes/UpdateUserDto.html": {},
            "controllers/UserController.html": {},
            "classes/UserEntity.html": {},
            "modules/UserModule.html": {},
            "injectables/UserRepository.html": {},
            "injectables/UserService.html": {},
          },
        },
      ],
      ["information", { _index: 778, title: {}, body: { "index.html": {} } }],
      ["initial", { _index: 521, title: {}, body: { "contributing.html": {} } }],
      [
        "injectable",
        {
          _index: 183,
          title: {
            "injectables/AuthService.html": {},
            "injectables/DatabaseService.html": {},
            "injectables/JwtAuthGuard.html": {},
            "injectables/JwtStrategy.html": {},
            "injectables/UserRepository.html": {},
            "injectables/UserService.html": {},
          },
          body: { "coverage.html": {} },
        },
      ],
      [
        "injectables",
        {
          _index: 184,
          title: {},
          body: {
            "injectables/AuthService.html": {},
            "injectables/DatabaseService.html": {},
            "injectables/JwtAuthGuard.html": {},
            "injectables/JwtStrategy.html": {},
            "injectables/UserRepository.html": {},
            "injectables/UserService.html": {},
            "overview.html": {},
          },
        },
      ],
      ["inspire", { _index: 409, title: {}, body: { "contributing.html": {} } }],
      ["inspired", { _index: 646, title: {}, body: { "index.html": {} } }],
      ["install", { _index: 495, title: {}, body: { "contributing.html": {} } }],
      ["installation", { _index: 491, title: {}, body: { "contributing.html": {} } }],
      ["instantly", { _index: 687, title: {}, body: { "index.html": {} } }],
      ["interested", { _index: 763, title: {}, body: { "index.html": {} } }],
      [
        "interface",
        {
          _index: 0,
          title: {
            "interfaces/ApiOptions.html": {},
            "interfaces/AuthOptions.html": {},
            "interfaces/ConnectionOptions.html": {},
            "interfaces/RuntimeSetismConfig.html": {},
            "interfaces/SuperadminCredentials.html": {},
            "interfaces/SwaggerOptions.html": {},
          },
          body: { "interfaces/RuntimeSetismConfig.html": {}, "coverage.html": {} },
        },
      ],
      [
        "interfaces",
        {
          _index: 2,
          title: {},
          body: {
            "interfaces/ApiOptions.html": {},
            "interfaces/AuthOptions.html": {},
            "interfaces/ConnectionOptions.html": {},
            "interfaces/RuntimeSetismConfig.html": {},
            "interfaces/SuperadminCredentials.html": {},
            "interfaces/SwaggerOptions.html": {},
            "overview.html": {},
          },
        },
      ],
      [
        "internal",
        {
          _index: 113,
          title: {},
          body: {
            "controllers/AuthController.html": {},
            "controllers/UserController.html": {},
          },
        },
      ],
      [
        "internalcomment",
        { _index: 370, title: {}, body: { "classes/UserEntity.html": {} } },
      ],
      [
        "isdevelopment",
        { _index: 217, title: {}, body: { "classes/ConfigService.html": {} } },
      ],
      [
        "isenum(readinglistkind)@isdefined",
        { _index: 246, title: {}, body: { "classes/CreateReadingListDto.html": {} } },
      ],
      ["isn't", { _index: 418, title: {}, body: { "contributing.html": {} } }],
      [
        "isproduction",
        { _index: 218, title: {}, body: { "classes/ConfigService.html": {} } },
      ],
      [
        "isstring()@isdefined()@minlength(3",
        { _index: 247, title: {}, body: { "classes/CreateReadingListDto.html": {} } },
      ],
      [
        "isstring()@isoptional()@minlength(20",
        { _index: 241, title: {}, body: { "classes/CreateReadingListDto.html": {} } },
      ],
      [
        "isstring({each",
        { _index: 239, title: {}, body: { "classes/CreateReadingListDto.html": {} } },
      ],
      [
        "issue",
        { _index: 456, title: {}, body: { "contributing.html": {}, "index.html": {} } },
      ],
      [
        "issues",
        { _index: 439, title: {}, body: { "contributing.html": {}, "index.html": {} } },
      ],
      ["istest", { _index: 219, title: {}, body: { "classes/ConfigService.html": {} } }],
      ["it'd", { _index: 474, title: {}, body: { "contributing.html": {} } }],
      [
        "it's",
        { _index: 421, title: {}, body: { "contributing.html": {}, "index.html": {} } },
      ],
      ["jest", { _index: 747, title: {}, body: { "index.html": {} } }],
      ["job", { _index: 682, title: {}, body: { "index.html": {} } }],
      [
        "jwt",
        {
          _index: 157,
          title: {},
          body: { "interfaces/AuthOptions.html": {}, "dependencies.html": {} },
        },
      ],
      [
        "jwtauthguard",
        {
          _index: 298,
          title: { "injectables/JwtAuthGuard.html": {} },
          body: { "injectables/JwtAuthGuard.html": {}, "coverage.html": {} },
        },
      ],
      [
        "jwtsecretkey",
        { _index: 148, title: {}, body: { "interfaces/AuthOptions.html": {} } },
      ],
      [
        "jwtservice",
        { _index: 191, title: {}, body: { "injectables/AuthService.html": {} } },
      ],
      [
        "jwtstrategy",
        {
          _index: 140,
          title: { "injectables/JwtStrategy.html": {} },
          body: {
            "modules/AuthModule.html": {},
            "injectables/JwtStrategy.html": {},
            "coverage.html": {},
            "overview.html": {},
          },
        },
      ],
      [
        "key",
        {
          _index: 154,
          title: {},
          body: { "interfaces/AuthOptions.html": {}, "index.html": {} },
        },
      ],
      ["keywords", { _index: 515, title: {}, body: { "contributing.html": {} } }],
      [
        "kind",
        {
          _index: 238,
          title: {},
          body: { "classes/CreateReadingListDto.html": {}, "license.html": {} },
        },
      ],
      ["known", { _index: 752, title: {}, body: { "index.html": {} } }],
      ["lastlogin", { _index: 371, title: {}, body: { "classes/UserEntity.html": {} } }],
      ["later", { _index: 692, title: {}, body: { "index.html": {} } }],
      [
        "layer",
        {
          _index: 15,
          title: {},
          body: { "interfaces/ApiOptions.html": {}, "interfaces/AuthOptions.html": {} },
        },
      ],
      ["learn", { _index: 408, title: {}, body: { "contributing.html": {} } }],
      ["leave", { _index: 707, title: {}, body: { "index.html": {} } }],
      ["length", { _index: 169, title: {}, body: { "interfaces/AuthOptions.html": {} } }],
      ["liability", { _index: 836, title: {}, body: { "license.html": {} } }],
      ["liable", { _index: 833, title: {}, body: { "license.html": {} } }],
      ["library", { _index: 422, title: {}, body: { "contributing.html": {} } }],
      [
        "license",
        {
          _index: 623,
          title: { "license.html": {} },
          body: { "index.html": {}, "license.html": {} },
        },
      ],
      ["licensed", { _index: 776, title: {}, body: { "index.html": {} } }],
      ["limitation", { _index: 800, title: {}, body: { "license.html": {} } }],
      [
        "limited",
        { _index: 424, title: {}, body: { "contributing.html": {}, "license.html": {} } },
      ],
      ["links", { _index: 626, title: {}, body: { "index.html": {} } }],
      ["list", { _index: 717, title: {}, body: { "index.html": {} } }],
      [
        "list.enum.ts",
        {
          _index: 598,
          title: {},
          body: {
            "miscellaneous/enumerations.html": {},
            "miscellaneous/typealiases.html": {},
          },
        },
      ],
      ["listen", { _index: 55, title: {}, body: { "interfaces/ApiOptions.html": {} } }],
      ["lists", { _index: 694, title: {}, body: { "index.html": {} } }],
      ["literal", { _index: 46, title: {}, body: { "interfaces/ApiOptions.html": {} } }],
      ["live", { _index: 627, title: {}, body: { "index.html": {} } }],
      [
        "localhost",
        { _index: 51, title: {}, body: { "interfaces/ApiOptions.html": {} } },
      ],
      [
        "loginwithemailandpassword",
        {
          _index: 89,
          title: {},
          body: {
            "controllers/AuthController.html": {},
            "injectables/AuthService.html": {},
          },
        },
      ],
      [
        "loginwithemailandpassword(authdto",
        { _index: 91, title: {}, body: { "controllers/AuthController.html": {} } },
      ],
      [
        "loginwithemailandpassword(r",
        { _index: 193, title: {}, body: { "injectables/AuthService.html": {} } },
      ],
      ["look", { _index: 475, title: {}, body: { "contributing.html": {} } }],
      ["lot", { _index: 643, title: {}, body: { "index.html": {} } }],
      ["lowercase", { _index: 386, title: {}, body: { "classes/UserEntity.html": {} } }],
      ["m", { _index: 508, title: {}, body: { "contributing.html": {} } }],
      [
        "make",
        { _index: 401, title: {}, body: { "contributing.html": {}, "index.html": {} } },
      ],
      ["manage", { _index: 487, title: {}, body: { "contributing.html": {} } }],
      [
        "managed",
        { _index: 147, title: {}, body: { "interfaces/AuthOptions.html": {} } },
      ],
      ["many", { _index: 755, title: {}, body: { "index.html": {} } }],
      ["match", { _index: 412, title: {}, body: { "contributing.html": {} } }],
      ["matches", { _index: 470, title: {}, body: { "contributing.html": {} } }],
      [
        "matching",
        {
          _index: 66,
          title: {},
          body: {
            "interfaces/ApiOptions.html": {},
            "modules/AppModule.html": {},
            "controllers/AuthController.html": {},
            "classes/AuthDto.html": {},
            "modules/AuthModule.html": {},
            "interfaces/AuthOptions.html": {},
            "injectables/AuthService.html": {},
            "classes/BaseEntitySchema.html": {},
            "modules/ConfigModule.html": {},
            "classes/ConfigService.html": {},
            "interfaces/ConnectionOptions.html": {},
            "classes/CreateReadingListDto.html": {},
            "classes/CreateUserDto.html": {},
            "modules/DatabaseModule.html": {},
            "injectables/DatabaseService.html": {},
            "classes/EntityRepository.html": {},
            "injectables/JwtAuthGuard.html": {},
            "injectables/JwtStrategy.html": {},
            "guards/RolesGuard.html": {},
            "interfaces/RuntimeSetismConfig.html": {},
            "interfaces/SuperadminCredentials.html": {},
            "interfaces/SwaggerOptions.html": {},
            "classes/UpdateUserDto.html": {},
            "controllers/UserController.html": {},
            "classes/UserEntity.html": {},
            "modules/UserModule.html": {},
            "injectables/UserRepository.html": {},
            "injectables/UserService.html": {},
            "contributing.html": {},
            "coverage.html": {},
            "dependencies.html": {},
            "miscellaneous/enumerations.html": {},
            "miscellaneous/functions.html": {},
            "index.html": {},
            "license.html": {},
            "modules.html": {},
            "overview.html": {},
            "miscellaneous/typealiases.html": {},
            "miscellaneous/variables.html": {},
          },
        },
      ],
      ["maxage", { _index: 32, title: {}, body: { "interfaces/ApiOptions.html": {} } }],
      ["maxlength", { _index: 385, title: {}, body: { "classes/UserEntity.html": {} } }],
      ["means", { _index: 738, title: {}, body: { "index.html": {} } }],
      ["merchantability", { _index: 825, title: {}, body: { "license.html": {} } }],
      ["merge", { _index: 803, title: {}, body: { "license.html": {} } }],
      [
        "message",
        {
          _index: 124,
          title: {},
          body: {
            "classes/AuthDto.html": {},
            "classes/CreateReadingListDto.html": {},
            "classes/CreateUserDto.html": {},
            "classes/UpdateUserDto.html": {},
          },
        },
      ],
      ["messages", { _index: 750, title: {}, body: { "index.html": {} } }],
      ["metadata", { _index: 585, title: {}, body: { "dependencies.html": {} } }],
      [
        "methods",
        {
          _index: 86,
          title: {},
          body: {
            "controllers/AuthController.html": {},
            "injectables/AuthService.html": {},
            "classes/ConfigService.html": {},
            "injectables/DatabaseService.html": {},
            "classes/EntityRepository.html": {},
            "injectables/JwtStrategy.html": {},
            "guards/RolesGuard.html": {},
            "controllers/UserController.html": {},
            "injectables/UserRepository.html": {},
            "injectables/UserService.html": {},
          },
        },
      ],
      [
        "middleware",
        {
          _index: 17,
          title: {},
          body: {
            "interfaces/ApiOptions.html": {},
            "interfaces/RuntimeSetismConfig.html": {},
            "index.html": {},
          },
        },
      ],
      ["minlength", { _index: 384, title: {}, body: { "classes/UserEntity.html": {} } }],
      [
        "miscellaneous",
        {
          _index: 593,
          title: {
            "miscellaneous/enumerations.html": {},
            "miscellaneous/functions.html": {},
            "miscellaneous/typealiases.html": {},
            "miscellaneous/variables.html": {},
          },
          body: {
            "miscellaneous/enumerations.html": {},
            "miscellaneous/functions.html": {},
            "miscellaneous/typealiases.html": {},
            "miscellaneous/variables.html": {},
          },
        },
      ],
      ["mit", { _index: 777, title: {}, body: { "index.html": {}, "license.html": {} } }],
      ["mode", { _index: 710, title: {}, body: { "index.html": {} } }],
      [
        "model",
        {
          _index: 277,
          title: {},
          body: {
            "classes/EntityRepository.html": {},
            "injectables/UserRepository.html": {},
          },
        },
      ],
      ["modify", { _index: 802, title: {}, body: { "license.html": {} } }],
      [
        "module",
        {
          _index: 67,
          title: {
            "modules/AppModule.html": {},
            "modules/AuthModule.html": {},
            "modules/ConfigModule.html": {},
            "modules/DatabaseModule.html": {},
            "modules/UserModule.html": {},
          },
          body: {},
        },
      ],
      [
        "modules",
        {
          _index: 69,
          title: { "modules.html": {} },
          body: {
            "modules/AppModule.html": {},
            "modules/AuthModule.html": {},
            "modules/ConfigModule.html": {},
            "modules/DatabaseModule.html": {},
            "modules/UserModule.html": {},
            "modules.html": {},
            "overview.html": {},
          },
        },
      ],
      ["mongodb", { _index: 723, title: {}, body: { "index.html": {} } }],
      [
        "mongoose",
        { _index: 579, title: {}, body: { "dependencies.html": {}, "index.html": {} } },
      ],
      ["more", { _index: 663, title: {}, body: { "index.html": {} } }],
      [
        "name",
        {
          _index: 105,
          title: {},
          body: {
            "controllers/AuthController.html": {},
            "injectables/AuthService.html": {},
            "classes/CreateReadingListDto.html": {},
            "classes/CreateUserDto.html": {},
            "injectables/DatabaseService.html": {},
            "classes/EntityRepository.html": {},
            "injectables/JwtStrategy.html": {},
            "guards/RolesGuard.html": {},
            "controllers/UserController.html": {},
            "injectables/UserRepository.html": {},
            "injectables/UserService.html": {},
            "miscellaneous/functions.html": {},
          },
        },
      ],
      ["nestjs", { _index: 719, title: {}, body: { "index.html": {} } }],
      ["nestjs/common", { _index: 555, title: {}, body: { "dependencies.html": {} } }],
      ["nestjs/config", { _index: 557, title: {}, body: { "dependencies.html": {} } }],
      ["nestjs/core", { _index: 559, title: {}, body: { "dependencies.html": {} } }],
      ["nestjs/jwt", { _index: 560, title: {}, body: { "dependencies.html": {} } }],
      ["nestjs/mongoose", { _index: 561, title: {}, body: { "dependencies.html": {} } }],
      ["nestjs/passport", { _index: 563, title: {}, body: { "dependencies.html": {} } }],
      ["nestjs/platform", { _index: 564, title: {}, body: { "dependencies.html": {} } }],
      ["nestjs/swagger", { _index: 565, title: {}, body: { "dependencies.html": {} } }],
      [
        "new",
        {
          _index: 339,
          title: {},
          body: {
            "classes/UpdateUserDto.html": {},
            "contributing.html": {},
            "coverage.html": {},
            "index.html": {},
          },
        },
      ],
      ["newwish", { _index: 333, title: {}, body: { "classes/UpdateUserDto.html": {} } }],
      ["node", { _index: 489, title: {}, body: { "contributing.html": {} } }],
      ["noninfringement", { _index: 829, title: {}, body: { "license.html": {} } }],
      ["notice", { _index: 816, title: {}, body: { "license.html": {} } }],
      ["npm", { _index: 488, title: {}, body: { "contributing.html": {} } }],
      ["null", { _index: 376, title: {}, body: { "classes/UserEntity.html": {} } }],
      [
        "number",
        {
          _index: 52,
          title: {},
          body: {
            "interfaces/ApiOptions.html": {},
            "interfaces/AuthOptions.html": {},
            "classes/UpdateUserDto.html": {},
          },
        },
      ],
      [
        "object",
        {
          _index: 279,
          title: {},
          body: {
            "classes/EntityRepository.html": {},
            "injectables/UserRepository.html": {},
          },
        },
      ],
      [
        "objectid",
        {
          _index: 207,
          title: {},
          body: { "classes/BaseEntitySchema.html": {}, "classes/UserEntity.html": {} },
        },
      ],
      ["obtaining", { _index: 793, title: {}, body: { "license.html": {} } }],
      ["occurrences", { _index: 678, title: {}, body: { "index.html": {} } }],
      ["ongoing", { _index: 482, title: {}, body: { "contributing.html": {} } }],
      [
        "open",
        { _index: 402, title: {}, body: { "contributing.html": {}, "index.html": {} } },
      ],
      [
        "openapiobject",
        { _index: 617, title: {}, body: { "miscellaneous/functions.html": {} } },
      ],
      ["opinion", { _index: 708, title: {}, body: { "index.html": {} } }],
      [
        "optional",
        {
          _index: 20,
          title: {},
          body: {
            "interfaces/ApiOptions.html": {},
            "controllers/AuthController.html": {},
            "interfaces/AuthOptions.html": {},
            "injectables/AuthService.html": {},
            "interfaces/ConnectionOptions.html": {},
            "classes/CreateReadingListDto.html": {},
            "injectables/DatabaseService.html": {},
            "classes/EntityRepository.html": {},
            "injectables/JwtStrategy.html": {},
            "guards/RolesGuard.html": {},
            "interfaces/SwaggerOptions.html": {},
            "classes/UpdateUserDto.html": {},
            "controllers/UserController.html": {},
            "injectables/UserRepository.html": {},
            "injectables/UserService.html": {},
            "miscellaneous/functions.html": {},
          },
        },
      ],
      [
        "options",
        {
          _index: 64,
          title: {},
          body: {
            "interfaces/ApiOptions.html": {},
            "interfaces/RuntimeSetismConfig.html": {},
          },
        },
      ],
      [
        "optionssuccessstatus",
        { _index: 34, title: {}, body: { "interfaces/ApiOptions.html": {} } },
      ],
      [
        "origin",
        {
          _index: 31,
          title: {},
          body: { "interfaces/ApiOptions.html": {}, "contributing.html": {} },
        },
      ],
      ["otherwise", { _index: 841, title: {}, body: { "license.html": {} } }],
      [
        "out",
        {
          _index: 79,
          title: {},
          body: {
            "modules/AppModule.html": {},
            "modules/AuthModule.html": {},
            "modules/ConfigModule.html": {},
            "modules/DatabaseModule.html": {},
            "modules/UserModule.html": {},
            "license.html": {},
            "overview.html": {},
          },
        },
      ],
      ["outrageous", { _index: 636, title: {}, body: { "index.html": {} } }],
      ["overall", { _index: 60, title: {}, body: { "interfaces/ApiOptions.html": {} } }],
      [
        "overview",
        { _index: 847, title: { "overview.html": {} }, body: { "overview.html": {} } },
      ],
      [
        "package",
        {
          _index: 423,
          title: { "dependencies.html": {} },
          body: { "contributing.html": {} },
        },
      ],
      ["packagesnpm", { _index: 496, title: {}, body: { "contributing.html": {} } }],
      [
        "page",
        {
          _index: 63,
          title: {},
          body: {
            "interfaces/ApiOptions.html": {},
            "interfaces/SwaggerOptions.html": {},
            "index.html": {},
          },
        },
      ],
      ["pages", { _index: 783, title: {}, body: { "index.html": {} } }],
      [
        "parameters",
        {
          _index: 104,
          title: {},
          body: {
            "controllers/AuthController.html": {},
            "injectables/AuthService.html": {},
            "injectables/DatabaseService.html": {},
            "classes/EntityRepository.html": {},
            "injectables/JwtStrategy.html": {},
            "guards/RolesGuard.html": {},
            "controllers/UserController.html": {},
            "injectables/UserRepository.html": {},
            "injectables/UserService.html": {},
            "miscellaneous/functions.html": {},
          },
        },
      ],
      ["part", { _index: 670, title: {}, body: { "index.html": {} } }],
      [
        "partial",
        {
          _index: 282,
          title: {},
          body: {
            "classes/EntityRepository.html": {},
            "injectables/UserRepository.html": {},
          },
        },
      ],
      ["participate", { _index: 757, title: {}, body: { "index.html": {} } }],
      ["particular", { _index: 827, title: {}, body: { "license.html": {} } }],
      [
        "passowrd",
        {
          _index: 131,
          title: {},
          body: { "classes/AuthDto.html": {}, "classes/CreateUserDto.html": {} },
        },
      ],
      ["passport", { _index: 581, title: {}, body: { "dependencies.html": {} } }],
      ["passportjs", { _index: 726, title: {}, body: { "index.html": {} } }],
      [
        "password",
        {
          _index: 120,
          title: {},
          body: {
            "classes/AuthDto.html": {},
            "classes/CreateUserDto.html": {},
            "interfaces/SuperadminCredentials.html": {},
            "classes/UserEntity.html": {},
          },
        },
      ],
      [
        "password123'})@isdefined({message",
        {
          _index: 129,
          title: {},
          body: { "classes/AuthDto.html": {}, "classes/CreateUserDto.html": {} },
        },
      ],
      [
        "passwords",
        { _index: 163, title: {}, body: { "interfaces/AuthOptions.html": {} } },
      ],
      ["path", { _index: 59, title: {}, body: { "interfaces/ApiOptions.html": {} } }],
      [
        "payload",
        { _index: 303, title: {}, body: { "injectables/JwtStrategy.html": {} } },
      ],
      ["pdf", { _index: 698, title: {}, body: { "index.html": {} } }],
      ["people", { _index: 644, title: {}, body: { "index.html": {} } }],
      ["pepper", { _index: 149, title: {}, body: { "interfaces/AuthOptions.html": {} } }],
      ["per", { _index: 176, title: {}, body: { "interfaces/AuthOptions.html": {} } }],
      ["performance", { _index: 683, title: {}, body: { "index.html": {} } }],
      ["permission", { _index: 788, title: {}, body: { "license.html": {} } }],
      ["permit", { _index: 810, title: {}, body: { "license.html": {} } }],
      ["person", { _index: 792, title: {}, body: { "license.html": {} } }],
      ["persons", { _index: 811, title: {}, body: { "license.html": {} } }],
      ["picking", { _index: 702, title: {}, body: { "index.html": {} } }],
      ["place", { _index: 407, title: {}, body: { "contributing.html": {} } }],
      ["planned", { _index: 480, title: {}, body: { "contributing.html": {} } }],
      ["plans", { _index: 478, title: {}, body: { "contributing.html": {} } }],
      ["please", { _index: 765, title: {}, body: { "index.html": {} } }],
      ["point", { _index: 642, title: {}, body: { "index.html": {} } }],
      ["policies", { _index: 437, title: {}, body: { "contributing.html": {} } }],
      [
        "port",
        {
          _index: 24,
          title: {},
          body: {
            "interfaces/ApiOptions.html": {},
            "interfaces/RuntimeSetismConfig.html": {},
          },
        },
      ],
      ["portions", { _index: 820, title: {}, body: { "license.html": {} } }],
      [
        "positive",
        { _index: 443, title: {}, body: { "contributing.html": {}, "index.html": {} } },
      ],
      [
        "possible",
        {
          _index: 315,
          title: {},
          body: { "interfaces/RuntimeSetismConfig.html": {}, "contributing.html": {} },
        },
      ],
      ["pr", { _index: 464, title: {}, body: { "contributing.html": {} } }],
      ["prefix", { _index: 25, title: {}, body: { "interfaces/ApiOptions.html": {} } }],
      ["prerequisites", { _index: 484, title: {}, body: { "contributing.html": {} } }],
      ["prettier", { _index: 737, title: {}, body: { "index.html": {} } }],
      ["prices", { _index: 638, title: {}, body: { "index.html": {} } }],
      [
        "private",
        {
          _index: 186,
          title: {},
          body: {
            "injectables/AuthService.html": {},
            "classes/ConfigService.html": {},
            "classes/EntityRepository.html": {},
            "injectables/UserRepository.html": {},
            "miscellaneous/enumerations.html": {},
            "index.html": {},
          },
        },
      ],
      ["product", { _index: 427, title: {}, body: { "contributing.html": {} } }],
      [
        "production",
        { _index: 600, title: {}, body: { "miscellaneous/enumerations.html": {} } },
      ],
      ["productive", { _index: 444, title: {}, body: { "contributing.html": {} } }],
      ["profile", { _index: 696, title: {}, body: { "index.html": {} } }],
      [
        "project",
        { _index: 420, title: {}, body: { "contributing.html": {}, "index.html": {} } },
      ],
      [
        "projection",
        {
          _index: 290,
          title: {},
          body: {
            "classes/EntityRepository.html": {},
            "injectables/UserRepository.html": {},
          },
        },
      ],
      [
        "promise",
        {
          _index: 284,
          title: {},
          body: {
            "classes/EntityRepository.html": {},
            "injectables/UserRepository.html": {},
          },
        },
      ],
      [
        "prop",
        {
          _index: 208,
          title: {},
          body: { "classes/BaseEntitySchema.html": {}, "classes/UserEntity.html": {} },
        },
      ],
      [
        "prop(['createreadinglistdto",
        { _index: 382, title: {}, body: { "classes/UserEntity.html": {} } },
      ],
      [
        "prop({default",
        { _index: 373, title: {}, body: { "classes/UserEntity.html": {} } },
      ],
      [
        "prop({require",
        { _index: 381, title: {}, body: { "classes/UserEntity.html": {} } },
      ],
      [
        "prop({required",
        { _index: 379, title: {}, body: { "classes/UserEntity.html": {} } },
      ],
      ["prop({type", { _index: 377, title: {}, body: { "classes/UserEntity.html": {} } }],
      [
        "properties",
        {
          _index: 19,
          title: {},
          body: {
            "interfaces/ApiOptions.html": {},
            "classes/AuthDto.html": {},
            "interfaces/AuthOptions.html": {},
            "classes/BaseEntitySchema.html": {},
            "classes/ConfigService.html": {},
            "interfaces/ConnectionOptions.html": {},
            "classes/CreateReadingListDto.html": {},
            "classes/CreateUserDto.html": {},
            "classes/EntityRepository.html": {},
            "interfaces/RuntimeSetismConfig.html": {},
            "interfaces/SuperadminCredentials.html": {},
            "interfaces/SwaggerOptions.html": {},
            "classes/UpdateUserDto.html": {},
            "classes/UserEntity.html": {},
            "injectables/UserRepository.html": {},
          },
        },
      ],
      ["proposed", { _index: 751, title: {}, body: { "index.html": {} } }],
      ["provide", { _index: 649, title: {}, body: { "index.html": {} } }],
      ["provided", { _index: 821, title: {}, body: { "license.html": {} } }],
      [
        "providers",
        {
          _index: 143,
          title: {},
          body: {
            "modules/AuthModule.html": {},
            "modules/DatabaseModule.html": {},
            "modules/UserModule.html": {},
          },
        },
      ],
      ["provides", { _index: 634, title: {}, body: { "index.html": {} } }],
      ["prs", { _index: 514, title: {}, body: { "contributing.html": {} } }],
      [
        "public",
        {
          _index: 87,
          title: {},
          body: {
            "controllers/AuthController.html": {},
            "injectables/AuthService.html": {},
            "classes/EntityRepository.html": {},
            "injectables/JwtStrategy.html": {},
            "classes/UserEntity.html": {},
            "injectables/UserRepository.html": {},
            "injectables/UserService.html": {},
            "miscellaneous/enumerations.html": {},
            "index.html": {},
          },
        },
      ],
      ["publish", { _index: 804, title: {}, body: { "license.html": {} } }],
      [
        "publisher",
        { _index: 608, title: {}, body: { "miscellaneous/enumerations.html": {} } },
      ],
      ["pull", { _index: 440, title: {}, body: { "contributing.html": {} } }],
      ["purpose", { _index: 828, title: {}, body: { "license.html": {} } }],
      ["push", { _index: 511, title: {}, body: { "contributing.html": {} } }],
      ["quick", { _index: 625, title: {}, body: { "index.html": {} } }],
      ["r", { _index: 194, title: {}, body: { "injectables/AuthService.html": {} } }],
      ["read", { _index: 618, title: {}, body: { "index.html": {} } }],
      [
        "reader",
        { _index: 607, title: {}, body: { "miscellaneous/enumerations.html": {} } },
      ],
      ["readers", { _index: 705, title: {}, body: { "index.html": {} } }],
      ["reading", { _index: 651, title: {}, body: { "index.html": {} } }],
      [
        "readinglist",
        { _index: 372, title: {}, body: { "classes/UserEntity.html": {} } },
      ],
      [
        "readinglistkind",
        {
          _index: 596,
          title: {},
          body: {
            "miscellaneous/enumerations.html": {},
            "miscellaneous/typealiases.html": {},
          },
        },
      ],
      [
        "readinglisttype",
        {
          _index: 245,
          title: {},
          body: {
            "classes/CreateReadingListDto.html": {},
            "miscellaneous/typealiases.html": {},
          },
        },
      ],
      [
        "readonly",
        {
          _index: 205,
          title: {},
          body: {
            "classes/BaseEntitySchema.html": {},
            "classes/ConfigService.html": {},
            "classes/EntityRepository.html": {},
            "classes/UserEntity.html": {},
            "injectables/UserRepository.html": {},
          },
        },
      ],
      [
        "record",
        {
          _index: 96,
          title: {},
          body: {
            "controllers/AuthController.html": {},
            "classes/EntityRepository.html": {},
            "controllers/UserController.html": {},
            "injectables/UserRepository.html": {},
          },
        },
      ],
      ["reflect", { _index: 584, title: {}, body: { "dependencies.html": {} } }],
      ["reflector", { _index: 310, title: {}, body: { "guards/RolesGuard.html": {} } }],
      [
        "refreshed",
        { _index: 172, title: {}, body: { "interfaces/AuthOptions.html": {} } },
      ],
      ["relaxed", { _index: 664, title: {}, body: { "index.html": {} } }],
      [
        "remove",
        {
          _index: 349,
          title: {},
          body: {
            "controllers/UserController.html": {},
            "injectables/UserService.html": {},
          },
        },
      ],
      [
        "remove(id",
        {
          _index: 362,
          title: {},
          body: {
            "controllers/UserController.html": {},
            "injectables/UserService.html": {},
          },
        },
      ],
      ["repo", { _index: 494, title: {}, body: { "contributing.html": {} } }],
      ["reporting", { _index: 446, title: {}, body: { "contributing.html": {} } }],
      [
        "request",
        { _index: 513, title: {}, body: { "contributing.html": {}, "index.html": {} } },
      ],
      [
        "requests",
        { _index: 441, title: {}, body: { "contributing.html": {}, "index.html": {} } },
      ],
      ["require", { _index: 485, title: {}, body: { "contributing.html": {} } }],
      [
        "required",
        {
          _index: 61,
          title: {},
          body: {
            "interfaces/ApiOptions.html": {},
            "interfaces/RuntimeSetismConfig.html": {},
            "classes/UpdateUserDto.html": {},
          },
        },
      ],
      [
        "reset",
        {
          _index: 78,
          title: {},
          body: {
            "modules/AppModule.html": {},
            "modules/AuthModule.html": {},
            "modules/ConfigModule.html": {},
            "modules/DatabaseModule.html": {},
            "modules/UserModule.html": {},
            "overview.html": {},
          },
        },
      ],
      ["respectful", { _index: 445, title: {}, body: { "contributing.html": {} } }],
      [
        "rest",
        {
          _index: 10,
          title: {},
          body: {
            "interfaces/ApiOptions.html": {},
            "interfaces/RuntimeSetismConfig.html": {},
          },
        },
      ],
      ["restriction", { _index: 799, title: {}, body: { "license.html": {} } }],
      [
        "results",
        {
          _index: 65,
          title: {},
          body: {
            "interfaces/ApiOptions.html": {},
            "modules/AppModule.html": {},
            "controllers/AuthController.html": {},
            "classes/AuthDto.html": {},
            "modules/AuthModule.html": {},
            "interfaces/AuthOptions.html": {},
            "injectables/AuthService.html": {},
            "classes/BaseEntitySchema.html": {},
            "modules/ConfigModule.html": {},
            "classes/ConfigService.html": {},
            "interfaces/ConnectionOptions.html": {},
            "classes/CreateReadingListDto.html": {},
            "classes/CreateUserDto.html": {},
            "modules/DatabaseModule.html": {},
            "injectables/DatabaseService.html": {},
            "classes/EntityRepository.html": {},
            "injectables/JwtAuthGuard.html": {},
            "injectables/JwtStrategy.html": {},
            "guards/RolesGuard.html": {},
            "interfaces/RuntimeSetismConfig.html": {},
            "interfaces/SuperadminCredentials.html": {},
            "interfaces/SwaggerOptions.html": {},
            "classes/UpdateUserDto.html": {},
            "controllers/UserController.html": {},
            "classes/UserEntity.html": {},
            "modules/UserModule.html": {},
            "injectables/UserRepository.html": {},
            "injectables/UserService.html": {},
            "contributing.html": {},
            "coverage.html": {},
            "dependencies.html": {},
            "miscellaneous/enumerations.html": {},
            "miscellaneous/functions.html": {},
            "index.html": {},
            "license.html": {},
            "modules.html": {},
            "overview.html": {},
            "miscellaneous/typealiases.html": {},
            "miscellaneous/variables.html": {},
          },
        },
      ],
      [
        "returned.'})@apibadrequestresponse({description",
        { _index: 98, title: {}, body: { "controllers/AuthController.html": {} } },
      ],
      [
        "returned.'})@apinotfoundresponse({description",
        { _index: 356, title: {}, body: { "controllers/UserController.html": {} } },
      ],
      [
        "returns",
        {
          _index: 106,
          title: {},
          body: {
            "controllers/AuthController.html": {},
            "injectables/AuthService.html": {},
            "classes/ConfigService.html": {},
            "injectables/DatabaseService.html": {},
            "classes/EntityRepository.html": {},
            "injectables/JwtStrategy.html": {},
            "guards/RolesGuard.html": {},
            "controllers/UserController.html": {},
            "injectables/UserRepository.html": {},
            "injectables/UserService.html": {},
            "miscellaneous/functions.html": {},
          },
        },
      ],
      [
        "review",
        { _index: 467, title: {}, body: { "contributing.html": {}, "index.html": {} } },
      ],
      ["reviews", { _index: 700, title: {}, body: { "index.html": {} } }],
      ["right", { _index: 685, title: {}, body: { "index.html": {} } }],
      ["rights", { _index: 801, title: {}, body: { "license.html": {} } }],
      ["rimraf", { _index: 587, title: {}, body: { "dependencies.html": {} } }],
      [
        "roadmap",
        { _index: 477, title: {}, body: { "contributing.html": {}, "index.html": {} } },
      ],
      [
        "role",
        {
          _index: 197,
          title: {},
          body: {
            "injectables/AuthService.html": {},
            "classes/UserEntity.html": {},
            "miscellaneous/enumerations.html": {},
            "miscellaneous/typealiases.html": {},
            "miscellaneous/variables.html": {},
          },
        },
      ],
      ["roles", { _index: 855, title: {}, body: { "miscellaneous/variables.html": {} } }],
      [
        "roles_key",
        {
          _index: 529,
          title: {},
          body: { "coverage.html": {}, "miscellaneous/variables.html": {} },
        },
      ],
      [
        "rolesguard",
        {
          _index: 305,
          title: { "guards/RolesGuard.html": {} },
          body: { "guards/RolesGuard.html": {}, "coverage.html": {} },
        },
      ],
      [
        "rolesguard)@get",
        { _index: 361, title: {}, body: { "controllers/UserController.html": {} } },
      ],
      [
        "roletype",
        {
          _index: 198,
          title: {},
          body: {
            "injectables/AuthService.html": {},
            "classes/UserEntity.html": {},
            "miscellaneous/typealiases.html": {},
          },
        },
      ],
      [
        "rules",
        { _index: 429, title: {}, body: { "contributing.html": {}, "index.html": {} } },
      ],
      [
        "run",
        { _index: 497, title: {}, body: { "contributing.html": {}, "index.html": {} } },
      ],
      [
        "runtimesetismconfig",
        {
          _index: 221,
          title: { "interfaces/RuntimeSetismConfig.html": {} },
          body: {
            "classes/ConfigService.html": {},
            "interfaces/RuntimeSetismConfig.html": {},
            "coverage.html": {},
          },
        },
      ],
      ["rxjs", { _index: 589, title: {}, body: { "dependencies.html": {} } }],
      ["saving", { _index: 691, title: {}, body: { "index.html": {} } }],
      [
        "schemafactory.createforclass(userentity",
        { _index: 857, title: {}, body: { "miscellaneous/variables.html": {} } },
      ],
      ["scope", { _index: 425, title: {}, body: { "contributing.html": {} } }],
      ["search", { _index: 711, title: {}, body: { "index.html": {} } }],
      ["secret", { _index: 153, title: {}, body: { "interfaces/AuthOptions.html": {} } }],
      [
        "security",
        { _index: 161, title: {}, body: { "interfaces/AuthOptions.html": {} } },
      ],
      [
        "see",
        {
          _index: 42,
          title: {},
          body: {
            "interfaces/ApiOptions.html": {},
            "contributing.html": {},
            "index.html": {},
          },
        },
      ],
      ["seen", { _index: 632, title: {}, body: { "index.html": {} } }],
      ["self", { _index: 674, title: {}, body: { "index.html": {} } }],
      ["sell", { _index: 808, title: {}, body: { "license.html": {} } }],
      ["server", { _index: 41, title: {}, body: { "interfaces/ApiOptions.html": {} } }],
      ["servernpm", { _index: 498, title: {}, body: { "contributing.html": {} } }],
      ["service", { _index: 648, title: {}, body: { "index.html": {} } }],
      ["services", { _index: 633, title: {}, body: { "index.html": {} } }],
      [
        "set",
        {
          _index: 39,
          title: {},
          body: { "interfaces/ApiOptions.html": {}, "index.html": {} },
        },
      ],
      [
        "setdefaultconfig",
        { _index: 214, title: {}, body: { "classes/ConfigService.html": {} } },
      ],
      ["setism", { _index: 9, title: {}, body: { "interfaces/ApiOptions.html": {} } }],
      [
        "setismconfig",
        { _index: 318, title: {}, body: { "interfaces/RuntimeSetismConfig.html": {} } },
      ],
      [
        "setmetadata(roles_key",
        { _index: 856, title: {}, body: { "miscellaneous/variables.html": {} } },
      ],
      ["sets", { _index: 152, title: {}, body: { "interfaces/AuthOptions.html": {} } }],
      [
        "settings",
        { _index: 320, title: {}, body: { "interfaces/RuntimeSetismConfig.html": {} } },
      ],
      ["shall", { _index: 817, title: {}, body: { "license.html": {} } }],
      ["share", { _index: 695, title: {}, body: { "index.html": {} } }],
      ["shields", { _index: 780, title: {}, body: { "index.html": {} } }],
      ["short", { _index: 516, title: {}, body: { "contributing.html": {} } }],
      ["show", { _index: 395, title: {}, body: { "injectables/UserService.html": {} } }],
      [
        "show(id",
        { _index: 396, title: {}, body: { "injectables/UserService.html": {} } },
      ],
      [
        "signupwithemailandpassword",
        {
          _index: 90,
          title: {},
          body: {
            "controllers/AuthController.html": {},
            "injectables/AuthService.html": {},
          },
        },
      ],
      [
        "signupwithemailandpassword(createuserdto",
        { _index: 108, title: {}, body: { "controllers/AuthController.html": {} } },
      ],
      [
        "signupwithemailandpassword(undefined",
        { _index: 195, title: {}, body: { "injectables/AuthService.html": {} } },
      ],
      [
        "signuser",
        { _index: 187, title: {}, body: { "injectables/AuthService.html": {} } },
      ],
      [
        "signuser(id",
        { _index: 196, title: {}, body: { "injectables/AuthService.html": {} } },
      ],
      ["software", { _index: 795, title: {}, body: { "license.html": {} } }],
      ["soon", { _index: 468, title: {}, body: { "contributing.html": {} } }],
      [
        "source",
        { _index: 403, title: {}, body: { "contributing.html": {}, "index.html": {} } },
      ],
      ["span", { _index: 175, title: {}, body: { "interfaces/AuthOptions.html": {} } }],
      ["specification", { _index: 772, title: {}, body: { "index.html": {} } }],
      ["spoken", { _index: 679, title: {}, body: { "index.html": {} } }],
      ["src", { _index: 733, title: {}, body: { "index.html": {} } }],
      [
        "src/.../config.interface.ts",
        { _index: 595, title: {}, body: { "miscellaneous/enumerations.html": {} } },
      ],
      [
        "src/.../main.ts",
        { _index: 613, title: {}, body: { "miscellaneous/functions.html": {} } },
      ],
      [
        "src/.../reading",
        {
          _index: 597,
          title: {},
          body: {
            "miscellaneous/enumerations.html": {},
            "miscellaneous/typealiases.html": {},
          },
        },
      ],
      [
        "src/.../role.decorator.ts",
        { _index: 854, title: {}, body: { "miscellaneous/variables.html": {} } },
      ],
      [
        "src/.../role.enum.ts",
        {
          _index: 599,
          title: {},
          body: {
            "miscellaneous/enumerations.html": {},
            "miscellaneous/typealiases.html": {},
          },
        },
      ],
      [
        "src/.../swagger.ts",
        { _index: 614, title: {}, body: { "miscellaneous/functions.html": {} } },
      ],
      [
        "src/.../user.entity.ts",
        {
          _index: 852,
          title: {},
          body: {
            "miscellaneous/typealiases.html": {},
            "miscellaneous/variables.html": {},
          },
        },
      ],
      [
        "src/app.module.ts",
        { _index: 80, title: {}, body: { "modules/AppModule.html": {} } },
      ],
      [
        "src/auth/auth.controller.ts",
        {
          _index: 85,
          title: {},
          body: { "controllers/AuthController.html": {}, "coverage.html": {} },
        },
      ],
      [
        "src/auth/auth.module.ts",
        { _index: 142, title: {}, body: { "modules/AuthModule.html": {} } },
      ],
      [
        "src/auth/auth.service.ts",
        {
          _index: 185,
          title: {},
          body: { "injectables/AuthService.html": {}, "coverage.html": {} },
        },
      ],
      [
        "src/auth/decorators/role.decorator.ts",
        {
          _index: 527,
          title: {},
          body: { "coverage.html": {}, "miscellaneous/variables.html": {} },
        },
      ],
      [
        "src/auth/dto/auth.dto.ts",
        {
          _index: 118,
          title: {},
          body: { "classes/AuthDto.html": {}, "coverage.html": {} },
        },
      ],
      [
        "src/auth/dto/create",
        {
          _index: 251,
          title: {},
          body: { "classes/CreateUserDto.html": {}, "coverage.html": {} },
        },
      ],
      [
        "src/auth/guards/jwt.guard.ts",
        {
          _index: 299,
          title: {},
          body: { "injectables/JwtAuthGuard.html": {}, "coverage.html": {} },
        },
      ],
      [
        "src/auth/guards/role.guard.ts",
        {
          _index: 307,
          title: {},
          body: { "guards/RolesGuard.html": {}, "coverage.html": {} },
        },
      ],
      [
        "src/auth/role.enum.ts",
        {
          _index: 604,
          title: {},
          body: {
            "miscellaneous/enumerations.html": {},
            "miscellaneous/typealiases.html": {},
          },
        },
      ],
      [
        "src/auth/strategies/jwt.strategy.ts",
        {
          _index: 300,
          title: {},
          body: { "injectables/JwtStrategy.html": {}, "coverage.html": {} },
        },
      ],
      [
        "src/config/config.interface.ts",
        {
          _index: 6,
          title: {},
          body: {
            "interfaces/ApiOptions.html": {},
            "interfaces/AuthOptions.html": {},
            "interfaces/ConnectionOptions.html": {},
            "interfaces/RuntimeSetismConfig.html": {},
            "interfaces/SuperadminCredentials.html": {},
            "interfaces/SwaggerOptions.html": {},
            "coverage.html": {},
            "miscellaneous/enumerations.html": {},
          },
        },
      ],
      [
        "src/config/config.module.ts",
        { _index: 211, title: {}, body: { "modules/ConfigModule.html": {} } },
      ],
      [
        "src/config/config.service.ts",
        {
          _index: 212,
          title: {},
          body: { "classes/ConfigService.html": {}, "coverage.html": {} },
        },
      ],
      [
        "src/db/base.schema.ts",
        {
          _index: 204,
          title: {},
          body: { "classes/BaseEntitySchema.html": {}, "coverage.html": {} },
        },
      ],
      [
        "src/db/db.module.ts",
        { _index: 263, title: {}, body: { "modules/DatabaseModule.html": {} } },
      ],
      [
        "src/db/db.service.ts",
        {
          _index: 264,
          title: {},
          body: { "injectables/DatabaseService.html": {}, "coverage.html": {} },
        },
      ],
      [
        "src/db/entity.repository.ts",
        {
          _index: 268,
          title: {},
          body: { "classes/EntityRepository.html": {}, "coverage.html": {} },
        },
      ],
      [
        "src/main.ts",
        {
          _index: 545,
          title: {},
          body: { "coverage.html": {}, "miscellaneous/functions.html": {} },
        },
      ],
      [
        "src/swagger.ts",
        {
          _index: 548,
          title: {},
          body: { "coverage.html": {}, "miscellaneous/functions.html": {} },
        },
      ],
      [
        "src/user/dto/readinglist",
        {
          _index: 235,
          title: {},
          body: { "classes/CreateReadingListDto.html": {}, "coverage.html": {} },
        },
      ],
      [
        "src/user/dto/update",
        {
          _index: 329,
          title: {},
          body: { "classes/UpdateUserDto.html": {}, "coverage.html": {} },
        },
      ],
      [
        "src/user/models/user.entity.ts",
        {
          _index: 367,
          title: {},
          body: {
            "classes/UserEntity.html": {},
            "coverage.html": {},
            "miscellaneous/typealiases.html": {},
            "miscellaneous/variables.html": {},
          },
        },
      ],
      [
        "src/user/models/user.repository.ts",
        {
          _index: 391,
          title: {},
          body: { "injectables/UserRepository.html": {}, "coverage.html": {} },
        },
      ],
      [
        "src/user/reading",
        {
          _index: 602,
          title: {},
          body: {
            "miscellaneous/enumerations.html": {},
            "miscellaneous/typealiases.html": {},
          },
        },
      ],
      [
        "src/user/user.controller.ts",
        {
          _index: 347,
          title: {},
          body: { "controllers/UserController.html": {}, "coverage.html": {} },
        },
      ],
      [
        "src/user/user.module.ts",
        { _index: 390, title: {}, body: { "modules/UserModule.html": {} } },
      ],
      [
        "src/user/user.service.ts",
        {
          _index: 394,
          title: {},
          body: { "injectables/UserService.html": {}, "coverage.html": {} },
        },
      ],
      ["standards", { _index: 415, title: {}, body: { "contributing.html": {} } }],
      [
        "started",
        {
          _index: 398,
          title: { "contributing.html": {}, "index.html": {}, "license.html": {} },
          body: { "contributing.html": {} },
        },
      ],
      ["statements", { _index: 524, title: {}, body: { "coverage.html": {} } }],
      ["stay", { _index: 442, title: {}, body: { "contributing.html": {} } }],
      ["stimulates", { _index: 669, title: {}, body: { "index.html": {} } }],
      ["stopping", { _index: 641, title: {}, body: { "index.html": {} } }],
      ["storage", { _index: 725, title: {}, body: { "index.html": {} } }],
      [
        "storeuserrecord",
        { _index: 188, title: {}, body: { "injectables/AuthService.html": {} } },
      ],
      [
        "storeuserrecord(email",
        { _index: 200, title: {}, body: { "injectables/AuthService.html": {} } },
      ],
      [
        "string",
        {
          _index: 49,
          title: {},
          body: {
            "interfaces/ApiOptions.html": {},
            "classes/AuthDto.html": {},
            "interfaces/AuthOptions.html": {},
            "injectables/AuthService.html": {},
            "interfaces/ConnectionOptions.html": {},
            "classes/CreateReadingListDto.html": {},
            "classes/CreateUserDto.html": {},
            "classes/EntityRepository.html": {},
            "interfaces/SuperadminCredentials.html": {},
            "interfaces/SwaggerOptions.html": {},
            "classes/UpdateUserDto.html": {},
            "controllers/UserController.html": {},
            "classes/UserEntity.html": {},
            "injectables/UserRepository.html": {},
            "injectables/UserService.html": {},
            "miscellaneous/variables.html": {},
          },
        },
      ],
      ["structure", { _index: 728, title: {}, body: { "index.html": {} } }],
      [
        "style",
        { _index: 414, title: {}, body: { "contributing.html": {}, "index.html": {} } },
      ],
      ["subject", { _index: 813, title: {}, body: { "license.html": {} } }],
      ["sublicense", { _index: 806, title: {}, body: { "license.html": {} } }],
      ["submit", { _index: 759, title: {}, body: { "index.html": {} } }],
      ["subscription", { _index: 637, title: {}, body: { "index.html": {} } }],
      ["substantial", { _index: 819, title: {}, body: { "license.html": {} } }],
      [
        "successfully",
        {
          _index: 97,
          title: {},
          body: {
            "controllers/AuthController.html": {},
            "controllers/UserController.html": {},
          },
        },
      ],
      ["such", { _index: 405, title: {}, body: { "contributing.html": {} } }],
      ["summury", { _index: 517, title: {}, body: { "contributing.html": {} } }],
      [
        "super_admin",
        { _index: 605, title: {}, body: { "miscellaneous/enumerations.html": {} } },
      ],
      [
        "superadmin",
        {
          _index: 167,
          title: {},
          body: {
            "interfaces/AuthOptions.html": {},
            "interfaces/SuperadminCredentials.html": {},
          },
        },
      ],
      [
        "superadmincredentials",
        {
          _index: 150,
          title: { "interfaces/SuperadminCredentials.html": {} },
          body: {
            "interfaces/AuthOptions.html": {},
            "interfaces/SuperadminCredentials.html": {},
            "coverage.html": {},
          },
        },
      ],
      ["support", { _index: 844, title: {}, body: { "modules.html": {} } }],
      ["sure", { _index: 457, title: {}, body: { "contributing.html": {} } }],
      ["surveyed", { _index: 659, title: {}, body: { "index.html": {} } }],
      ["svg", { _index: 845, title: {}, body: { "modules.html": {} } }],
      ["svr.dekoo.tk", { _index: 631, title: {}, body: { "index.html": {} } }],
      [
        "swagger",
        {
          _index: 26,
          title: {},
          body: {
            "interfaces/ApiOptions.html": {},
            "dependencies.html": {},
            "index.html": {},
          },
        },
      ],
      [
        "swaggeroptions",
        {
          _index: 324,
          title: { "interfaces/SwaggerOptions.html": {} },
          body: { "interfaces/SwaggerOptions.html": {}, "coverage.html": {} },
        },
      ],
      ["system", { _index: 703, title: {}, body: { "index.html": {} } }],
      ["table", { _index: 554, title: {}, body: { "coverage.html": {} } }],
      [
        "tablesort(document.getelementbyid('coverage",
        { _index: 553, title: {}, body: { "coverage.html": {} } },
      ],
      ["technical", { _index: 452, title: {}, body: { "contributing.html": {} } }],
      ["technologies", { _index: 718, title: {}, body: { "index.html": {} } }],
      [
        "template",
        {
          _index: 45,
          title: {},
          body: { "interfaces/ApiOptions.html": {}, "contributing.html": {} },
        },
      ],
      [
        "test",
        { _index: 601, title: {}, body: { "miscellaneous/enumerations.html": {} } },
      ],
      [
        "test@email.com'})@isemail",
        {
          _index: 123,
          title: {},
          body: { "classes/AuthDto.html": {}, "classes/CreateUserDto.html": {} },
        },
      ],
      [
        "testconnectionuri",
        { _index: 230, title: {}, body: { "interfaces/ConnectionOptions.html": {} } },
      ],
      [
        "testing",
        { _index: 233, title: {}, body: { "interfaces/ConnectionOptions.html": {} } },
      ],
      ["tests", { _index: 734, title: {}, body: { "index.html": {} } }],
      ["testscode", { _index: 736, title: {}, body: { "index.html": {} } }],
      ["think", { _index: 640, title: {}, body: { "index.html": {} } }],
      ["time", { _index: 170, title: {}, body: { "interfaces/AuthOptions.html": {} } }],
      [
        "title",
        { _index: 325, title: {}, body: { "interfaces/SwaggerOptions.html": {} } },
      ],
      ["titles", { _index: 652, title: {}, body: { "index.html": {} } }],
      ["token", { _index: 159, title: {}, body: { "interfaces/AuthOptions.html": {} } }],
      ["tort", { _index: 840, title: {}, body: { "license.html": {} } }],
      ["transformer", { _index: 569, title: {}, body: { "dependencies.html": {} } }],
      ["trim", { _index: 374, title: {}, body: { "classes/UserEntity.html": {} } }],
      ["true", { _index: 375, title: {}, body: { "classes/UserEntity.html": {} } }],
      [
        "true})@isdefined",
        { _index: 240, title: {}, body: { "classes/CreateReadingListDto.html": {} } },
      ],
      [
        "type",
        {
          _index: 38,
          title: {},
          body: {
            "interfaces/ApiOptions.html": {},
            "controllers/AuthController.html": {},
            "classes/AuthDto.html": {},
            "interfaces/AuthOptions.html": {},
            "injectables/AuthService.html": {},
            "classes/BaseEntitySchema.html": {},
            "classes/ConfigService.html": {},
            "interfaces/ConnectionOptions.html": {},
            "classes/CreateReadingListDto.html": {},
            "classes/CreateUserDto.html": {},
            "injectables/DatabaseService.html": {},
            "classes/EntityRepository.html": {},
            "injectables/JwtStrategy.html": {},
            "guards/RolesGuard.html": {},
            "interfaces/RuntimeSetismConfig.html": {},
            "interfaces/SuperadminCredentials.html": {},
            "interfaces/SwaggerOptions.html": {},
            "classes/UpdateUserDto.html": {},
            "controllers/UserController.html": {},
            "classes/UserEntity.html": {},
            "injectables/UserRepository.html": {},
            "injectables/UserService.html": {},
            "coverage.html": {},
            "miscellaneous/functions.html": {},
            "miscellaneous/typealiases.html": {},
            "miscellaneous/variables.html": {},
          },
        },
      ],
      [
        "typealiases",
        { _index: 849, title: { "miscellaneous/typealiases.html": {} }, body: {} },
      ],
      ["typescript", { _index: 716, title: {}, body: { "index.html": {} } }],
      ["typical", { _index: 419, title: {}, body: { "contributing.html": {} } }],
      ["u", { _index: 512, title: {}, body: { "contributing.html": {} } }],
      ["ui", { _index: 591, title: {}, body: { "dependencies.html": {} } }],
      [
        "unauthorized",
        { _index: 101, title: {}, body: { "controllers/AuthController.html": {} } },
      ],
      ["undefined", { _index: 378, title: {}, body: { "classes/UserEntity.html": {} } }],
      [
        "under",
        { _index: 518, title: {}, body: { "contributing.html": {}, "index.html": {} } },
      ],
      ["unique", { _index: 380, title: {}, body: { "classes/UserEntity.html": {} } }],
      [
        "unknown",
        {
          _index: 107,
          title: {},
          body: {
            "controllers/AuthController.html": {},
            "injectables/AuthService.html": {},
            "injectables/JwtStrategy.html": {},
            "injectables/UserService.html": {},
          },
        },
      ],
      ["up", { _index: 746, title: {}, body: { "index.html": {} } }],
      [
        "update",
        {
          _index: 350,
          title: {},
          body: {
            "controllers/UserController.html": {},
            "injectables/UserService.html": {},
          },
        },
      ],
      [
        "update(id",
        {
          _index: 364,
          title: {},
          body: {
            "controllers/UserController.html": {},
            "injectables/UserService.html": {},
          },
        },
      ],
      [
        "updateentitydata",
        {
          _index: 295,
          title: {},
          body: {
            "classes/EntityRepository.html": {},
            "injectables/UserRepository.html": {},
          },
        },
      ],
      [
        "updatequery",
        {
          _index: 296,
          title: {},
          body: {
            "classes/EntityRepository.html": {},
            "injectables/UserRepository.html": {},
          },
        },
      ],
      [
        "updateuserdto",
        {
          _index: 328,
          title: { "classes/UpdateUserDto.html": {} },
          body: {
            "classes/UpdateUserDto.html": {},
            "controllers/UserController.html": {},
            "injectables/UserService.html": {},
            "coverage.html": {},
          },
        },
      ],
      ["upvote", { _index: 770, title: {}, body: { "index.html": {} } }],
      [
        "use",
        {
          _index: 436,
          title: {},
          body: { "contributing.html": {}, "index.html": {}, "license.html": {} },
        },
      ],
      [
        "used",
        {
          _index: 57,
          title: {},
          body: {
            "interfaces/ApiOptions.html": {},
            "interfaces/AuthOptions.html": {},
            "interfaces/RuntimeSetismConfig.html": {},
            "interfaces/SuperadminCredentials.html": {},
            "contributing.html": {},
            "index.html": {},
          },
        },
      ],
      [
        "user",
        {
          _index: 128,
          title: {},
          body: {
            "classes/AuthDto.html": {},
            "classes/CreateUserDto.html": {},
            "classes/UpdateUserDto.html": {},
            "controllers/UserController.html": {},
          },
        },
      ],
      [
        "user.dto.ts",
        {
          _index: 252,
          title: {},
          body: {
            "classes/CreateUserDto.html": {},
            "classes/UpdateUserDto.html": {},
            "coverage.html": {},
          },
        },
      ],
      [
        "usercontroller",
        {
          _index: 346,
          title: { "controllers/UserController.html": {} },
          body: {
            "controllers/UserController.html": {},
            "modules/UserModule.html": {},
            "coverage.html": {},
          },
        },
      ],
      [
        "userdocument",
        { _index: 851, title: {}, body: { "miscellaneous/typealiases.html": {} } },
      ],
      [
        "userentity",
        {
          _index: 366,
          title: { "classes/UserEntity.html": {} },
          body: { "classes/UserEntity.html": {}, "coverage.html": {} },
        },
      ],
      [
        "userentityschema",
        {
          _index: 551,
          title: {},
          body: { "coverage.html": {}, "miscellaneous/variables.html": {} },
        },
      ],
      [
        "usermodel",
        { _index: 393, title: {}, body: { "injectables/UserRepository.html": {} } },
      ],
      [
        "usermodule",
        {
          _index: 76,
          title: { "modules/UserModule.html": {} },
          body: {
            "modules/AppModule.html": {},
            "modules/UserModule.html": {},
            "modules.html": {},
            "overview.html": {},
          },
        },
      ],
      [
        "username",
        {
          _index: 334,
          title: {},
          body: { "classes/UpdateUserDto.html": {}, "classes/UserEntity.html": {} },
        },
      ],
      [
        "useroles",
        {
          _index: 531,
          title: {},
          body: { "coverage.html": {}, "miscellaneous/variables.html": {} },
        },
      ],
      [
        "userrepository",
        {
          _index: 141,
          title: { "injectables/UserRepository.html": {} },
          body: {
            "modules/AuthModule.html": {},
            "injectables/AuthService.html": {},
            "modules/UserModule.html": {},
            "injectables/UserRepository.html": {},
            "injectables/UserService.html": {},
            "coverage.html": {},
            "overview.html": {},
          },
        },
      ],
      [
        "userservice",
        {
          _index: 389,
          title: { "injectables/UserService.html": {} },
          body: {
            "modules/UserModule.html": {},
            "injectables/UserService.html": {},
            "coverage.html": {},
            "overview.html": {},
          },
        },
      ],
      [
        "valid",
        {
          _index: 125,
          title: {},
          body: {
            "classes/AuthDto.html": {},
            "interfaces/AuthOptions.html": {},
            "classes/CreateUserDto.html": {},
            "classes/UpdateUserDto.html": {},
          },
        },
      ],
      [
        "validate",
        {
          _index: 215,
          title: {},
          body: { "classes/ConfigService.html": {}, "injectables/JwtStrategy.html": {} },
        },
      ],
      [
        "validate(payload",
        { _index: 302, title: {}, body: { "injectables/JwtStrategy.html": {} } },
      ],
      [
        "validating",
        { _index: 156, title: {}, body: { "interfaces/AuthOptions.html": {} } },
      ],
      [
        "validation.'})@apiconflictresponse({description",
        {
          _index: 112,
          title: {},
          body: {
            "controllers/AuthController.html": {},
            "controllers/UserController.html": {},
          },
        },
      ],
      [
        "validation.'})@apiunauthorizedresponse({description",
        { _index: 100, title: {}, body: { "controllers/AuthController.html": {} } },
      ],
      ["validator", { _index: 571, title: {}, body: { "dependencies.html": {} } }],
      [
        "value",
        {
          _index: 29,
          title: {},
          body: {
            "interfaces/ApiOptions.html": {},
            "interfaces/AuthOptions.html": {},
            "classes/EntityRepository.html": {},
            "interfaces/SuperadminCredentials.html": {},
            "injectables/UserRepository.html": {},
            "miscellaneous/enumerations.html": {},
            "miscellaneous/variables.html": {},
          },
        },
      ],
      ["variable", { _index: 528, title: {}, body: { "coverage.html": {} } }],
      [
        "variables",
        {
          _index: 853,
          title: { "miscellaneous/variables.html": {} },
          body: { "miscellaneous/variables.html": {} },
        },
      ],
      ["vendor", { _index: 730, title: {}, body: { "index.html": {} } }],
      ["vendure", { _index: 54, title: {}, body: { "interfaces/ApiOptions.html": {} } }],
      [
        "verification",
        { _index: 171, title: {}, body: { "interfaces/AuthOptions.html": {} } },
      ],
      [
        "verificationtokenduration",
        { _index: 151, title: {}, body: { "interfaces/AuthOptions.html": {} } },
      ],
      ["verify", { _index: 761, title: {}, body: { "index.html": {} } }],
      [
        "version",
        { _index: 326, title: {}, body: { "interfaces/SwaggerOptions.html": {} } },
      ],
      ["versions", { _index: 490, title: {}, body: { "contributing.html": {} } }],
      ["virtual", { _index: 635, title: {}, body: { "index.html": {} } }],
      ["volta", { _index: 486, title: {}, body: { "contributing.html": {} } }],
      [
        "want",
        { _index: 471, title: {}, body: { "contributing.html": {}, "index.html": {} } },
      ],
      ["ward", { _index: 676, title: {}, body: { "index.html": {} } }],
      ["warranties", { _index: 824, title: {}, body: { "license.html": {} } }],
      ["warranty", { _index: 822, title: {}, body: { "license.html": {} } }],
      ["ways", { _index: 756, title: {}, body: { "index.html": {} } }],
      ["we'll", { _index: 466, title: {}, body: { "contributing.html": {} } }],
      ["welcome", { _index: 411, title: {}, body: { "contributing.html": {} } }],
      [
        "well",
        {
          _index: 13,
          title: {},
          body: { "interfaces/ApiOptions.html": {}, "index.html": {} },
        },
      ],
      ["whatever", { _index: 740, title: {}, body: { "index.html": {} } }],
      ["whether", { _index: 837, title: {}, body: { "license.html": {} } }],
      ["window", { _index: 690, title: {}, body: { "index.html": {} } }],
      [
        "wishlist",
        {
          _index: 342,
          title: {},
          body: { "classes/UpdateUserDto.html": {}, "classes/UserEntity.html": {} },
        },
      ],
      ["without", { _index: 798, title: {}, body: { "license.html": {} } }],
      ["work", { _index: 483, title: {}, body: { "contributing.html": {} } }],
      ["write", { _index: 739, title: {}, body: { "index.html": {} } }],
      [
        "yes",
        {
          _index: 291,
          title: {},
          body: {
            "classes/EntityRepository.html": {},
            "injectables/UserRepository.html": {},
          },
        },
      ],
      [
        "zeit/ms",
        { _index: 177, title: {}, body: { "interfaces/AuthOptions.html": {} } },
      ],
      [
        "zoom",
        {
          _index: 77,
          title: {},
          body: {
            "modules/AppModule.html": {},
            "modules/AuthModule.html": {},
            "modules/ConfigModule.html": {},
            "modules/DatabaseModule.html": {},
            "modules/UserModule.html": {},
            "overview.html": {},
          },
        },
      ],
    ],
    pipeline: ["stemmer"],
  },
  store: {
    "interfaces/ApiOptions.html": {
      url: "interfaces/ApiOptions.html",
      title: "interface - ApiOptions",
      body: '\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  \n  ApiOptions\n\n\n\n        \n            API Info\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/config/config.interface.ts\n        \n\n\n            \n                Description\n            \n            \n                The ApiOptions define how the Setism REST APIs are exposed, as well as allowing the API layer\nto be extended with middleware.\n\n            \n\n\n        \n            Index\n            \n                \n                    \n                        \n                            Properties\n                        \n                    \n                    \n                        \n                            \n                                \n                                            Optional\n                                        \n                                            cors\n                                        \n                                \n                                \n                                            Optional\n                                        \n                                            env\n                                        \n                                \n                                \n                                            Optional\n                                        \n                                            hostname\n                                        \n                                \n                                \n                                        \n                                            port\n                                        \n                                \n                                \n                                            Optional\n                                        \n                                            prefix\n                                        \n                                \n                                \n                                            Optional\n                                        \n                                            swagger\n                                        \n                                \n                            \n                        \n                    \n                \n            \n        \n\n\n\n            \n                Properties\n                    \n                        \n                                \n                                    \n                                        \n                                        cors\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        cors:     CorsOptions\n\n                                    \n                                \n\n                                \n                                    \n                                        Default value : {\norigin: "*",\nmaxAge: 0,\noptionsSuccessStatus: 200,\nexposedHeaders: ["Authorization"]\n}\n\n                                    \n                                \n\n                                    \n                                        \n                                            Type :     CorsOptions\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                            \n                                \n                                    Set the CORS handling for the server. See the express CORS docs.\n  origin: "*",\n  maxAge: 0,\n  optionsSuccessStatus: 200,\n  exposedHeaders: ["Authorization"]\n}\n\n                                \n                            \n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        env\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        env:     template literal type\n\n                                    \n                                \n\n                                \n                                    \n                                        Default value : \'development\'\n\n                                    \n                                \n\n                                    \n                                        \n                                            Type :     template literal type\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                            \n                                \n                                    Set the environment of the server. If not set, the environment will be development.\n\n                                \n                            \n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        hostname\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        hostname:         string\n\n                                    \n                                \n\n                                \n                                    \n                                        Default value : \'\'\n\n                                    \n                                \n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                            \n                                \n                                    Set the hostname of the server. If not set, the server will be available on localhost.\n\n                                \n                            \n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        port\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        port:         number\n\n                                    \n                                \n\n                                \n                                    \n                                        Default value : 3000\n\n                                    \n                                \n\n                                    \n                                        \n                                            Type :         number\n\n                                        \n                                    \n\n\n\n\n\n                            \n                                \n                                    Which port the Vendure server should listen on.\n\n                                \n                            \n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        prefix\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        prefix:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                            \n                                \n                                    API base prefix, used for both swagger server path, and overall API path\n\n                                \n                            \n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        swagger\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        swagger:         Required\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         Required\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                            \n                                \n                                    Swagger API Documentation page options\n\n                                \n                            \n                        \n                    \n            \n    \n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching ""\n        \n    \n    \n        No results matching ""\n    \n\n',
    },
    "modules/AppModule.html": {
      url: "modules/AppModule.html",
      title: "module - AppModule",
      body: '\n                   \n\n\n\n\n    Modules\n    AppModule\n\n\n\n    \n        \n\n\n\n\n\ndependencies\n\ndependencies\n\ncluster_AppModule\n\n\n\ncluster_AppModule_imports\n\n\n\n\nAuthModule\n\nAuthModule\n\n\n\nAppModule\n\nAppModule\n\nAppModule -->\n\nAuthModule->AppModule\n\n\n\n\n\nConfigModule\n\nConfigModule\n\nAppModule -->\n\nConfigModule->AppModule\n\n\n\n\n\nDatabaseModule\n\nDatabaseModule\n\nAppModule -->\n\nDatabaseModule->AppModule\n\n\n\n\n\nUserModule\n\nUserModule\n\nAppModule -->\n\nUserModule->AppModule\n\n\n\n\n\n\n    \n    \n    \n        Zoom in\n        Reset\n        Zoom out\n    \n\n\n\n\n\n    \n        API Info\n    \n\n\n\n    \n\n        \n            File\n        \n        \n            src/app.module.ts\n        \n\n\n\n\n\n        \n            \n                \n                    Imports\n                    \n                        \n                            AuthModule\n                        \n                        \n                            ConfigModule\n                        \n                        \n                            DatabaseModule\n                        \n                        \n                            UserModule\n                        \n                    \n                \n            \n        \n\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching ""\n        \n    \n    \n        No results matching ""\n    \n\n',
    },
    "controllers/AuthController.html": {
      url: "controllers/AuthController.html",
      title: "controller - AuthController",
      body: "\n                   \n\n\n\n\n\n\n  Controllers\n  AuthController\n\n\n\n        \n            API Info\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/auth/auth.controller.ts\n        \n\n\n\n\n\n\n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    Public\n                                    Async\n                                loginWithEmailAndPassword\n                            \n                            \n                                    Public\n                                    Async\n                                signUpWithEmailAndPassword\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        Public\n                        Async\n                        loginWithEmailAndPassword\n                        \n                    \n                \n            \n            \n                \n                    \n                    loginWithEmailAndPassword(authDto: AuthDto)\n                \n            \n\n            \n                \n                    Decorators : \n                    \n                    @ApiBody({type: AuthDto})@ApiOkResponse({description: 'The record has been successfully returned.'})@ApiBadRequestResponse({description: 'The record has failed validation.'})@ApiUnauthorizedResponse({description: 'Unauthorized action.'})@ApiForbiddenResponse({description: 'Forbidden!'})@Post('signin')\n                \n            \n\n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    authDto\n                                    \n                                                AuthDto\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     unknown\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        Public\n                        Async\n                        signUpWithEmailAndPassword\n                        \n                    \n                \n            \n            \n                \n                    \n                    signUpWithEmailAndPassword(createUserDto: CreateUserDto)\n                \n            \n\n            \n                \n                    Decorators : \n                    \n                    @ApiBody({type: CreateUserDto})@ApiCreatedResponse({description: 'The record has been successfully created.'})@ApiBadRequestResponse({description: 'The record has failed validation.'})@ApiConflictResponse({description: 'The record has an internal conflict.'})@ApiForbiddenResponse({description: 'Forbidden!'})@Post('signup')\n                \n            \n\n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    createUserDto\n                                    \n                                                CreateUserDto\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     unknown\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n",
    },
    "classes/AuthDto.html": {
      url: "classes/AuthDto.html",
      title: "class - AuthDto",
      body: "\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  AuthDto\n\n\n\n        \n            API Info\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/auth/dto/auth.dto.ts\n        \n\n\n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                email\n                            \n                            \n                                password\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n\n            \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                        email\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @ApiProperty({type: 'String', description: 'Email address', default: 'test@email.com'})@IsEmail({}, {message: 'Email address must be a valid email!'})@IsDefined({message: 'Email address must not be empty!'})\n                        \n                    \n                \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        password\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @ApiProperty({type: 'String', description: 'User password', default: 'password123'})@IsDefined({message: 'Password must not be empty!'})@MinLength(6, {message: 'Passowrd must have at least 6 characters!'})@MaxLength(32, {message: 'Password must be at most 32 characters!'})\n                        \n                    \n                \n\n\n        \n    \n\n\n\n\n\n\n\n\n    \n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n",
    },
    "modules/AuthModule.html": {
      url: "modules/AuthModule.html",
      title: "module - AuthModule",
      body: '\n                   \n\n\n\n\n    Modules\n    AuthModule\n\n\n\n    \n        \n\n\n\n\n\ndependencies\n\ndependencies\n\ncluster_AuthModule\n\n\n\ncluster_AuthModule_exports\n\n\n\ncluster_AuthModule_providers\n\n\n\n\nAuthService \n\nAuthService \n\n\n\nAuthModule\n\nAuthModule\n\nAuthService  -->\n\nAuthModule->AuthService \n\n\n\n\n\nAuthService\n\nAuthService\n\nAuthModule -->\n\nAuthService->AuthModule\n\n\n\n\n\nJwtStrategy\n\nJwtStrategy\n\nAuthModule -->\n\nJwtStrategy->AuthModule\n\n\n\n\n\nUserRepository\n\nUserRepository\n\nAuthModule -->\n\nUserRepository->AuthModule\n\n\n\n\n\n\n    \n    \n    \n        Zoom in\n        Reset\n        Zoom out\n    \n\n\n\n\n\n    \n        API Info\n    \n\n\n\n    \n\n        \n            File\n        \n        \n            src/auth/auth.module.ts\n        \n\n\n\n\n\n        \n            \n                \n                    Providers\n                    \n                        \n                            AuthService\n                        \n                        \n                            JwtStrategy\n                        \n                        \n                            UserRepository\n                        \n                    \n                \n                \n                    Controllers\n                    \n                        \n                            AuthController\n                        \n                    \n                \n                \n                    Exports\n                    \n                        \n                            AuthService\n                        \n                    \n                \n            \n        \n\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching ""\n        \n    \n    \n        No results matching ""\n    \n\n',
    },
    "interfaces/AuthOptions.html": {
      url: "interfaces/AuthOptions.html",
      title: "interface - AuthOptions",
      body: "\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  \n  AuthOptions\n\n\n\n        \n            API Info\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/config/config.interface.ts\n        \n\n\n            \n                Description\n            \n            \n                The AuthOptions define how authentication and authorization is managed.\n\n            \n\n\n        \n            Index\n            \n                \n                    \n                        \n                            Properties\n                        \n                    \n                    \n                        \n                            \n                                \n                                            Optional\n                                        \n                                            jwtSecretKey\n                                        \n                                \n                                \n                                            Optional\n                                        \n                                            pepper\n                                        \n                                \n                                \n                                            Optional\n                                        \n                                            superadminCredentials\n                                        \n                                \n                                \n                                            Optional\n                                        \n                                            verificationTokenDuration\n                                        \n                                \n                            \n                        \n                    \n                \n            \n        \n\n\n\n            \n                Properties\n                    \n                        \n                                \n                                    \n                                        \n                                        jwtSecretKey\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        jwtSecretKey:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                            \n                                \n                                    Sets the secret key for decoding and validating a JWT access token\n\n                                \n                            \n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        pepper\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        pepper:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                            \n                                \n                                    Extra security layer for hashing passwords\n\n                                \n                            \n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        superadminCredentials\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        superadminCredentials:         SuperadminCredentials\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         SuperadminCredentials\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                            \n                                \n                                    Configures the credentials to be used to create a superadmin\n\n                                \n                            \n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        verificationTokenDuration\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        verificationTokenDuration:     string | number\n\n                                    \n                                \n\n                                \n                                    \n                                        Default value : '7d'\n\n                                    \n                                \n\n                                    \n                                        \n                                            Type :     string | number\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                            \n                                \n                                    Sets the length of time that a verification token is valid for, after which the verification token must be refreshed.\nExpressed as a string describing a time span per\nzeit/ms.  Eg: 60, '2 days', '10h', '7d'\n\n                                \n                            \n                        \n                    \n            \n    \n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n",
    },
    "injectables/AuthService.html": {
      url: "injectables/AuthService.html",
      title: "injectable - AuthService",
      body: '\n                   \n\n\n\n\n\n\n\n\n  Injectables\n  AuthService\n\n\n\n        \n            API Info\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/auth/auth.service.ts\n        \n\n\n\n\n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    Public\n                                    Async\n                                loginWithEmailAndPassword\n                            \n                            \n                                    Public\n                                    Async\n                                signUpWithEmailAndPassword\n                            \n                            \n                                    Private\n                                signUser\n                            \n                            \n                                    Private\n                                    Async\n                                storeUserRecord\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(userRepository: UserRepository, jwtService: JwtService, configService: ConfigService)\n                    \n                \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        userRepository\n                                                  \n                                                        \n                                                                        UserRepository\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        jwtService\n                                                  \n                                                        \n                                                                    JwtService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        configService\n                                                  \n                                                        \n                                                                        ConfigService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        Public\n                        Async\n                        loginWithEmailAndPassword\n                        \n                    \n                \n            \n            \n                \n                    \n                    loginWithEmailAndPassword(r: AuthDto)\n                \n            \n\n\n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    r\n                                    \n                                                AuthDto\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     unknown\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        Public\n                        Async\n                        signUpWithEmailAndPassword\n                        \n                    \n                \n            \n            \n                \n                    \n                    signUpWithEmailAndPassword(undefined: CreateUserDto)\n                \n            \n\n\n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    \n                                                CreateUserDto\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     unknown\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        Private\n                        signUser\n                        \n                    \n                \n            \n            \n                \n                    \n                    signUser(id: string, role: RoleType)\n                \n            \n\n\n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    id\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    role\n                                    \n                                                RoleType\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         any\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        Private\n                        Async\n                        storeUserRecord\n                        \n                    \n                \n            \n            \n                \n                    \n                    storeUserRecord(email: string, hash: string, fullName: string)\n                \n            \n\n\n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    email\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    hash\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    fullName\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     unknown\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching ""\n        \n    \n    \n        No results matching ""\n    \n\n',
    },
    "classes/BaseEntitySchema.html": {
      url: "classes/BaseEntitySchema.html",
      title: "class - BaseEntitySchema",
      body: '\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  BaseEntitySchema\n\n\n\n        \n            API Info\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/db/base.schema.ts\n        \n\n\n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Readonly\n                                _id\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n\n            \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                            Readonly\n                        _id\n                        \n                    \n                \n            \n                \n                    \n                        Type :     ObjectID\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @Prop()\n                        \n                    \n                \n\n\n        \n    \n\n\n\n\n\n\n\n\n    \n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching ""\n        \n    \n    \n        No results matching ""\n    \n\n',
    },
    "modules/ConfigModule.html": {
      url: "modules/ConfigModule.html",
      title: "module - ConfigModule",
      body: '\n                   \n\n\n\n\n    Modules\n    ConfigModule\n\n\n\n    \n        \n\n\n\n\n\ndependencies\n\ndependencies\n\ncluster_ConfigModule\n\n\n\ncluster_ConfigModule_exports\n\n\n\n\nConfigService \n\nConfigService \n\n\n\nConfigModule\n\nConfigModule\n\nConfigService  -->\n\nConfigModule->ConfigService \n\n\n\n\n\n\n    \n    \n    \n        Zoom in\n        Reset\n        Zoom out\n    \n\n\n\n\n\n    \n        API Info\n    \n\n\n\n    \n\n        \n            File\n        \n        \n            src/config/config.module.ts\n        \n\n\n\n\n\n        \n            \n                \n                    Exports\n                    \n                        \n                            ConfigService\n                        \n                    \n                \n            \n        \n\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching ""\n        \n    \n    \n        No results matching ""\n    \n\n',
    },
    "classes/ConfigService.html": {
      url: "classes/ConfigService.html",
      title: "class - ConfigService",
      body: '\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  ConfigService\n\n\n\n        \n            API Info\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/config/config.service.ts\n        \n\n\n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Private\n                                    Readonly\n                                config\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    Private\n                                setDefaultConfig\n                            \n                            \n                                    Private\n                                validate\n                            \n                        \n                    \n                \n\n\n\n\n\n                    \n                        \n                            Accessors\n                        \n                    \n                    \n                        \n                            \n                                \n                                    isDevelopment\n                                \n                                \n                                    isProduction\n                                \n                                \n                                    isTest\n                                \n                                \n                                    apiOptions\n                                \n                                \n                                    authOptions\n                                \n                                \n                                    dbOptions\n                                \n                            \n                        \n                    \n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor()\n                    \n                \n\n            \n        \n\n\n            \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                            Private\n                            Readonly\n                        config\n                        \n                    \n                \n            \n                \n                    \n                        Type :         RuntimeSetismConfig\n\n                    \n                \n\n\n        \n    \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        Private\n                        setDefaultConfig\n                        \n                    \n                \n            \n            \n                \n                    \n                    setDefaultConfig()\n                \n            \n\n\n\n\n            \n                \n\n                    \n                        Returns :         RuntimeSetismConfig\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        Private\n                        validate\n                        \n                    \n                \n            \n            \n                \n                    \n                    validate()\n                \n            \n\n\n\n\n            \n                \n\n                    \n                        Returns :         any\n\n                    \n                \n            \n        \n    \n\n\n\n\n\n\n            \n    \n        Accessors\n    \n        \n            \n                \n                    \n                        \n                        isDevelopment\n                    \n                \n\n                \n                    \n                        getisDevelopment()\n                    \n                \n\n            \n        \n        \n            \n                \n                    \n                        \n                        isProduction\n                    \n                \n\n                \n                    \n                        getisProduction()\n                    \n                \n\n            \n        \n        \n            \n                \n                    \n                        \n                        isTest\n                    \n                \n\n                \n                    \n                        getisTest()\n                    \n                \n\n            \n        \n        \n            \n                \n                    \n                        \n                        apiOptions\n                    \n                \n\n                \n                    \n                        getapiOptions()\n                    \n                \n\n            \n        \n        \n            \n                \n                    \n                        \n                        authOptions\n                    \n                \n\n                \n                    \n                        getauthOptions()\n                    \n                \n\n            \n        \n        \n            \n                \n                    \n                        \n                        dbOptions\n                    \n                \n\n                \n                    \n                        getdbOptions()\n                    \n                \n\n            \n        \n\n    \n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching ""\n        \n    \n    \n        No results matching ""\n    \n\n',
    },
    "interfaces/ConnectionOptions.html": {
      url: "interfaces/ConnectionOptions.html",
      title: "interface - ConnectionOptions",
      body: '\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  \n  ConnectionOptions\n\n\n\n        \n            API Info\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/config/config.interface.ts\n        \n\n\n\n\n        \n            Index\n            \n                \n                    \n                        \n                            Properties\n                        \n                    \n                    \n                        \n                            \n                                \n                                            Optional\n                                        \n                                            connectionUri\n                                        \n                                \n                                \n                                            Optional\n                                        \n                                            testConnectionUri\n                                        \n                                \n                            \n                        \n                    \n                \n            \n        \n\n\n\n            \n                Properties\n                    \n                        \n                                \n                                    \n                                        \n                                        connectionUri\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        connectionUri:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                            \n                                \n                                    Database connection string\n\n                                \n                            \n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        testConnectionUri\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        testConnectionUri:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                            \n                                \n                                    Database connection string for testing env\n\n                                \n                            \n                        \n                    \n            \n    \n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching ""\n        \n    \n    \n        No results matching ""\n    \n\n',
    },
    "classes/CreateReadingListDto.html": {
      url: "classes/CreateReadingListDto.html",
      title: "class - CreateReadingListDto",
      body: "\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  CreateReadingListDto\n\n\n\n        \n            API Info\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/user/dto/readingList-create.dto.ts\n        \n\n\n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                books\n                            \n                            \n                                    Optional\n                                description\n                            \n                            \n                                kind\n                            \n                            \n                                name\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n\n            \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                        books\n                        \n                    \n                \n            \n                \n                    \n                        Type :     string[]\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @IsString({each: true})@IsDefined()\n                        \n                    \n                \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Optional\n                        description\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @IsString()@IsOptional()@MinLength(20, {message: 'Name must have at least 20 characters'})@MaxLength(1024, {message: 'Name must have at most 1024 characters'})\n                        \n                    \n                \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        kind\n                        \n                    \n                \n            \n                \n                    \n                        Type :         ReadingListType\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @IsEnum(ReadingListKind)@IsDefined()\n                        \n                    \n                \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        name\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @IsString()@IsDefined()@MinLength(3, {message: 'Name must have at least 3 characters'})@MaxLength(54, {message: 'Name must have at most 54 characters'})\n                        \n                    \n                \n\n\n        \n    \n\n\n\n\n\n\n\n\n    \n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n",
    },
    "classes/CreateUserDto.html": {
      url: "classes/CreateUserDto.html",
      title: "class - CreateUserDto",
      body: "\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  CreateUserDto\n\n\n\n        \n            API Info\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/auth/dto/create-user.dto.ts\n        \n\n\n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                email\n                            \n                            \n                                fullName\n                            \n                            \n                                password\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n\n            \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                        email\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @ApiProperty({type: 'String', description: 'Email address', default: 'test@email.com'})@IsEmail({}, {message: 'Email address must be a valid email!'})@IsDefined({message: 'Email address must not be empty!'})\n                        \n                    \n                \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        fullName\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @ApiProperty({type: 'String', description: 'User full name', default: 'Api Fullname'})@IsDefined({message: 'Name must not be empty!'})@MinLength(4, {message: 'Name must be at least 4 characters!'})@MaxLength(26, {message: 'Name must be at most 26 characters!'})\n                        \n                    \n                \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        password\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @ApiProperty({type: 'String', description: 'User password', default: 'password123'})@IsDefined({message: 'Password must not be empty!'})@MinLength(6, {message: 'Passowrd must have at least 6 characters!'})@MaxLength(32, {message: 'Password must be at most 32 characters!'})\n                        \n                    \n                \n\n\n        \n    \n\n\n\n\n\n\n\n\n    \n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n",
    },
    "modules/DatabaseModule.html": {
      url: "modules/DatabaseModule.html",
      title: "module - DatabaseModule",
      body: '\n                   \n\n\n\n\n    Modules\n    DatabaseModule\n\n\n\n    \n        \n\n\n\n\n\ndependencies\n\ndependencies\n\ncluster_DatabaseModule\n\n\n\ncluster_DatabaseModule_exports\n\n\n\ncluster_DatabaseModule_providers\n\n\n\n\nDatabaseService \n\nDatabaseService \n\n\n\nDatabaseModule\n\nDatabaseModule\n\nDatabaseService  -->\n\nDatabaseModule->DatabaseService \n\n\n\n\n\nDatabaseService\n\nDatabaseService\n\nDatabaseModule -->\n\nDatabaseService->DatabaseModule\n\n\n\n\n\n\n    \n    \n    \n        Zoom in\n        Reset\n        Zoom out\n    \n\n\n\n\n\n    \n        API Info\n    \n\n\n\n    \n\n        \n            File\n        \n        \n            src/db/db.module.ts\n        \n\n\n\n\n\n        \n            \n                \n                    Providers\n                    \n                        \n                            DatabaseService\n                        \n                    \n                \n                \n                    Exports\n                    \n                        \n                            DatabaseService\n                        \n                    \n                \n            \n        \n\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching ""\n        \n    \n    \n        No results matching ""\n    \n\n',
    },
    "injectables/DatabaseService.html": {
      url: "injectables/DatabaseService.html",
      title: "injectable - DatabaseService",
      body: '\n                   \n\n\n\n\n\n\n\n\n  Injectables\n  DatabaseService\n\n\n\n        \n            API Info\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/db/db.service.ts\n        \n\n\n\n\n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                getDbHandle\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(connection: Connection)\n                    \n                \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        connection\n                                                  \n                                                        \n                                                                    Connection\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        getDbHandle\n                        \n                    \n                \n            \n            \n                \ngetDbHandle()\n                \n            \n\n\n\n\n            \n                \n\n                    \n                        Returns :     Connection\n\n                    \n                \n            \n        \n    \n\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching ""\n        \n    \n    \n        No results matching ""\n    \n\n',
    },
    "classes/EntityRepository.html": {
      url: "classes/EntityRepository.html",
      title: "class - EntityRepository",
      body: '\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  EntityRepository\n\n\n\n        \n            API Info\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/db/entity.repository.ts\n        \n\n\n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Private\n                                    Readonly\n                                baseProjection\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    Public\n                                    Async\n                                create\n                            \n                            \n                                    Public\n                                    Async\n                                deleteMany\n                            \n                            \n                                    Public\n                                    Async\n                                deleteOne\n                            \n                            \n                                    Public\n                                    Async\n                                find\n                            \n                            \n                                    Public\n                                    Async\n                                findById\n                            \n                            \n                                    Public\n                                    Async\n                                findByIdAndUpdate\n                            \n                            \n                                    Public\n                                    Async\n                                findOne\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(entityModal: Model)\n                    \n                \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        entityModal\n                                                  \n                                                        \n                                                                    Model\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                            Private\n                            Readonly\n                        baseProjection\n                        \n                    \n                \n            \n                \n                    \n                        Type :         object\n\n                    \n                \n                \n                    \n                        Default value : { __v: 0 }\n                    \n                \n\n\n        \n    \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        Public\n                        Async\n                        create\n                        \n                    \n                \n            \n            \n                \n                    \n                    create(createEntityData: Partial)\n                \n            \n\n\n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    createEntityData\n                                    \n                                            Partial\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     Promise\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        Public\n                        Async\n                        deleteMany\n                        \n                    \n                \n            \n            \n                \n                    \n                    deleteMany(entityFilterQuery: FilterQuery)\n                \n            \n\n\n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    entityFilterQuery\n                                    \n                                            FilterQuery\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     Promise\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        Public\n                        Async\n                        deleteOne\n                        \n                    \n                \n            \n            \n                \n                    \n                    deleteOne(entityFilterQuery: FilterQuery)\n                \n            \n\n\n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    entityFilterQuery\n                                    \n                                            FilterQuery\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     Promise\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        Public\n                        Async\n                        find\n                        \n                    \n                \n            \n            \n                \n                    \n                    find(entityFilterQuery?: FilterQuery, projection?: Record)\n                \n            \n\n\n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    entityFilterQuery\n                                    \n                                            FilterQuery\n                                    \n\n                                    \n                                        Yes\n                                    \n\n\n                                \n                                \n                                    projection\n                                    \n                                            Record\n                                    \n\n                                    \n                                        Yes\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     Promise\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        Public\n                        Async\n                        findById\n                        \n                    \n                \n            \n            \n                \n                    \n                    findById(entityId: string, projection?: Record)\n                \n            \n\n\n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    entityId\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    projection\n                                    \n                                            Record\n                                    \n\n                                    \n                                        Yes\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     Promise\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        Public\n                        Async\n                        findByIdAndUpdate\n                        \n                    \n                \n            \n            \n                \n                    \n                    findByIdAndUpdate(entityId: string, updateEntityData: UpdateQuery)\n                \n            \n\n\n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    entityId\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    updateEntityData\n                                    \n                                            UpdateQuery\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     Promise\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        Public\n                        Async\n                        findOne\n                        \n                    \n                \n            \n            \n                \n                    \n                    findOne(entityFilterQuery: FilterQuery, projection?: Record)\n                \n            \n\n\n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    entityFilterQuery\n                                    \n                                            FilterQuery\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    projection\n                                    \n                                            Record\n                                    \n\n                                    \n                                        Yes\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     Promise\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n\n\n\n\n\n\n    \n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching ""\n        \n    \n    \n        No results matching ""\n    \n\n',
    },
    "injectables/JwtAuthGuard.html": {
      url: "injectables/JwtAuthGuard.html",
      title: "injectable - JwtAuthGuard",
      body: '\n                   \n\n\n\n\n\n\n\n\n  Injectables\n  JwtAuthGuard\n\n\n\n        \n            API Info\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/auth/guards/jwt.guard.ts\n        \n\n\n\n\n\n\n\n\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching ""\n        \n    \n    \n        No results matching ""\n    \n\n',
    },
    "injectables/JwtStrategy.html": {
      url: "injectables/JwtStrategy.html",
      title: "injectable - JwtStrategy",
      body: '\n                   \n\n\n\n\n\n\n\n\n  Injectables\n  JwtStrategy\n\n\n\n        \n            API Info\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/auth/strategies/jwt.strategy.ts\n        \n\n\n\n\n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    Public\n                                    Async\n                                validate\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(configService: ConfigService)\n                    \n                \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        configService\n                                                  \n                                                        \n                                                                        ConfigService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        Public\n                        Async\n                        validate\n                        \n                    \n                \n            \n            \n                \n                    \n                    validate(payload: any)\n                \n            \n\n\n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    payload\n                                    \n                                                any\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     unknown\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching ""\n        \n    \n    \n        No results matching ""\n    \n\n',
    },
    "guards/RolesGuard.html": {
      url: "guards/RolesGuard.html",
      title: "guard - RolesGuard",
      body: '\n                   \n\n\n\n\n\n\n\n\n\n\n    Guards\n    RolesGuard\n\n\n\n        \n            API Info\n        \n\n\n\n        \n            \n            File\n            \n            \n                src/auth/guards/role.guard.ts\n            \n\n\n\n\n\n\n                \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                canActivate\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n                \n    Constructor\n        \n            \n                \n                    \nconstructor(reflector: Reflector)\n                    \n                \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        reflector\n                                                  \n                                                        \n                                                                    Reflector\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n                \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        canActivate\n                        \n                    \n                \n            \n            \n                \ncanActivate(context: ExecutionContext)\n                \n            \n\n\n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    context\n                                    \n                                            ExecutionContext\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         boolean\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n\n        \n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching ""\n        \n    \n    \n        No results matching ""\n    \n\n',
    },
    "interfaces/RuntimeSetismConfig.html": {
      url: "interfaces/RuntimeSetismConfig.html",
      title: "interface - RuntimeSetismConfig",
      body: '\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  \n  RuntimeSetismConfig\n\n\n\n        \n            API Info\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/config/config.interface.ts\n        \n\n\n            \n                Description\n            \n            \n                All possible configuration options are defined by the\nSetismConfig interface.\n\n            \n\n\n        \n            Index\n            \n                \n                    \n                        \n                            Properties\n                        \n                    \n                    \n                        \n                            \n                                \n                                        \n                                            apiOptions\n                                        \n                                \n                                \n                                        \n                                            authOptions\n                                        \n                                \n                                \n                                        \n                                            dbOptions\n                                        \n                                \n                            \n                        \n                    \n                \n            \n        \n\n\n\n            \n                Properties\n                    \n                        \n                                \n                                    \n                                        \n                                        apiOptions\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        apiOptions:         Required\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         Required\n\n                                        \n                                    \n\n\n\n\n\n                            \n                                \n                                    Configuration for the REST APIs, including hostname, port, CORS settings,\nmiddleware etc.\n\n                                \n                            \n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        authOptions\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        authOptions:         Required\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         Required\n\n                                        \n                                    \n\n\n\n\n\n                            \n                                \n                                    Configuration for authorization.\n\n                                \n                            \n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        dbOptions\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        dbOptions:         Required\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         Required\n\n                                        \n                                    \n\n\n\n\n\n                            \n                                \n                                    The connection options used to connect to the database.\n\n                                \n                            \n                        \n                    \n            \n    \n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching ""\n        \n    \n    \n        No results matching ""\n    \n\n',
    },
    "interfaces/SuperadminCredentials.html": {
      url: "interfaces/SuperadminCredentials.html",
      title: "interface - SuperadminCredentials",
      body: '\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  \n  SuperadminCredentials\n\n\n\n        \n            API Info\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/config/config.interface.ts\n        \n\n\n\n\n        \n            Index\n            \n                \n                    \n                        \n                            Properties\n                        \n                    \n                    \n                        \n                            \n                                \n                                        \n                                            password\n                                        \n                                \n                            \n                        \n                    \n                \n            \n        \n\n\n\n            \n                Properties\n                    \n                        \n                                \n                                    \n                                        \n                                        password\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        password:         string\n\n                                    \n                                \n\n                                \n                                    \n                                        Default value : \'superadmin\'\n\n                                    \n                                \n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                            \n                                \n                                    The password to be used to create a superadmin account\n\n                                \n                            \n                        \n                    \n            \n    \n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching ""\n        \n    \n    \n        No results matching ""\n    \n\n',
    },
    "interfaces/SwaggerOptions.html": {
      url: "interfaces/SwaggerOptions.html",
      title: "interface - SwaggerOptions",
      body: '\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  \n  SwaggerOptions\n\n\n\n        \n            API Info\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/config/config.interface.ts\n        \n\n\n\n\n        \n            Index\n            \n                \n                    \n                        \n                            Properties\n                        \n                    \n                    \n                        \n                            \n                                \n                                            Optional\n                                        \n                                            description\n                                        \n                                \n                                \n                                            Optional\n                                        \n                                            title\n                                        \n                                \n                                \n                                            Optional\n                                        \n                                            version\n                                        \n                                \n                            \n                        \n                    \n                \n            \n        \n\n\n\n            \n                Properties\n                    \n                        \n                                \n                                    \n                                        \n                                        description\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        description:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                            \n                                \n                                    Documentation page API description\n\n                                \n                            \n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        title\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        title:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                            \n                                \n                                    Documentation page title\n\n                                \n                            \n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        version\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        version:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                            \n                                \n                                    Documentation API current version\n\n                                \n                            \n                        \n                    \n            \n    \n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching ""\n        \n    \n    \n        No results matching ""\n    \n\n',
    },
    "classes/UpdateUserDto.html": {
      url: "classes/UpdateUserDto.html",
      title: "class - UpdateUserDto",
      body: "\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  UpdateUserDto\n\n\n\n        \n            API Info\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/user/dto/update-user.dto.ts\n        \n\n\n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Optional\n                                avatar\n                            \n                            \n                                    Optional\n                                biography\n                            \n                            \n                                    Optional\n                                birthday\n                            \n                            \n                                    Optional\n                                newWish\n                            \n                            \n                                    Optional\n                                username\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n\n            \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                            Optional\n                        avatar\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @ApiProperty({type: 'string', description: 'User avatar', required: false})@IsOptional()\n                        \n                    \n                \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Optional\n                        biography\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @ApiProperty({type: 'string', description: 'User biography', required: false})@IsOptional()@MinLength(20, {message: 'Biography must be at least 20 characters!'})\n                        \n                    \n                \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Optional\n                        birthday\n                        \n                    \n                \n            \n                \n                    \n                        Type :         Date\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @ApiProperty({type: 'date', description: 'User birthday', required: false})@IsOptional()@IsDate({message: 'Birthday must be a valid date!'})\n                        \n                    \n                \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Optional\n                        newWish\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @ApiProperty({type: 'number', description: 'New book to be added to wishlist', required: false})@IsOptional()\n                        \n                    \n                \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Optional\n                        username\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @ApiProperty({type: 'string', description: 'Username', required: false})@IsOptional()@MinLength(4, {message: 'Username must be at least 4 characters!'})@MaxLength(14, {message: 'Username must be at least 12 characters!'})\n                        \n                    \n                \n\n\n        \n    \n\n\n\n\n\n\n\n\n    \n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n",
    },
    "controllers/UserController.html": {
      url: "controllers/UserController.html",
      title: "controller - UserController",
      body: "\n                   \n\n\n\n\n\n\n  Controllers\n  UserController\n\n\n\n        \n            API Info\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/user/user.controller.ts\n        \n\n\n\n\n\n\n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                createList\n                            \n                            \n                                find\n                            \n                            \n                                index\n                            \n                            \n                                remove\n                            \n                            \n                                update\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        createList\n                        \n                    \n                \n            \n            \n                \ncreateList(id: string, createReadingListDto: CreateReadingListDto)\n                \n            \n\n            \n                \n                    Decorators : \n                    \n                    @ApiBody({type: CreateReadingListDto})@ApiCreatedResponse({description: 'The record has been successfully created.'})@ApiBadRequestResponse({description: 'The record has failed validation.'})@ApiConflictResponse({description: 'The record has an internal conflict.'})@ApiForbiddenResponse({description: 'Forbidden!'})@Post(':id/list')\n                \n            \n\n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    id\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    createReadingListDto\n                                    \n                                                CreateReadingListDto\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         any\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        find\n                        \n                    \n                \n            \n            \n                \nfind(id: string)\n                \n            \n\n            \n                \n                    Decorators : \n                    \n                    @ApiOkResponse({description: 'The record has been successfully returned.'})@ApiNotFoundResponse({description: 'The record was not found.'})@ApiForbiddenResponse({description: 'Forbidden!'})@ApiParam({name: 'id', type: 'String', description: 'User id'})@Get(':id')\n                \n            \n\n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    id\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         any\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        index\n                        \n                    \n                \n            \n            \n                \nindex()\n                \n            \n\n            \n                \n                    Decorators : \n                    \n                    @ApiOkResponse({description: 'The record has been successfully returned.'})@ApiNotFoundResponse({description: 'The record was not found.'})@ApiForbiddenResponse({description: 'Forbidden!'})@UseRoles(Role.ADMIN)@UseGuards(JwtAuthGuard, RolesGuard)@Get()\n                \n            \n\n\n\n            \n                \n\n                    \n                        Returns :         any\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        remove\n                        \n                    \n                \n            \n            \n                \nremove(id: string)\n                \n            \n\n            \n                \n                    Decorators : \n                    \n                    @ApiOkResponse({description: 'The record has been successfully returned.'})@ApiNotFoundResponse({description: 'The record was not found.'})@ApiForbiddenResponse({description: 'Forbidden!'})@ApiParam({name: 'id', type: 'String', description: 'User id'})@Delete(':id')\n                \n            \n\n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    id\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         any\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        update\n                        \n                    \n                \n            \n            \n                \nupdate(id: string, updateUserDto: UpdateUserDto)\n                \n            \n\n            \n                \n                    Decorators : \n                    \n                    @ApiOkResponse({description: 'The record has been successfully returned.'})@ApiNotFoundResponse({description: 'The record was not found.'})@ApiForbiddenResponse({description: 'Forbidden!'})@ApiParam({name: 'id', type: 'String', description: 'User id'})@Patch(':id')\n                \n            \n\n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    id\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    updateUserDto\n                                    \n                                                UpdateUserDto\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         any\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n",
    },
    "classes/UserEntity.html": {
      url: "classes/UserEntity.html",
      title: "class - UserEntity",
      body: "\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  UserEntity\n\n\n\n        \n            API Info\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/user/models/user.entity.ts\n        \n\n\n\n            \n                Extends\n            \n            \n                        BaseEntitySchema\n            \n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Public\n                                avatar\n                            \n                            \n                                    Public\n                                biography\n                            \n                            \n                                    Public\n                                birthday\n                            \n                            \n                                    Public\n                                email\n                            \n                            \n                                    Public\n                                firstLogin\n                            \n                            \n                                    Public\n                                fullName\n                            \n                            \n                                    Public\n                                internalComment\n                            \n                            \n                                    Public\n                                lastLogin\n                            \n                            \n                                    Public\n                                password\n                            \n                            \n                                    Public\n                                readingList\n                            \n                            \n                                    Public\n                                role\n                            \n                            \n                                    Public\n                                username\n                            \n                            \n                                    Public\n                                wishList\n                            \n                            \n                                    Readonly\n                                _id\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n\n            \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                            Public\n                        avatar\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @Prop({default: '', trim: true})\n                        \n                    \n                \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Public\n                        biography\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @Prop({default: '', trim: true})\n                        \n                    \n                \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Public\n                        birthday\n                        \n                    \n                \n            \n                \n                    \n                        Type :     Date | null\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @Prop({type: String, default: undefined})\n                        \n                    \n                \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Public\n                        email\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @Prop({required: true, unique: true, trim: true})\n                        \n                    \n                \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Public\n                        firstLogin\n                        \n                    \n                \n            \n                \n                    \n                        Type :         Date\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @Prop({require: true})\n                        \n                    \n                \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Public\n                        fullName\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @Prop({required: true, trim: true})\n                        \n                    \n                \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Public\n                        internalComment\n                        \n                    \n                \n            \n                \n                    \n                        Type :     string | null\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @Prop({type: String, default: undefined})\n                        \n                    \n                \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Public\n                        lastLogin\n                        \n                    \n                \n            \n                \n                    \n                        Type :         Date\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @Prop({required: true})\n                        \n                    \n                \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Public\n                        password\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @Prop({required: true, trim: true})\n                        \n                    \n                \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Public\n                        readingList\n                        \n                    \n                \n            \n                \n                    \n                        Type :         CreateReadingListDto[]\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @Prop(['CreateReadingListDto'])\n                        \n                    \n                \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Public\n                        role\n                        \n                    \n                \n            \n                \n                    \n                        Type :         RoleType\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @Prop({required: true, enum: undefined, default: undefined})\n                        \n                    \n                \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Public\n                        username\n                        \n                    \n                \n            \n                \n                    \n                        Type :     string | null\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @Prop({type: String, trim: true, default: undefined, minlength: 3, maxlength: 12, lowercase: true})\n                        \n                    \n                \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Public\n                        wishList\n                        \n                    \n                \n            \n                \n                    \n                        Type :     string[]\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @Prop({type: undefined})\n                        \n                    \n                \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Readonly\n                        _id\n                        \n                    \n                \n            \n                \n                    \n                        Type :     ObjectID\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @Prop()\n                        \n                    \n                \n\n\n        \n    \n\n\n\n\n\n\n\n\n    \n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n",
    },
    "modules/UserModule.html": {
      url: "modules/UserModule.html",
      title: "module - UserModule",
      body: '\n                   \n\n\n\n\n    Modules\n    UserModule\n\n\n\n    \n        \n\n\n\n\n\ndependencies\n\ndependencies\n\ncluster_UserModule\n\n\n\ncluster_UserModule_providers\n\n\n\n\nUserRepository\n\nUserRepository\n\n\n\nUserModule\n\nUserModule\n\nUserModule -->\n\nUserRepository->UserModule\n\n\n\n\n\nUserService\n\nUserService\n\nUserModule -->\n\nUserService->UserModule\n\n\n\n\n\n\n    \n    \n    \n        Zoom in\n        Reset\n        Zoom out\n    \n\n\n\n\n\n    \n        API Info\n    \n\n\n\n    \n\n        \n            File\n        \n        \n            src/user/user.module.ts\n        \n\n\n\n\n\n        \n            \n                \n                    Providers\n                    \n                        \n                            UserRepository\n                        \n                        \n                            UserService\n                        \n                    \n                \n                \n                    Controllers\n                    \n                        \n                            UserController\n                        \n                    \n                \n            \n        \n\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching ""\n        \n    \n    \n        No results matching ""\n    \n\n',
    },
    "injectables/UserRepository.html": {
      url: "injectables/UserRepository.html",
      title: "injectable - UserRepository",
      body: '\n                   \n\n\n\n\n\n\n\n\n  Injectables\n  UserRepository\n\n\n\n        \n            API Info\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/user/models/user.repository.ts\n        \n\n\n\n            \n                Extends\n            \n            \n                        EntityRepository\n            \n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Private\n                                    Readonly\n                                baseProjection\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    Public\n                                    Async\n                                create\n                            \n                            \n                                    Public\n                                    Async\n                                deleteMany\n                            \n                            \n                                    Public\n                                    Async\n                                deleteOne\n                            \n                            \n                                    Public\n                                    Async\n                                find\n                            \n                            \n                                    Public\n                                    Async\n                                findById\n                            \n                            \n                                    Public\n                                    Async\n                                findByIdAndUpdate\n                            \n                            \n                                    Public\n                                    Async\n                                findOne\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(userModel: Model)\n                    \n                \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        userModel\n                                                  \n                                                        \n                                                                        Model\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        Public\n                        Async\n                        create\n                        \n                    \n                \n            \n            \n                \n                    \n                    create(createEntityData: Partial)\n                \n            \n\n\n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    createEntityData\n                                    \n                                            Partial\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     Promise\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        Public\n                        Async\n                        deleteMany\n                        \n                    \n                \n            \n            \n                \n                    \n                    deleteMany(entityFilterQuery: FilterQuery)\n                \n            \n\n\n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    entityFilterQuery\n                                    \n                                            FilterQuery\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     Promise\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        Public\n                        Async\n                        deleteOne\n                        \n                    \n                \n            \n            \n                \n                    \n                    deleteOne(entityFilterQuery: FilterQuery)\n                \n            \n\n\n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    entityFilterQuery\n                                    \n                                            FilterQuery\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     Promise\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        Public\n                        Async\n                        find\n                        \n                    \n                \n            \n            \n                \n                    \n                    find(entityFilterQuery?: FilterQuery, projection?: Record)\n                \n            \n\n\n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    entityFilterQuery\n                                    \n                                            FilterQuery\n                                    \n\n                                    \n                                        Yes\n                                    \n\n\n                                \n                                \n                                    projection\n                                    \n                                            Record\n                                    \n\n                                    \n                                        Yes\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     Promise\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        Public\n                        Async\n                        findById\n                        \n                    \n                \n            \n            \n                \n                    \n                    findById(entityId: string, projection?: Record)\n                \n            \n\n\n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    entityId\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    projection\n                                    \n                                            Record\n                                    \n\n                                    \n                                        Yes\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     Promise\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        Public\n                        Async\n                        findByIdAndUpdate\n                        \n                    \n                \n            \n            \n                \n                    \n                    findByIdAndUpdate(entityId: string, updateEntityData: UpdateQuery)\n                \n            \n\n\n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    entityId\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    updateEntityData\n                                    \n                                            UpdateQuery\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     Promise\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        Public\n                        Async\n                        findOne\n                        \n                    \n                \n            \n            \n                \n                    \n                    findOne(entityFilterQuery: FilterQuery, projection?: Record)\n                \n            \n\n\n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    entityFilterQuery\n                                    \n                                            FilterQuery\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    projection\n                                    \n                                            Record\n                                    \n\n                                    \n                                        Yes\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     Promise\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n\n            \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                            Private\n                            Readonly\n                        baseProjection\n                        \n                    \n                \n            \n                \n                    \n                        Type :         object\n\n                    \n                \n                \n                    \n                        Default value : { __v: 0 }\n                    \n                \n\n\n        \n    \n\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching ""\n        \n    \n    \n        No results matching ""\n    \n\n',
    },
    "injectables/UserService.html": {
      url: "injectables/UserService.html",
      title: "injectable - UserService",
      body: '\n                   \n\n\n\n\n\n\n\n\n  Injectables\n  UserService\n\n\n\n        \n            API Info\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/user/user.service.ts\n        \n\n\n\n\n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    Public\n                                    Async\n                                createList\n                            \n                            \n                                    Public\n                                    Async\n                                index\n                            \n                            \n                                    Public\n                                    Async\n                                remove\n                            \n                            \n                                    Public\n                                    Async\n                                show\n                            \n                            \n                                    Public\n                                    Async\n                                update\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(userRepository: UserRepository)\n                    \n                \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        userRepository\n                                                  \n                                                        \n                                                                        UserRepository\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        Public\n                        Async\n                        createList\n                        \n                    \n                \n            \n            \n                \n                    \n                    createList(id: string, createReadingListDto: CreateReadingListDto)\n                \n            \n\n\n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    id\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    createReadingListDto\n                                    \n                                                CreateReadingListDto\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     unknown\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        Public\n                        Async\n                        index\n                        \n                    \n                \n            \n            \n                \n                    \n                    index()\n                \n            \n\n\n\n\n            \n                \n\n                    \n                        Returns :     unknown\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        Public\n                        Async\n                        remove\n                        \n                    \n                \n            \n            \n                \n                    \n                    remove(id: string)\n                \n            \n\n\n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    id\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     unknown\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        Public\n                        Async\n                        show\n                        \n                    \n                \n            \n            \n                \n                    \n                    show(id: string)\n                \n            \n\n\n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    id\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     unknown\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        Public\n                        Async\n                        update\n                        \n                    \n                \n            \n            \n                \n                    \n                    update(id: string, updateUserDto: UpdateUserDto)\n                \n            \n\n\n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    id\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    updateUserDto\n                                    \n                                                UpdateUserDto\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     unknown\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching ""\n        \n    \n    \n        No results matching ""\n    \n\n',
    },
    "contributing.html": {
      url: "contributing.html",
      title: "getting-started - contributing",
      body: "\n                   \n\nContributing\nContributions are what make the open source community such an amazing place to learn, inspire, and create. We heartily welcome any and all contributions that match our code style standards!\nThat being said, this codebase isn't your typical open source project because it's not a library or package with a limited scope — it's an entire product.\nGround Rules\nContributions and discussion guidelines\n\nAll discussions agree to GitHub's Community Guidelines and Acceptable Use Policies. We expect discussions in issues and pull requests to stay positive, productive, and respectful.\n\nReporting a bug or discussing a feature idea\n\nIf you found a technical bug or have ideas for features we should implement, open a new issue. Make sure to follow the issue template and you should be golden! (click here to open a new issue)\n\nFixing a bug or implementing a new feature\n\nIf you find a bug and open a PR that fixes it we'll review it as soon as possible to ensure it matches our code style standards.\nIf you want to implement a new feature, open an issue first to discuss what it'd look like and to ensure it fits in our roadmap and plans for the app (see the roadmap for planned and currently ongoing work).\n\nPrerequisites\nWe require you to use volta to manage your npm and node environment versions\n\nvolta\nGetting Started\n\n\n\nGetting Started\nInstallation\n\nFork the project\nClone the repo\nInstall NPM packagesnpm install\nRun development servernpm run dev\n\nBranching\n\nCreate your Feature Branch (git checkout -b feature/#_amazing-feature)\nCommit your Changes (git commit -m \"feat: add some amazing feature\")\nPush to the Branch (git push -u origin feature/#_amazing-feature)\nOpen a Pull Request\n\nPull Requests\nWe require all new PRs to follow these guidelines. Any PR should use git keywords\n [Short summury of the PR, under 50 characters]\n [Detailed description of the PR, it can be used the initial issue description]\n\nFixes #\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n",
    },
    "coverage.html": {
      url: "coverage.html",
      title: "coverage - coverage",
      body: '\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n    Documentation coverage\n\n\n\n    \n\n\n\n    \n        \n            File\n            Type\n            Identifier\n            Statements\n        \n    \n    \n        \n            \n                \n                src/auth/auth.controller.ts\n            \n            controller\n            AuthController\n            \n                0 %\n                (0/3)\n            \n        \n        \n            \n                \n                src/auth/auth.service.ts\n            \n            injectable\n            AuthService\n            \n                0 %\n                (0/6)\n            \n        \n        \n            \n                \n                src/auth/decorators/role.decorator.ts\n            \n            variable\n            ROLES_KEY\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                src/auth/decorators/role.decorator.ts\n            \n            variable\n            UseRoles\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                src/auth/dto/auth.dto.ts\n            \n            class\n            AuthDto\n            \n                0 %\n                (0/3)\n            \n        \n        \n            \n                \n                src/auth/dto/create-user.dto.ts\n            \n            class\n            CreateUserDto\n            \n                0 %\n                (0/4)\n            \n        \n        \n            \n                \n                src/auth/guards/jwt.guard.ts\n            \n            injectable\n            JwtAuthGuard\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                src/auth/guards/role.guard.ts\n            \n            guard\n            RolesGuard\n            \n                0 %\n                (0/3)\n            \n        \n        \n            \n                \n                src/auth/strategies/jwt.strategy.ts\n            \n            injectable\n            JwtStrategy\n            \n                0 %\n                (0/3)\n            \n        \n        \n            \n                \n                src/config/config.interface.ts\n            \n            interface\n            ApiOptions\n            \n                100 %\n                (7/7)\n            \n        \n        \n            \n                \n                src/config/config.interface.ts\n            \n            interface\n            AuthOptions\n            \n                100 %\n                (5/5)\n            \n        \n        \n            \n                \n                src/config/config.interface.ts\n            \n            interface\n            ConnectionOptions\n            \n                66 %\n                (2/3)\n            \n        \n        \n            \n                \n                src/config/config.interface.ts\n            \n            interface\n            RuntimeSetismConfig\n            \n                100 %\n                (4/4)\n            \n        \n        \n            \n                \n                src/config/config.interface.ts\n            \n            interface\n            SuperadminCredentials\n            \n                50 %\n                (1/2)\n            \n        \n        \n            \n                \n                src/config/config.interface.ts\n            \n            interface\n            SwaggerOptions\n            \n                75 %\n                (3/4)\n            \n        \n        \n            \n                \n                src/config/config.service.ts\n            \n            class\n            ConfigService\n            \n                0 %\n                (0/5)\n            \n        \n        \n            \n                \n                src/db/base.schema.ts\n            \n            class\n            BaseEntitySchema\n            \n                0 %\n                (0/2)\n            \n        \n        \n            \n                \n                src/db/db.service.ts\n            \n            injectable\n            DatabaseService\n            \n                0 %\n                (0/3)\n            \n        \n        \n            \n                \n                src/db/entity.repository.ts\n            \n            class\n            EntityRepository\n            \n                0 %\n                (0/10)\n            \n        \n        \n            \n                \n                src/main.ts\n            \n            function\n            bootstrap\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                src/swagger.ts\n            \n            function\n            createdocument\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                src/user/dto/readingList-create.dto.ts\n            \n            class\n            CreateReadingListDto\n            \n                0 %\n                (0/5)\n            \n        \n        \n            \n                \n                src/user/dto/update-user.dto.ts\n            \n            class\n            UpdateUserDto\n            \n                0 %\n                (0/6)\n            \n        \n        \n            \n                \n                src/user/models/user.entity.ts\n            \n            class\n            UserEntity\n            \n                0 %\n                (0/15)\n            \n        \n        \n            \n                \n                src/user/models/user.entity.ts\n            \n            variable\n            UserEntitySchema\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                src/user/models/user.repository.ts\n            \n            injectable\n            UserRepository\n            \n                0 %\n                (0/10)\n            \n        \n        \n            \n                \n                src/user/user.controller.ts\n            \n            controller\n            UserController\n            \n                0 %\n                (0/6)\n            \n        \n        \n            \n                \n                src/user/user.service.ts\n            \n            injectable\n            UserService\n            \n                0 %\n                (0/7)\n            \n        \n    \n\n\n\n\n\n    new Tablesort(document.getElementById(\'coverage-table\'));\n\n\n                   \n    \n         results matching ""\n        \n    \n    \n        No results matching ""\n    \n\n',
    },
    "dependencies.html": {
      url: "dependencies.html",
      title: "package-dependencies - dependencies",
      body: '\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n    \n        Dependencies\n    \n    \n        \n            @nestjs/common : ^8.0.0\n        \n            @nestjs/config : ^1.0.1\n        \n            @nestjs/core : ^8.0.0\n        \n            @nestjs/jwt : ^8.0.0\n        \n            @nestjs/mongoose : ^8.0.1\n        \n            @nestjs/passport : ^8.0.1\n        \n            @nestjs/platform-express : ^8.0.0\n        \n            @nestjs/swagger : ^5.0.9\n        \n            argon2 : ^0.28.2\n        \n            class-transformer : ^0.4.0\n        \n            class-validator : ^0.13.1\n        \n            csurf : ^1.11.0\n        \n            envalid : ^6.0.2\n        \n            helmet : ^4.6.0\n        \n            mongoose : ^5.13.8\n        \n            passport : ^0.4.1\n        \n            passport-jwt : ^4.0.0\n        \n            reflect-metadata : ^0.1.13\n        \n            rimraf : ^3.0.2\n        \n            rxjs : ^7.2.0\n        \n            swagger-ui-express : ^4.1.6\n    \n\n\n\n\n\n\n                   \n    \n         results matching ""\n        \n    \n    \n        No results matching ""\n    \n\n',
    },
    "miscellaneous/enumerations.html": {
      url: "miscellaneous/enumerations.html",
      title: "miscellaneous-enumerations - enumerations",
      body: '\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n  Miscellaneous\n  Enumerations\n\n\n\n    Index\n    \n        \n            \n                \n                    \n                        \n                            Environment   (src/.../config.interface.ts)\n                        \n                        \n                            ReadingListKind   (src/.../reading-list.enum.ts)\n                        \n                        \n                            Role   (src/.../role.enum.ts)\n                        \n                    \n                \n            \n        \n    \n\n\n    src/config/config.interface.ts\n    \n        \n            \n                \n                    \n                        \n                        Environment\n                    \n                \n                        \n                            \n                                 Development\n                            \n                        \n                        \n                            \n                                Value : development\n                            \n                        \n                        \n                            \n                                 Production\n                            \n                        \n                        \n                            \n                                Value : production\n                            \n                        \n                        \n                            \n                                 Test\n                            \n                        \n                        \n                            \n                                Value : test\n                            \n                        \n            \n        \n\n    src/user/reading-list.enum.ts\n    \n        \n            \n                \n                    \n                        \n                        ReadingListKind\n                    \n                \n                        \n                            \n                                 PUBLIC\n                            \n                        \n                        \n                            \n                                Value : 0\n                            \n                        \n                        \n                            \n                                 PRIVATE\n                            \n                        \n                        \n                            \n                                Value : 1\n                            \n                        \n            \n        \n\n    src/auth/role.enum.ts\n    \n        \n            \n                \n                    \n                        \n                        Role\n                    \n                \n                        \n                            \n                                 SUPER_ADMIN\n                            \n                        \n                        \n                            \n                                Value : 1\n                            \n                        \n                        \n                            \n                                 ADMIN\n                            \n                        \n                        \n                            \n                                Value : 2\n                            \n                        \n                        \n                            \n                                 READER\n                            \n                        \n                        \n                            \n                                Value : 3\n                            \n                        \n                        \n                            \n                                 PUBLISHER\n                            \n                        \n                        \n                            \n                                Value : 4\n                            \n                        \n                        \n                            \n                                 CRITIC\n                            \n                        \n                        \n                            \n                                Value : 5\n                            \n                        \n                        \n                            \n                                 AUTHOR\n                            \n                        \n                        \n                            \n                                Value : 6\n                            \n                        \n            \n        \n\n\n\n\n                   \n    \n         results matching ""\n        \n    \n    \n        No results matching ""\n    \n\n',
    },
    "miscellaneous/functions.html": {
      url: "miscellaneous/functions.html",
      title: "miscellaneous-functions - functions",
      body: '\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n  Miscellaneous\n  Functions\n\n\n\n    Index\n    \n        \n            \n                \n                    \n                        \n                            bootstrap   (src/.../main.ts)\n                        \n                        \n                            createdocument   (src/.../swagger.ts)\n                        \n                    \n                \n            \n        \n    \n\n\n    src/main.ts\n    \n        \n        \n            \n                \n                    \n                    \n                        bootstrap\n                        \n                    \n                \n            \n            \n                \nbootstrap()\n                \n            \n\n\n\n\n        \n    \n    src/swagger.ts\n    \n        \n        \n            \n                \n                    \n                    \n                        createdocument\n                        \n                    \n                \n            \n            \n                \ncreatedocument(app: INestApplication)\n                \n            \n\n\n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    app\n                                    \n                                            INestApplication\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     OpenAPIObject\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n\n\n\n                   \n    \n         results matching ""\n        \n    \n    \n        No results matching ""\n    \n\n',
    },
    "index.html": {
      url: "index.html",
      title: "getting-started - index",
      body: '\n                   \n\n\n  \n  \n    \n  \n  \n  Read anytime, anywhere.\n  \n\n\n\n  \n    \n  \n\n\n\n  About •\n  Roadmap •\n  Contributing •\n  Feedback •\n  Contributors •\n  License •\n  Acknowledgements\n\n\n\n\n\nQuick Links\n\nLive at: dekoo.tk\nBackend Docs: docs.dekoo.tk\nAPI Docs: svr.dekoo.tk\n\n\n\nAbout The Project\nWe all seen services that provides virtual books at outrageous subscription prices and at Dekoo we think that is a stopping point for a lot of people. This fact inspired us to build a service that will provide access to free reading titles along with accessible prices for anyone and everyone.\nHere\'s why:\n\n33% of people surveyed feel happier after reading.\n55% of people surveyed feel more relaxed after reading\n70% of people surveyed believe that reading has a positive impact on their careers.\nReading stimulates the part of the brain that deals with depression. Self-help books, can help ward off depressive occurrences.\nBeing well-spoken and articulate can help increase job performance and self-esteem.\n\nKey Features\n\nRead books right in your browser\nInstantly have access to a book and it\'s content from your borwser window\n\n\nSaving books for later\nCreating reading lists\nPublic and private reading lists that you can share on your profile\n\n\nDownload a book in PDF format\nRead what other people think about a book\nReviews are important in picking the right book for you, our review system allows other readers and critics to leave their opinion on the book.\n\n\nDark/Light mode\nProfile page\nSearch and fiter your favorite books\n\nBuilt With\nThe entire codebase consists in TypeScript, here is a list of technologies used:\n\nNestJs: Back-end framework\nMongoDB: Data storage\nSwagger: API Docs\nPassportJs: Authentication Middleware\n\nFolder structure\ndekoo/\n├── assets       # Vendor files\n├── docs         # Compodoc Code documentation\n├── src          # Source files\n└── tests        # E2E testsCode Style\n\nWe run Prettier on-commit, which means you can write code in whatever style you want and it will be automatically formatted according to the common style when you run git commit. We also have ESLint set up, along with Jest tests.\nWe use commitlint with config-conventional, which means all commit messages should follow conventional rules.\n\n\n\nRoadmap\nSee the open issues for a list of proposed features (and known issues).\n\n\nContributing\nAny contributions you make are greatly appreciated. There are many ways in which you can participate in this project, for example:\n\nSubmit bugs and feature requests, and help us verify as they are checked in\nReview source code changes\n\nIf you are interested in fixing issues and contributing directly to the code base,\nplease see the document How to Contribute, which covers the following:\nFeedback\n\nRequest a new feature\nUpvote feature requests\nFile an issue\n\nContributors\nThis project follows the all-contributors specification. See more details about the contributors\n\n\n\n\n  \n    Andrei Chirila💻\n  \n\n\n\n\n\n\n\n\n\nLicense\nLicensed under the MIT license. See MIT for more information.\n\n\nAcknowledgements\n\nImg Shields\nHeroku\nGithub Pages\nCompodoc\nHusky\nMongoose\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching ""\n        \n    \n    \n        No results matching ""\n    \n\n',
    },
    "license.html": {
      url: "license.html",
      title: "getting-started - license",
      body: '\n                   \n\nMIT License\nCopyright (c) 2021 Dekoo\nPermission is hereby granted, free of charge, to any person obtaining a copy\nof this software and associated documentation files (the "Software"), to deal\nin the Software without restriction, including without limitation the rights\nto use, copy, modify, merge, publish, distribute, sublicense, and/or sell\ncopies of the Software, and to permit persons to whom the Software is\nfurnished to do so, subject to the following conditions:\nThe above copyright notice and this permission notice shall be included in all\ncopies or substantial portions of the Software.\nTHE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR\nIMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,\nFITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE\nAUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER\nLIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,\nOUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE\nSOFTWARE.\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching ""\n        \n    \n    \n        No results matching ""\n    \n\n',
    },
    "modules.html": {
      url: "modules.html",
      title: "modules - modules",
      body: '\n                   \n\n\n\n\n    Modules\n\n\n    \n            \n                \n                    \n                        AppModule\n                    \n                    \n                                \n                                    \n                                        Your browser does not support SVG\n                                    \n                                \n                        \n                            Browse\n                        \n                    \n                \n            \n            \n                \n                    \n                        AuthModule\n                    \n                    \n                                \n                                    \n                                        Your browser does not support SVG\n                                    \n                                \n                        \n                            Browse\n                        \n                    \n                \n            \n            \n                \n                    \n                        ConfigModule\n                    \n                    \n                                \n                                    \n                                        Your browser does not support SVG\n                                    \n                                \n                        \n                            Browse\n                        \n                    \n                \n            \n            \n                \n                    \n                        DatabaseModule\n                    \n                    \n                                \n                                    \n                                        Your browser does not support SVG\n                                    \n                                \n                        \n                            Browse\n                        \n                    \n                \n            \n            \n                \n                    \n                        UserModule\n                    \n                    \n                                \n                                    \n                                        Your browser does not support SVG\n                                    \n                                \n                        \n                            Browse\n                        \n                    \n                \n            \n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching ""\n        \n    \n    \n        No results matching ""\n    \n\n',
    },
    "overview.html": {
      url: "overview.html",
      title: "overview - overview",
      body: '\n                   \n\n\n\n    Overview\n\n  \n\n    \n        \n\n\n\n\n\ndependencies\n\ndependencies\n\ncluster_AppModule\n\n\n\ncluster_AppModule_imports\n\n\n\ncluster_AuthModule\n\n\n\ncluster_AuthModule_exports\n\n\n\ncluster_AuthModule_providers\n\n\n\ncluster_ConfigModule\n\n\n\ncluster_ConfigModule_exports\n\n\n\ncluster_DatabaseModule\n\n\n\ncluster_DatabaseModule_exports\n\n\n\ncluster_DatabaseModule_providers\n\n\n\ncluster_UserModule\n\n\n\ncluster_UserModule_providers\n\n\n\n\nAuthModule\n\nAuthModule\n\n\n\nAppModule\n\nAppModule\n\nAppModule -->\n\nAuthModule->AppModule\n\n\n\n\n\nAuthService \n\nAuthService \n\nAuthService  -->\n\nAuthModule->AuthService \n\n\n\n\n\nConfigModule\n\nConfigModule\n\nAppModule -->\n\nConfigModule->AppModule\n\n\n\n\n\nConfigService \n\nConfigService \n\nConfigService  -->\n\nConfigModule->ConfigService \n\n\n\n\n\nDatabaseModule\n\nDatabaseModule\n\nAppModule -->\n\nDatabaseModule->AppModule\n\n\n\n\n\nDatabaseService \n\nDatabaseService \n\nDatabaseService  -->\n\nDatabaseModule->DatabaseService \n\n\n\n\n\nUserModule\n\nUserModule\n\nAppModule -->\n\nUserModule->AppModule\n\n\n\n\n\nAuthService\n\nAuthService\n\nAuthModule -->\n\nAuthService->AuthModule\n\n\n\n\n\nJwtStrategy\n\nJwtStrategy\n\nAuthModule -->\n\nJwtStrategy->AuthModule\n\n\n\n\n\nUserRepository\n\nUserRepository\n\nAuthModule -->\n\nUserRepository->AuthModule\n\n\n\nUserModule -->\n\nUserRepository->UserModule\n\n\n\n\n\nDatabaseService\n\nDatabaseService\n\nDatabaseModule -->\n\nDatabaseService->DatabaseModule\n\n\n\n\n\nUserService\n\nUserService\n\nUserModule -->\n\nUserService->UserModule\n\n\n\n\n\n\n    \n    \n    \n        Zoom in\n        Reset\n        Zoom out\n    \n\n  \n\n    \n        \n            \n                \n                    \n                    \n                        5 Modules\n                    \n                \n            \n        \n        \n            \n                \n                    \n                    2 Controllers\n                \n            \n        \n        \n            \n                \n                    \n                    6 Injectables\n                \n            \n        \n        \n            \n                \n                    \n                    8 Classes\n                \n            \n        \n        \n            \n                \n                    \n                    1 Guard\n                \n            \n        \n        \n            \n                \n                    \n                    6 Interfaces\n                \n            \n        \n    \n\n\n \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching ""\n        \n    \n    \n        No results matching ""\n    \n\n',
    },
    "miscellaneous/typealiases.html": {
      url: "miscellaneous/typealiases.html",
      title: "miscellaneous-typealiases - typealiases",
      body: '\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n  Miscellaneous\n  Type aliases\n\n\n\n    Index\n    \n        \n            \n                \n                    \n                        \n                            ReadingListType   (src/.../reading-list.enum.ts)\n                        \n                        \n                            RoleType   (src/.../role.enum.ts)\n                        \n                        \n                            UserDocument   (src/.../user.entity.ts)\n                        \n                    \n                \n            \n        \n    \n\n\n    src/user/reading-list.enum.ts\n    \n    \n        \n            \n                \n                    \n                    ReadingListType\n                \n            \n            \n                \n                             `${ReadingListKind}`\n\n                \n            \n        \n    \n    src/auth/role.enum.ts\n    \n    \n        \n            \n                \n                    \n                    RoleType\n                \n            \n            \n                \n                             `${Role}`\n\n                \n            \n        \n    \n    src/user/models/user.entity.ts\n    \n    \n        \n            \n                \n                    \n                    UserDocument\n                \n            \n            \n                \n                        \n\n                \n            \n        \n    \n\n\n\n                   \n    \n         results matching ""\n        \n    \n    \n        No results matching ""\n    \n\n',
    },
    "miscellaneous/variables.html": {
      url: "miscellaneous/variables.html",
      title: "miscellaneous-variables - variables",
      body: '\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n  Miscellaneous\n  Variables\n\n\n\n    Index\n    \n        \n            \n                \n                    \n                        \n                            ROLES_KEY   (src/.../role.decorator.ts)\n                        \n                        \n                            UserEntitySchema   (src/.../user.entity.ts)\n                        \n                        \n                            UseRoles   (src/.../role.decorator.ts)\n                        \n                    \n                \n            \n        \n    \n\n\n    src/auth/decorators/role.decorator.ts\n    \n        \n        \n            \n                \n                    \n                    \n                        ROLES_KEY\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Default value : "claim"\n                    \n                \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        UseRoles\n                        \n                    \n                \n            \n                \n                    \n                        Default value : (...roles: Role[]) => SetMetadata(ROLES_KEY, roles)\n                    \n                \n\n\n        \n    \n\n    src/user/models/user.entity.ts\n    \n        \n        \n            \n                \n                    \n                    \n                        UserEntitySchema\n                        \n                    \n                \n            \n                \n                    \n                        Default value : SchemaFactory.createForClass(UserEntity)\n                    \n                \n\n\n        \n    \n\n\n\n\n                   \n    \n         results matching ""\n        \n    \n    \n        No results matching ""\n    \n\n',
    },
  },
};
