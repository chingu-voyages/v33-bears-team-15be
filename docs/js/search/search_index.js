var COMPODOC_SEARCH_INDEX = {
    "index": {"version":"2.3.9","fields":["title","body"],"fieldVectors":[["title/interfaces/ApiOptions.html",[0,1.545,1,1.994]],["body/interfaces/ApiOptions.html",[1,2.039,2,1.126,3,0.441,4,0.2,5,0.176,6,1.039,7,0.962,8,1.888,9,2.243,10,1.888,11,1.888,12,2.243,13,2.243,14,2.243,15,1.888,16,2.243,17,1.888,18,0.224,19,0.946,20,1.508,21,4.175,22,3.474,23,3.881,24,3.881,25,4.61,26,4.175,27,3.41,28,1.977,29,2.314,30,0.026,31,3.41,32,3.41,33,2.039,34,3.41,35,3.41,36,3.41,37,2.516,38,0.624,39,4.958,40,2.243,41,5.222,42,2.243,43,1.888,44,2.243,45,3.41,46,3.41,47,2.871,48,2.871,49,1.19,50,2.243,51,2.243,52,2.516,53,2.243,54,2.243,55,2.243,56,2.243,57,1.481,58,2.243,59,3.41,60,2.243,61,2.516,62,1.655,63,1.888,64,1.888,65,0.014,66,0.014]],["title/modules/AppModule.html",[67,1.994,68,2.201]],["body/modules/AppModule.html",[3,0.333,4,0.333,5,0.293,30,0.025,65,0.02,66,0.02,68,4.339,69,1.734,70,2.272,71,3.151,72,3.151,73,3.471,74,3.471,75,3.471,76,3.471,77,2.679,78,2.045,79,2.045,80,3.743,81,3.743]],["title/controllers/AuthController.html",[82,2.46,83,2.201]],["body/controllers/AuthController.html",[3,0.285,4,0.285,5,0.251,18,0.321,20,1.141,30,0.025,38,0.493,65,0.018,66,0.018,83,2.117,84,1.918,85,2.7,86,1.759,87,2.526,88,2.978,89,3.721,90,3.721,91,3.207,92,3.025,93,2.048,94,3.721,95,3.207,96,3.775,97,3.721,98,3.207,99,3.721,100,3.207,101,3.207,102,3.207,103,3.207,104,1.759,105,1.52,106,1.635,107,2.918,108,3.207,109,3.025,110,3.207,111,2.7,112,2.7,113,2.7,114,2.7,115,3.207]],["title/classes/AuthDto.html",[92,1.994,116,1.327]],["body/classes/AuthDto.html",[3,0.314,4,0.314,5,0.276,7,2.021,18,0.353,19,1.308,28,2.021,30,0.025,38,0.526,49,1.463,65,0.019,66,0.019,92,2.108,93,2.184,117,1.512,118,2.967,119,3.9,120,3.9,121,3.477,122,4.471,123,2.967,124,3.505,125,2.326,126,2.967,127,2.967,128,2.326,129,2.967,130,2.967,131,2.967,132,2.326,133,2.967,134,2.967,135,2.326]],["title/modules/AuthModule.html",[67,1.994,73,1.994]],["body/modules/AuthModule.html",[3,0.325,4,0.325,5,0.286,30,0.025,65,0.02,66,0.02,69,1.692,70,2.236,73,3.884,77,2.636,78,1.995,79,1.995,83,2.411,84,2.184,136,3.075,137,3.075,138,3.075,139,3.847,140,3.438,141,2.664,142,3.652,143,2.695,144,2.695]],["title/interfaces/AuthOptions.html",[0,1.545,145,1.994]],["body/interfaces/AuthOptions.html",[2,1.408,3,0.25,4,0.25,5,0.22,6,1.3,7,1.203,8,2.362,15,2.362,18,0.281,19,1.116,20,1.54,28,1.203,29,1.408,30,0.025,37,2.07,38,0.573,49,1.505,52,2.968,57,1.852,65,0.016,66,0.016,125,1.852,145,2.406,146,2.805,147,2.805,148,4.704,149,4.704,150,3.591,151,4.704,152,4.023,153,2.805,154,2.805,155,2.805,156,2.805,157,2.362,158,2.805,159,4.704,160,2.805,161,2.805,162,2.805,163,2.805,164,2.805,165,2.805,166,1.852,167,2.362,168,4.023,169,2.805,170,4.023,171,4.023,172,2.805,173,2.805,174,2.805,175,2.805,176,2.805,177,2.805,178,2.805,179,2.805,180,2.07,181,2.805,182,2.805]],["title/injectables/AuthService.html",[139,1.994,183,1.674]],["body/injectables/AuthService.html",[3,0.241,4,0.241,5,0.212,18,0.271,20,1.384,30,0.025,38,0.598,49,1.525,65,0.016,66,0.016,86,1.559,87,2.341,88,3.055,89,3.299,90,3.299,92,2.343,104,2.134,105,1.845,106,1.868,107,3.042,109,2.343,119,1.785,139,1.617,141,2.135,184,1.358,185,2.277,186,3.022,187,3.919,188,3.919,189,1.253,190,2.277,191,5.053,192,2.537,193,2.705,194,2.705,195,2.705,196,2.705,197,2.343,198,2.891,199,1.996,200,2.705,201,3.919,202,2.891]],["title/classes/BaseEntitySchema.html",[116,1.327,203,2.201]],["body/classes/BaseEntitySchema.html",[3,0.397,4,0.397,5,0.349,18,0.446,19,1.521,30,0.025,38,0.497,65,0.022,66,0.022,93,2.067,117,1.913,203,2.944,204,3.756,205,3.278,206,4.616,207,3.756,208,3.756]],["title/modules/ConfigModule.html",[67,1.994,74,1.994]],["body/modules/ConfigModule.html",[3,0.383,4,0.383,5,0.337,30,0.024,65,0.022,66,0.022,69,1.993,70,2.484,74,3.656,77,2.929,78,2.35,79,2.35,144,3.174,192,3.158,209,3.622,210,3.622,211,4.302]],["title/classes/ConfigService.html",[116,1.327,192,1.674]],["body/classes/ConfigService.html",[1,2.797,3,0.31,4,0.31,5,0.273,18,0.349,19,1.297,30,0.024,38,0.389,65,0.019,66,0.019,86,1.861,106,1.729,117,1.494,145,2.797,186,3.624,189,2.167,192,1.749,205,2.797,212,2.933,213,4.676,214,5.279,215,4.445,216,4.676,217,4.676,218,4.676,219,4.676,220,3.937,221,3.087,222,3.484,223,3.484,224,3.484,225,3.484,226,3.484,227,3.484]],["title/interfaces/ConnectionOptions.html",[0,1.545,228,2.46]],["body/interfaces/ConnectionOptions.html",[2,2.003,3,0.355,4,0.355,5,0.313,6,1.849,18,0.399,19,1.418,20,1.535,22,3.359,30,0.024,38,0.57,49,1.624,65,0.021,66,0.021,228,2.944,229,5.64,230,5.64,231,4.304,232,3.771,233,3.99]],["title/classes/CreateReadingListDto.html",[116,1.327,234,1.822]],["body/classes/CreateReadingListDto.html",[3,0.303,4,0.303,5,0.267,7,1.975,18,0.341,19,1.278,20,1.189,30,0.026,38,0.623,49,1.347,65,0.019,66,0.019,93,2.59,105,2.071,117,1.461,124,3.69,135,3.04,234,1.86,235,2.867,236,2.867,237,4.605,238,4.605,239,3.405,240,3.405,241,3.405,242,2.867,243,3.405,244,3.405,245,2.867,246,3.405,247,3.405,248,2.513,249,3.405,250,3.405]],["title/classes/CreateUserDto.html",[109,1.994,116,1.327]],["body/classes/CreateUserDto.html",[3,0.38,4,0.271,5,0.239,7,2.111,18,0.305,19,1.183,28,2.111,30,0.025,38,0.549,49,1.501,65,0.017,66,0.017,93,2.28,105,1.834,109,1.821,117,1.306,119,3.705,120,3.705,121,3.631,122,4.143,123,2.564,124,3.705,125,2.01,126,2.564,127,2.564,128,2.815,129,2.564,130,2.564,131,2.564,132,2.01,133,2.564,134,2.564,135,2.815,202,3.146,251,2.564,252,2.247,253,3.045,254,3.045,255,3.045,256,2.247,257,3.045,258,3.045]],["title/modules/DatabaseModule.html",[67,1.994,75,1.994]],["body/modules/DatabaseModule.html",[3,0.36,4,0.36,5,0.317,30,0.024,65,0.021,66,0.021,69,1.873,70,2.388,75,3.775,77,2.816,78,2.209,79,2.209,143,2.983,144,2.983,259,3.404,260,3.404,261,3.404,262,3.922,263,4.043]],["title/injectables/DatabaseService.html",[183,1.674,262,1.994]],["body/injectables/DatabaseService.html",[3,0.38,4,0.38,5,0.335,18,0.427,20,1.103,30,0.025,38,0.476,65,0.022,66,0.022,86,2.124,104,1.7,105,1.469,106,1.58,184,2.145,189,1.979,232,4.499,262,2.554,264,3.596,265,5.821,266,4.272]],["title/classes/EntityRepository.html",[116,1.327,267,2.201]],["body/classes/EntityRepository.html",[3,0.18,4,0.18,5,0.158,18,0.202,19,0.872,20,1.395,28,0.866,29,1.013,30,0.026,33,1.207,38,0.619,49,1.125,65,0.013,66,0.013,86,1.251,87,2.791,88,3.292,96,3.304,104,2.151,105,1.86,106,1.933,117,0.866,166,2.075,186,1.88,189,0.935,205,1.88,267,1.332,268,1.699,269,2.647,270,2.647,271,2.647,272,2.32,273,2.647,274,2.647,275,2.647,276,2.018,277,2.647,278,2.018,279,1.699,280,1.699,281,1.699,282,2.647,283,1.699,284,4.401,285,1.699,286,4.551,287,3.671,288,1.699,289,1.699,290,4.215,291,3.671,292,1.699,293,2.647,294,1.699,295,2.647,296,2.647,297,1.699]],["title/injectables/JwtAuthGuard.html",[183,1.674,298,2.46]],["body/injectables/JwtAuthGuard.html",[3,0.439,4,0.439,5,0.387,30,0.024,65,0.024,66,0.024,184,2.477,298,3.641,299,4.154]],["title/injectables/JwtStrategy.html",[140,1.994,183,1.674]],["body/injectables/JwtStrategy.html",[3,0.355,4,0.355,5,0.313,18,0.399,20,1.319,30,0.025,38,0.57,65,0.021,66,0.021,86,2.034,87,2.368,88,2.792,104,2.034,105,1.758,106,1.475,107,2.634,140,2.386,184,2.003,189,1.849,192,2.832,215,4.304,300,3.359,301,3.99,302,3.99,303,3.99]],["title/guards/RolesGuard.html",[304,2.46,305,2.46]],["body/guards/RolesGuard.html",[3,0.36,4,0.36,5,0.317,18,0.405,20,1.331,30,0.025,38,0.575,65,0.021,66,0.021,86,2.051,104,2.051,105,1.773,106,1.495,189,1.873,305,2.983,306,4.043,307,3.404,308,5.155,309,4.043,310,5.675,311,4.043,312,5.155,313,4.043,314,4.043]],["title/interfaces/RuntimeSetismConfig.html",[0,1.545,221,2.201]],["body/interfaces/RuntimeSetismConfig.html",[0,1.643,1,3.185,2,1.78,3,0.316,4,0.316,5,0.278,6,1.643,7,1.521,10,2.985,11,2.985,17,2.985,18,0.355,19,1.313,21,2.985,23,2.985,24,2.985,30,0.024,37,2.616,38,0.594,57,2.34,61,4.493,64,3.984,65,0.019,66,0.019,145,3.185,220,4.484,221,2.34,231,2.985,232,2.616,315,3.545,316,5.325,317,3.545,318,3.545,319,3.545,320,3.545,321,3.545,322,3.545]],["title/interfaces/SuperadminCredentials.html",[0,1.545,150,2.201]],["body/interfaces/SuperadminCredentials.html",[2,2.145,3,0.38,4,0.38,5,0.335,6,1.979,18,0.427,19,1.481,28,1.832,29,2.145,30,0.025,38,0.476,49,1.378,57,2.82,65,0.022,66,0.022,120,4.025,150,2.82,166,2.82,167,4.494,323,4.272]],["title/interfaces/SwaggerOptions.html",[0,1.545,324,2.46]],["body/interfaces/SwaggerOptions.html",[2,1.856,3,0.484,4,0.329,5,0.29,6,1.713,7,2.478,18,0.37,19,1.35,20,1.591,30,0.025,38,0.606,49,1.591,62,4.012,63,4.096,65,0.02,66,0.02,324,2.728,325,5.777,326,5.777,327,3.697]],["title/classes/UpdateUserDto.html",[116,1.327,328,1.994]],["body/classes/UpdateUserDto.html",[3,0.242,4,0.242,5,0.213,7,2.304,18,0.272,19,1.091,20,1.58,30,0.026,38,0.599,49,1.491,52,2.005,61,3.964,65,0.016,66,0.016,93,2.489,117,1.165,121,3.964,124,3.05,125,1.793,128,3.05,135,2.595,242,2.287,252,2.005,256,2.005,328,1.625,329,2.287,330,3.89,331,4.263,332,4.263,333,3.931,334,4.524,335,3.931,336,2.717,337,3.89,338,2.717,339,2.287,340,2.717,341,2.717,342,2.287,343,2.717,344,2.717,345,2.287]],["title/controllers/UserController.html",[82,2.46,346,2.201]],["body/controllers/UserController.html",[3,0.207,4,0.207,5,0.182,7,1.811,18,0.47,20,1.213,30,0.026,38,0.613,49,1.547,65,0.014,66,0.014,84,1.393,86,1.396,93,2.336,94,1.961,96,3.956,97,4.244,99,1.961,104,1.87,105,1.617,106,1.864,111,1.961,112,1.961,113,1.961,114,1.961,128,2.787,199,4.057,234,2.567,272,2.589,328,2.81,346,1.538,347,1.961,348,2.955,349,2.955,350,2.955,351,1.961,352,2.329,353,2.329,354,2.329,355,4.699,356,4.699,357,4.699,358,4.222,359,2.329,360,2.329,361,2.329,362,1.961,363,2.329,364,1.961,365,2.329]],["title/classes/UserEntity.html",[116,1.327,366,2.46]],["body/classes/UserEntity.html",[3,0.171,4,0.171,5,0.15,18,0.192,19,0.837,28,1.818,30,0.027,38,0.664,49,1.472,65,0.012,66,0.012,87,2.983,93,2.76,117,0.822,119,1.993,120,1.993,197,1.805,198,1.414,202,2.227,203,1.265,205,1.805,206,2.541,207,1.613,208,1.613,234,1.047,248,1.414,330,2.541,331,2.541,332,2.541,334,2.541,337,3.145,342,2.541,345,1.613,366,1.414,367,1.265,368,1.613,369,3.019,370,3.019,371,3.019,372,3.019,373,3.019,374,4.898,375,5.957,376,3.735,377,4.238,378,4.898,379,4.611,380,1.916,381,1.916,382,1.916,383,1.916,384,1.916,385,1.916,386,1.916]],["title/modules/UserModule.html",[67,1.994,76,1.994]],["body/modules/UserModule.html",[3,0.36,4,0.36,5,0.317,30,0.024,65,0.021,66,0.021,69,1.873,70,2.388,76,3.836,77,2.816,78,2.209,79,2.209,84,2.418,141,2.769,143,2.983,346,2.669,387,3.404,388,3.404,389,3.574,390,4.043]],["title/injectables/UserRepository.html",[141,1.545,183,1.674]],["body/injectables/UserRepository.html",[3,0.178,4,0.178,5,0.157,18,0.201,19,0.868,20,1.392,28,0.86,29,1.007,30,0.026,33,1.199,38,0.618,49,1.121,65,0.013,66,0.013,86,1.245,87,2.787,88,3.287,96,3.295,104,2.146,105,1.855,106,1.928,141,0.929,166,2.065,184,1.007,186,1.87,189,0.929,205,1.87,267,1.323,269,2.634,270,2.634,271,2.634,272,2.308,273,2.634,274,2.634,275,2.634,277,2.634,279,1.688,280,1.688,281,1.688,282,2.634,283,1.688,284,4.39,285,1.688,286,4.541,287,3.658,288,1.688,289,1.688,290,4.203,291,3.658,292,1.688,293,2.634,294,1.688,295,2.634,296,2.634,297,1.688,368,1.688,391,1.688,392,2.005,393,2.005]],["title/injectables/UserService.html",[183,1.674,389,1.994]],["body/injectables/UserService.html",[3,0.239,4,0.239,5,0.21,18,0.503,20,1.379,30,0.026,38,0.596,49,1.521,65,0.016,66,0.016,86,1.549,87,2.827,88,3.334,104,2.127,105,1.838,106,1.976,107,3.528,141,2.124,184,1.346,189,1.242,190,2.257,199,3.713,234,2.749,328,3.009,348,3.278,349,3.278,350,3.278,351,2.257,362,2.257,364,2.257,389,1.603,394,2.257,395,3.893,396,2.681]],["title/coverage.html",[397,3.822]],["body/coverage.html",[0,2.329,1,1.219,5,0.16,6,2.329,30,0.027,33,3.82,38,0.227,62,1.504,65,0.013,66,0.013,82,2.338,83,1.346,85,1.716,92,1.219,109,1.219,116,2.158,118,1.716,139,1.219,140,1.219,141,0.945,145,1.219,150,1.346,183,2.524,185,1.716,192,1.024,203,1.346,204,1.716,212,1.716,221,1.346,228,1.504,234,1.114,235,1.716,236,1.716,251,1.716,252,2.338,262,1.219,264,1.716,267,1.346,268,1.716,298,1.504,299,1.716,300,1.716,304,1.504,305,1.504,307,1.716,324,1.504,328,1.219,329,1.716,339,1.716,346,1.346,347,1.716,366,1.504,367,2.092,389,1.219,391,1.716,394,1.716,397,1.716,398,2.039,399,2.039,400,4.748,401,3.887,402,2.668,403,3.887,404,1.716,405,5.026,406,1.716,407,2.039,408,3.887,409,2.039,410,2.039,411,2.039,412,2.039,413,2.039,414,2.039,415,2.039,416,2.039,417,2.039,418,3.169,419,2.039,420,3.169,421,1.716,422,3.169,423,1.716,424,1.716,425,1.716,426,2.039,427,1.716,428,2.039,429,2.039,430,2.039]],["title/dependencies.html",[70,1.857,431,2.79]],["body/dependencies.html",[26,2.714,30,0.028,43,3.735,65,0.018,66,0.018,70,1.494,116,1.765,157,2.714,432,3.224,433,5.464,434,3.224,435,3.224,436,3.224,437,3.224,438,3.224,439,4.436,440,3.224,441,3.224,442,3.224,443,3.224,444,3.224,445,3.224,446,3.224,447,3.224,448,3.224,449,3.224,450,3.224,451,3.224,452,3.224,453,3.224,454,3.224,455,3.224,456,3.224,457,3.224,458,4.436,459,3.224,460,3.224,461,3.224,462,3.224,463,3.224,464,3.224,465,3.224,466,3.224,467,3.224,468,3.224,469,3.224]],["title/miscellaneous/enumerations.html",[470,1.293,471,3.374]],["body/miscellaneous/enumerations.html",[6,1.578,18,0.341,29,3.249,30,0.027,33,2.036,47,3.877,48,3.877,65,0.019,66,0.019,87,1.578,132,2.248,180,2.513,186,2.036,197,2.754,248,2.513,256,2.513,470,1.578,471,2.867,472,3.405,473,3.877,474,2.867,475,3.877,476,2.867,477,4.605,478,4.605,479,2.867,480,3.877,481,2.867,482,3.405,483,3.405,484,3.405,485,3.405,486,3.405,487,2.867,488,3.405]],["title/miscellaneous/functions.html",[470,1.293,489,3.374]],["body/miscellaneous/functions.html",[18,0.43,20,1.11,30,0.025,38,0.48,65,0.022,66,0.022,104,1.712,105,1.48,106,1.591,421,3.622,423,4.917,424,3.622,425,4.513,470,1.993,489,3.622,490,4.302,491,4.302,492,4.302,493,5.361,494,4.302,495,4.302]],["title/index.html",[18,0.279,496,2.79,497,2.79]],["body/index.html",[30,0.023,65,0.023,66,0.023,498,4.741,499,5.689,500,4.741,501,4.741,502,4.741,503,4.741,504,4.741,505,4.741,506,4.741,507,4.741]],["title/modules.html",[69,2.103]],["body/modules.html",[30,0.022,65,0.022,66,0.022,68,2.8,69,1.965,73,2.537,74,2.537,75,2.537,76,2.537,508,6.263,509,6.263,510,6.263,511,6.263]],["title/overview.html",[512,3.822]],["body/overview.html",[2,1.346,30,0.026,65,0.016,66,0.016,68,4.028,69,1.242,70,1.804,71,2.257,72,2.257,73,3.649,74,3.009,75,3.334,76,3.44,77,2.127,78,1.464,79,1.464,84,1.603,117,1.15,132,2.57,136,2.257,137,2.257,138,2.257,139,3.44,140,2.742,141,2.331,180,1.978,184,1.346,192,2.526,209,2.257,210,2.257,259,2.257,260,2.257,261,2.257,262,3.44,304,1.978,387,2.257,388,2.257,389,2.742,480,2.257,487,2.257,512,2.257,513,2.681]],["title/miscellaneous/typealiases.html",[470,1.293,514,4.007]],["body/miscellaneous/typealiases.html",[18,0.443,30,0.022,38,0.494,65,0.022,66,0.022,197,2.648,198,4.027,245,4.595,367,2.923,470,2.052,473,3.728,474,3.728,475,4.595,476,3.728,479,3.728,481,3.728,515,4.428,516,5.458,517,3.728]],["title/miscellaneous/variables.html",[470,1.293,518,3.374]],["body/miscellaneous/variables.html",[18,0.405,28,2.434,29,2.849,30,0.026,38,0.451,49,1.044,65,0.021,66,0.021,197,2.418,367,2.669,402,3.404,404,4.34,406,4.34,427,4.34,470,1.873,517,3.404,518,3.404,519,5.155,520,4.043,521,5.155,522,4.043,523,4.043]]],"invertedIndex":[["",{"_index":30,"title":{},"body":{"interfaces/ApiOptions.html":{},"modules/AppModule.html":{},"controllers/AuthController.html":{},"classes/AuthDto.html":{},"modules/AuthModule.html":{},"interfaces/AuthOptions.html":{},"injectables/AuthService.html":{},"classes/BaseEntitySchema.html":{},"modules/ConfigModule.html":{},"classes/ConfigService.html":{},"interfaces/ConnectionOptions.html":{},"classes/CreateReadingListDto.html":{},"classes/CreateUserDto.html":{},"modules/DatabaseModule.html":{},"injectables/DatabaseService.html":{},"classes/EntityRepository.html":{},"injectables/JwtAuthGuard.html":{},"injectables/JwtStrategy.html":{},"guards/RolesGuard.html":{},"interfaces/RuntimeSetismConfig.html":{},"interfaces/SuperadminCredentials.html":{},"interfaces/SwaggerOptions.html":{},"classes/UpdateUserDto.html":{},"controllers/UserController.html":{},"classes/UserEntity.html":{},"modules/UserModule.html":{},"injectables/UserRepository.html":{},"injectables/UserService.html":{},"coverage.html":{},"dependencies.html":{},"miscellaneous/enumerations.html":{},"miscellaneous/functions.html":{},"index.html":{},"modules.html":{},"overview.html":{},"miscellaneous/typealiases.html":{},"miscellaneous/variables.html":{}}}],["0",{"_index":33,"title":{},"body":{"interfaces/ApiOptions.html":{},"classes/EntityRepository.html":{},"injectables/UserRepository.html":{},"coverage.html":{},"miscellaneous/enumerations.html":{}}}],["0.1.13",{"_index":463,"title":{},"body":{"dependencies.html":{}}}],["0.13.1",{"_index":449,"title":{},"body":{"dependencies.html":{}}}],["0.28.2",{"_index":445,"title":{},"body":{"dependencies.html":{}}}],["0.4.0",{"_index":447,"title":{},"body":{"dependencies.html":{}}}],["0.4.1",{"_index":459,"title":{},"body":{"dependencies.html":{}}}],["0/1",{"_index":405,"title":{},"body":{"coverage.html":{}}}],["0/10",{"_index":420,"title":{},"body":{"coverage.html":{}}}],["0/15",{"_index":426,"title":{},"body":{"coverage.html":{}}}],["0/2",{"_index":419,"title":{},"body":{"coverage.html":{}}}],["0/3",{"_index":400,"title":{},"body":{"coverage.html":{}}}],["0/4",{"_index":407,"title":{},"body":{"coverage.html":{}}}],["0/5",{"_index":418,"title":{},"body":{"coverage.html":{}}}],["0/6",{"_index":401,"title":{},"body":{"coverage.html":{}}}],["0/7",{"_index":428,"title":{},"body":{"coverage.html":{}}}],["1",{"_index":480,"title":{},"body":{"miscellaneous/enumerations.html":{},"overview.html":{}}}],["1.0.1",{"_index":435,"title":{},"body":{"dependencies.html":{}}}],["1.11.0",{"_index":451,"title":{},"body":{"dependencies.html":{}}}],["1/2",{"_index":415,"title":{},"body":{"coverage.html":{}}}],["100",{"_index":408,"title":{},"body":{"coverage.html":{}}}],["1024",{"_index":244,"title":{},"body":{"classes/CreateReadingListDto.html":{}}}],["10h",{"_index":182,"title":{},"body":{"interfaces/AuthOptions.html":{}}}],["12",{"_index":345,"title":{},"body":{"classes/UpdateUserDto.html":{},"classes/UserEntity.html":{}}}],["15",{"_index":505,"title":{},"body":{"index.html":{}}}],["15be",{"_index":501,"title":{},"body":{"index.html":{}}}],["2",{"_index":180,"title":{},"body":{"interfaces/AuthOptions.html":{},"miscellaneous/enumerations.html":{},"overview.html":{}}}],["2/3",{"_index":412,"title":{},"body":{"coverage.html":{}}}],["20",{"_index":242,"title":{},"body":{"classes/CreateReadingListDto.html":{},"classes/UpdateUserDto.html":{}}}],["200",{"_index":35,"title":{},"body":{"interfaces/ApiOptions.html":{}}}],["26",{"_index":258,"title":{},"body":{"classes/CreateUserDto.html":{}}}],["3",{"_index":248,"title":{},"body":{"classes/CreateReadingListDto.html":{},"classes/UserEntity.html":{},"miscellaneous/enumerations.html":{}}}],["3.0.2",{"_index":465,"title":{},"body":{"dependencies.html":{}}}],["3/4",{"_index":417,"title":{},"body":{"coverage.html":{}}}],["3000",{"_index":53,"title":{},"body":{"interfaces/ApiOptions.html":{}}}],["32",{"_index":134,"title":{},"body":{"classes/AuthDto.html":{},"classes/CreateUserDto.html":{}}}],["33",{"_index":504,"title":{},"body":{"index.html":{}}}],["4",{"_index":256,"title":{},"body":{"classes/CreateUserDto.html":{},"classes/UpdateUserDto.html":{},"miscellaneous/enumerations.html":{}}}],["4.0.0",{"_index":460,"title":{},"body":{"dependencies.html":{}}}],["4.1.6",{"_index":469,"title":{},"body":{"dependencies.html":{}}}],["4.6.0",{"_index":455,"title":{},"body":{"dependencies.html":{}}}],["4/4",{"_index":413,"title":{},"body":{"coverage.html":{}}}],["5",{"_index":487,"title":{},"body":{"miscellaneous/enumerations.html":{},"overview.html":{}}}],["5.0.9",{"_index":443,"title":{},"body":{"dependencies.html":{}}}],["5.13.8",{"_index":457,"title":{},"body":{"dependencies.html":{}}}],["5/5",{"_index":410,"title":{},"body":{"coverage.html":{}}}],["50",{"_index":414,"title":{},"body":{"coverage.html":{}}}],["54",{"_index":250,"title":{},"body":{"classes/CreateReadingListDto.html":{}}}],["6",{"_index":132,"title":{},"body":{"classes/AuthDto.html":{},"classes/CreateUserDto.html":{},"miscellaneous/enumerations.html":{},"overview.html":{}}}],["6.0.2",{"_index":453,"title":{},"body":{"dependencies.html":{}}}],["60",{"_index":179,"title":{},"body":{"interfaces/AuthOptions.html":{}}}],["66",{"_index":411,"title":{},"body":{"coverage.html":{}}}],["7.2.0",{"_index":467,"title":{},"body":{"dependencies.html":{}}}],["7/7",{"_index":409,"title":{},"body":{"coverage.html":{}}}],["75",{"_index":416,"title":{},"body":{"coverage.html":{}}}],["7d",{"_index":168,"title":{},"body":{"interfaces/AuthOptions.html":{}}}],["8",{"_index":513,"title":{},"body":{"overview.html":{}}}],["8.0.0",{"_index":433,"title":{},"body":{"dependencies.html":{}}}],["8.0.1",{"_index":439,"title":{},"body":{"dependencies.html":{}}}],["__v",{"_index":280,"title":{},"body":{"classes/EntityRepository.html":{},"injectables/UserRepository.html":{}}}],["_id",{"_index":206,"title":{},"body":{"classes/BaseEntitySchema.html":{},"classes/UserEntity.html":{}}}],["access",{"_index":158,"title":{},"body":{"interfaces/AuthOptions.html":{}}}],["accessors",{"_index":216,"title":{},"body":{"classes/ConfigService.html":{}}}],["account",{"_index":323,"title":{},"body":{"interfaces/SuperadminCredentials.html":{}}}],["action.'})@apiforbiddenresponse({description",{"_index":102,"title":{},"body":{"controllers/AuthController.html":{}}}],["added",{"_index":341,"title":{},"body":{"classes/UpdateUserDto.html":{}}}],["address",{"_index":122,"title":{},"body":{"classes/AuthDto.html":{},"classes/CreateUserDto.html":{}}}],["admin",{"_index":483,"title":{},"body":{"miscellaneous/enumerations.html":{}}}],["aliases",{"_index":515,"title":{},"body":{"miscellaneous/typealiases.html":{}}}],["allowing",{"_index":14,"title":{},"body":{"interfaces/ApiOptions.html":{}}}],["api",{"_index":3,"title":{},"body":{"interfaces/ApiOptions.html":{},"modules/AppModule.html":{},"controllers/AuthController.html":{},"classes/AuthDto.html":{},"modules/AuthModule.html":{},"interfaces/AuthOptions.html":{},"injectables/AuthService.html":{},"classes/BaseEntitySchema.html":{},"modules/ConfigModule.html":{},"classes/ConfigService.html":{},"interfaces/ConnectionOptions.html":{},"classes/CreateReadingListDto.html":{},"classes/CreateUserDto.html":{},"modules/DatabaseModule.html":{},"injectables/DatabaseService.html":{},"classes/EntityRepository.html":{},"injectables/JwtAuthGuard.html":{},"injectables/JwtStrategy.html":{},"guards/RolesGuard.html":{},"interfaces/RuntimeSetismConfig.html":{},"interfaces/SuperadminCredentials.html":{},"interfaces/SwaggerOptions.html":{},"classes/UpdateUserDto.html":{},"controllers/UserController.html":{},"classes/UserEntity.html":{},"modules/UserModule.html":{},"injectables/UserRepository.html":{},"injectables/UserService.html":{}}}],["apibody({type",{"_index":94,"title":{},"body":{"controllers/AuthController.html":{},"controllers/UserController.html":{}}}],["apiokresponse({description",{"_index":355,"title":{},"body":{"controllers/UserController.html":{}}}],["apioptions",{"_index":1,"title":{"interfaces/ApiOptions.html":{}},"body":{"interfaces/ApiOptions.html":{},"classes/ConfigService.html":{},"interfaces/RuntimeSetismConfig.html":{},"coverage.html":{}}}],["apiproperty({type",{"_index":121,"title":{},"body":{"classes/AuthDto.html":{},"classes/CreateUserDto.html":{},"classes/UpdateUserDto.html":{}}}],["apis",{"_index":11,"title":{},"body":{"interfaces/ApiOptions.html":{},"interfaces/RuntimeSetismConfig.html":{}}}],["app",{"_index":494,"title":{},"body":{"miscellaneous/functions.html":{}}}],["application",{"_index":507,"title":{},"body":{"index.html":{}}}],["appmodule",{"_index":68,"title":{"modules/AppModule.html":{}},"body":{"modules/AppModule.html":{},"modules.html":{},"overview.html":{}}}],["argon2",{"_index":444,"title":{},"body":{"dependencies.html":{}}}],["async",{"_index":88,"title":{},"body":{"controllers/AuthController.html":{},"injectables/AuthService.html":{},"classes/EntityRepository.html":{},"injectables/JwtStrategy.html":{},"injectables/UserRepository.html":{},"injectables/UserService.html":{}}}],["authcontroller",{"_index":83,"title":{"controllers/AuthController.html":{}},"body":{"controllers/AuthController.html":{},"modules/AuthModule.html":{},"coverage.html":{}}}],["authdto",{"_index":92,"title":{"classes/AuthDto.html":{}},"body":{"controllers/AuthController.html":{},"classes/AuthDto.html":{},"injectables/AuthService.html":{},"coverage.html":{}}}],["authdto})@apiokresponse({description",{"_index":95,"title":{},"body":{"controllers/AuthController.html":{}}}],["authentication",{"_index":146,"title":{},"body":{"interfaces/AuthOptions.html":{}}}],["authmodule",{"_index":73,"title":{"modules/AuthModule.html":{}},"body":{"modules/AppModule.html":{},"modules/AuthModule.html":{},"modules.html":{},"overview.html":{}}}],["authoptions",{"_index":145,"title":{"interfaces/AuthOptions.html":{}},"body":{"interfaces/AuthOptions.html":{},"classes/ConfigService.html":{},"interfaces/RuntimeSetismConfig.html":{},"coverage.html":{}}}],["author",{"_index":488,"title":{},"body":{"miscellaneous/enumerations.html":{}}}],["authorization",{"_index":37,"title":{},"body":{"interfaces/ApiOptions.html":{},"interfaces/AuthOptions.html":{},"interfaces/RuntimeSetismConfig.html":{}}}],["authservice",{"_index":139,"title":{"injectables/AuthService.html":{}},"body":{"modules/AuthModule.html":{},"injectables/AuthService.html":{},"coverage.html":{},"overview.html":{}}}],["available",{"_index":50,"title":{},"body":{"interfaces/ApiOptions.html":{}}}],["avatar",{"_index":330,"title":{},"body":{"classes/UpdateUserDto.html":{},"classes/UserEntity.html":{}}}],["backend",{"_index":506,"title":{},"body":{"index.html":{}}}],["base",{"_index":56,"title":{},"body":{"interfaces/ApiOptions.html":{}}}],["baseentityschema",{"_index":203,"title":{"classes/BaseEntitySchema.html":{}},"body":{"classes/BaseEntitySchema.html":{},"classes/UserEntity.html":{},"coverage.html":{}}}],["baseprojection",{"_index":269,"title":{},"body":{"classes/EntityRepository.html":{},"injectables/UserRepository.html":{}}}],["bears",{"_index":499,"title":{},"body":{"index.html":{}}}],["biography",{"_index":331,"title":{},"body":{"classes/UpdateUserDto.html":{},"classes/UserEntity.html":{}}}],["birthday",{"_index":332,"title":{},"body":{"classes/UpdateUserDto.html":{},"classes/UserEntity.html":{}}}],["book",{"_index":340,"title":{},"body":{"classes/UpdateUserDto.html":{}}}],["books",{"_index":237,"title":{},"body":{"classes/CreateReadingListDto.html":{}}}],["boolean",{"_index":314,"title":{},"body":{"guards/RolesGuard.html":{}}}],["bootstrap",{"_index":423,"title":{},"body":{"coverage.html":{},"miscellaneous/functions.html":{}}}],["both",{"_index":58,"title":{},"body":{"interfaces/ApiOptions.html":{}}}],["browse",{"_index":511,"title":{},"body":{"modules.html":{}}}],["browser",{"_index":508,"title":{},"body":{"modules.html":{}}}],["canactivate",{"_index":308,"title":{},"body":{"guards/RolesGuard.html":{}}}],["canactivate(context",{"_index":311,"title":{},"body":{"guards/RolesGuard.html":{}}}],["characters",{"_index":135,"title":{},"body":{"classes/AuthDto.html":{},"classes/CreateReadingListDto.html":{},"classes/CreateUserDto.html":{},"classes/UpdateUserDto.html":{}}}],["characters!'})@maxlength(14",{"_index":344,"title":{},"body":{"classes/UpdateUserDto.html":{}}}],["characters!'})@maxlength(26",{"_index":257,"title":{},"body":{"classes/CreateUserDto.html":{}}}],["characters!'})@maxlength(32",{"_index":133,"title":{},"body":{"classes/AuthDto.html":{},"classes/CreateUserDto.html":{}}}],["characters'})@maxlength(1024",{"_index":243,"title":{},"body":{"classes/CreateReadingListDto.html":{}}}],["characters'})@maxlength(54",{"_index":249,"title":{},"body":{"classes/CreateReadingListDto.html":{}}}],["chingu",{"_index":502,"title":{},"body":{"index.html":{}}}],["claim",{"_index":520,"title":{},"body":{"miscellaneous/variables.html":{}}}],["class",{"_index":116,"title":{"classes/AuthDto.html":{},"classes/BaseEntitySchema.html":{},"classes/ConfigService.html":{},"classes/CreateReadingListDto.html":{},"classes/CreateUserDto.html":{},"classes/EntityRepository.html":{},"classes/UpdateUserDto.html":{},"classes/UserEntity.html":{}},"body":{"coverage.html":{},"dependencies.html":{}}}],["classes",{"_index":117,"title":{},"body":{"classes/AuthDto.html":{},"classes/BaseEntitySchema.html":{},"classes/ConfigService.html":{},"classes/CreateReadingListDto.html":{},"classes/CreateUserDto.html":{},"classes/EntityRepository.html":{},"classes/UpdateUserDto.html":{},"classes/UserEntity.html":{},"overview.html":{}}}],["cluster_appmodule",{"_index":71,"title":{},"body":{"modules/AppModule.html":{},"overview.html":{}}}],["cluster_appmodule_imports",{"_index":72,"title":{},"body":{"modules/AppModule.html":{},"overview.html":{}}}],["cluster_authmodule",{"_index":136,"title":{},"body":{"modules/AuthModule.html":{},"overview.html":{}}}],["cluster_authmodule_exports",{"_index":137,"title":{},"body":{"modules/AuthModule.html":{},"overview.html":{}}}],["cluster_authmodule_providers",{"_index":138,"title":{},"body":{"modules/AuthModule.html":{},"overview.html":{}}}],["cluster_configmodule",{"_index":209,"title":{},"body":{"modules/ConfigModule.html":{},"overview.html":{}}}],["cluster_configmodule_exports",{"_index":210,"title":{},"body":{"modules/ConfigModule.html":{},"overview.html":{}}}],["cluster_databasemodule",{"_index":259,"title":{},"body":{"modules/DatabaseModule.html":{},"overview.html":{}}}],["cluster_databasemodule_exports",{"_index":260,"title":{},"body":{"modules/DatabaseModule.html":{},"overview.html":{}}}],["cluster_databasemodule_providers",{"_index":261,"title":{},"body":{"modules/DatabaseModule.html":{},"overview.html":{}}}],["cluster_usermodule",{"_index":387,"title":{},"body":{"modules/UserModule.html":{},"overview.html":{}}}],["cluster_usermodule_providers",{"_index":388,"title":{},"body":{"modules/UserModule.html":{},"overview.html":{}}}],["config",{"_index":213,"title":{},"body":{"classes/ConfigService.html":{}}}],["configmodule",{"_index":74,"title":{"modules/ConfigModule.html":{}},"body":{"modules/AppModule.html":{},"modules/ConfigModule.html":{},"modules.html":{},"overview.html":{}}}],["configservice",{"_index":192,"title":{"classes/ConfigService.html":{}},"body":{"injectables/AuthService.html":{},"modules/ConfigModule.html":{},"classes/ConfigService.html":{},"injectables/JwtStrategy.html":{},"coverage.html":{},"overview.html":{}}}],["configuration",{"_index":316,"title":{},"body":{"interfaces/RuntimeSetismConfig.html":{}}}],["configures",{"_index":164,"title":{},"body":{"interfaces/AuthOptions.html":{}}}],["conflict.'})@apiforbiddenresponse({description",{"_index":114,"title":{},"body":{"controllers/AuthController.html":{},"controllers/UserController.html":{}}}],["connect",{"_index":322,"title":{},"body":{"interfaces/RuntimeSetismConfig.html":{}}}],["connection",{"_index":232,"title":{},"body":{"interfaces/ConnectionOptions.html":{},"injectables/DatabaseService.html":{},"interfaces/RuntimeSetismConfig.html":{}}}],["connectionoptions",{"_index":228,"title":{"interfaces/ConnectionOptions.html":{}},"body":{"interfaces/ConnectionOptions.html":{},"coverage.html":{}}}],["connectionuri",{"_index":229,"title":{},"body":{"interfaces/ConnectionOptions.html":{}}}],["constructor",{"_index":189,"title":{},"body":{"injectables/AuthService.html":{},"classes/ConfigService.html":{},"injectables/DatabaseService.html":{},"classes/EntityRepository.html":{},"injectables/JwtStrategy.html":{},"guards/RolesGuard.html":{},"injectables/UserRepository.html":{},"injectables/UserService.html":{}}}],["constructor(configservice",{"_index":301,"title":{},"body":{"injectables/JwtStrategy.html":{}}}],["constructor(connection",{"_index":266,"title":{},"body":{"injectables/DatabaseService.html":{}}}],["constructor(entitymodal",{"_index":276,"title":{},"body":{"classes/EntityRepository.html":{}}}],["constructor(reflector",{"_index":309,"title":{},"body":{"guards/RolesGuard.html":{}}}],["constructor(usermodel",{"_index":392,"title":{},"body":{"injectables/UserRepository.html":{}}}],["constructor(userrepository",{"_index":190,"title":{},"body":{"injectables/AuthService.html":{},"injectables/UserService.html":{}}}],["context",{"_index":313,"title":{},"body":{"guards/RolesGuard.html":{}}}],["controller",{"_index":82,"title":{"controllers/AuthController.html":{},"controllers/UserController.html":{}},"body":{"coverage.html":{}}}],["controllers",{"_index":84,"title":{},"body":{"controllers/AuthController.html":{},"modules/AuthModule.html":{},"controllers/UserController.html":{},"modules/UserModule.html":{},"overview.html":{}}}],["cors",{"_index":21,"title":{},"body":{"interfaces/ApiOptions.html":{},"interfaces/RuntimeSetismConfig.html":{}}}],["corsoptions",{"_index":27,"title":{},"body":{"interfaces/ApiOptions.html":{}}}],["coverage",{"_index":397,"title":{"coverage.html":{}},"body":{"coverage.html":{}}}],["create",{"_index":166,"title":{},"body":{"interfaces/AuthOptions.html":{},"classes/EntityRepository.html":{},"interfaces/SuperadminCredentials.html":{},"injectables/UserRepository.html":{}}}],["create(createentitydata",{"_index":281,"title":{},"body":{"classes/EntityRepository.html":{},"injectables/UserRepository.html":{}}}],["create.dto.ts",{"_index":236,"title":{},"body":{"classes/CreateReadingListDto.html":{},"coverage.html":{}}}],["created.'})@apibadrequestresponse({description",{"_index":111,"title":{},"body":{"controllers/AuthController.html":{},"controllers/UserController.html":{}}}],["createdocument",{"_index":425,"title":{},"body":{"coverage.html":{},"miscellaneous/functions.html":{}}}],["createdocument(app",{"_index":492,"title":{},"body":{"miscellaneous/functions.html":{}}}],["createentitydata",{"_index":283,"title":{},"body":{"classes/EntityRepository.html":{},"injectables/UserRepository.html":{}}}],["createlist",{"_index":348,"title":{},"body":{"controllers/UserController.html":{},"injectables/UserService.html":{}}}],["createlist(id",{"_index":351,"title":{},"body":{"controllers/UserController.html":{},"injectables/UserService.html":{}}}],["createreadinglistdto",{"_index":234,"title":{"classes/CreateReadingListDto.html":{}},"body":{"classes/CreateReadingListDto.html":{},"controllers/UserController.html":{},"classes/UserEntity.html":{},"injectables/UserService.html":{},"coverage.html":{}}}],["createreadinglistdto})@apicreatedresponse({description",{"_index":352,"title":{},"body":{"controllers/UserController.html":{}}}],["createuserdto",{"_index":109,"title":{"classes/CreateUserDto.html":{}},"body":{"controllers/AuthController.html":{},"injectables/AuthService.html":{},"classes/CreateUserDto.html":{},"coverage.html":{}}}],["createuserdto})@apicreatedresponse({description",{"_index":110,"title":{},"body":{"controllers/AuthController.html":{}}}],["credentials",{"_index":165,"title":{},"body":{"interfaces/AuthOptions.html":{}}}],["critic",{"_index":486,"title":{},"body":{"miscellaneous/enumerations.html":{}}}],["csurf",{"_index":450,"title":{},"body":{"dependencies.html":{}}}],["current",{"_index":327,"title":{},"body":{"interfaces/SwaggerOptions.html":{}}}],["database",{"_index":231,"title":{},"body":{"interfaces/ConnectionOptions.html":{},"interfaces/RuntimeSetismConfig.html":{}}}],["databasemodule",{"_index":75,"title":{"modules/DatabaseModule.html":{}},"body":{"modules/AppModule.html":{},"modules/DatabaseModule.html":{},"modules.html":{},"overview.html":{}}}],["databaseservice",{"_index":262,"title":{"injectables/DatabaseService.html":{}},"body":{"modules/DatabaseModule.html":{},"injectables/DatabaseService.html":{},"coverage.html":{},"overview.html":{}}}],["date",{"_index":337,"title":{},"body":{"classes/UpdateUserDto.html":{},"classes/UserEntity.html":{}}}],["days",{"_index":181,"title":{},"body":{"interfaces/AuthOptions.html":{}}}],["dboptions",{"_index":220,"title":{},"body":{"classes/ConfigService.html":{},"interfaces/RuntimeSetismConfig.html":{}}}],["decoding",{"_index":155,"title":{},"body":{"interfaces/AuthOptions.html":{}}}],["decorators",{"_index":93,"title":{},"body":{"controllers/AuthController.html":{},"classes/AuthDto.html":{},"classes/BaseEntitySchema.html":{},"classes/CreateReadingListDto.html":{},"classes/CreateUserDto.html":{},"classes/UpdateUserDto.html":{},"controllers/UserController.html":{},"classes/UserEntity.html":{}}}],["default",{"_index":28,"title":{},"body":{"interfaces/ApiOptions.html":{},"classes/AuthDto.html":{},"interfaces/AuthOptions.html":{},"classes/CreateUserDto.html":{},"classes/EntityRepository.html":{},"interfaces/SuperadminCredentials.html":{},"classes/UserEntity.html":{},"injectables/UserRepository.html":{},"miscellaneous/variables.html":{}}}],["define",{"_index":8,"title":{},"body":{"interfaces/ApiOptions.html":{},"interfaces/AuthOptions.html":{}}}],["defined",{"_index":317,"title":{},"body":{"interfaces/RuntimeSetismConfig.html":{}}}],["deletemany",{"_index":270,"title":{},"body":{"classes/EntityRepository.html":{},"injectables/UserRepository.html":{}}}],["deletemany(entityfilterquery",{"_index":285,"title":{},"body":{"classes/EntityRepository.html":{},"injectables/UserRepository.html":{}}}],["deleteone",{"_index":271,"title":{},"body":{"classes/EntityRepository.html":{},"injectables/UserRepository.html":{}}}],["deleteone(entityfilterquery",{"_index":288,"title":{},"body":{"classes/EntityRepository.html":{},"injectables/UserRepository.html":{}}}],["dependencies",{"_index":70,"title":{"dependencies.html":{}},"body":{"modules/AppModule.html":{},"modules/AuthModule.html":{},"modules/ConfigModule.html":{},"modules/DatabaseModule.html":{},"modules/UserModule.html":{},"dependencies.html":{},"overview.html":{}}}],["describing",{"_index":174,"title":{},"body":{"interfaces/AuthOptions.html":{}}}],["description",{"_index":7,"title":{},"body":{"interfaces/ApiOptions.html":{},"classes/AuthDto.html":{},"interfaces/AuthOptions.html":{},"classes/CreateReadingListDto.html":{},"classes/CreateUserDto.html":{},"interfaces/RuntimeSetismConfig.html":{},"interfaces/SwaggerOptions.html":{},"classes/UpdateUserDto.html":{},"controllers/UserController.html":{}}}],["development",{"_index":47,"title":{},"body":{"interfaces/ApiOptions.html":{},"miscellaneous/enumerations.html":{}}}],["docs",{"_index":44,"title":{},"body":{"interfaces/ApiOptions.html":{}}}],["documentation",{"_index":62,"title":{},"body":{"interfaces/ApiOptions.html":{},"interfaces/SwaggerOptions.html":{},"coverage.html":{}}}],["eg",{"_index":178,"title":{},"body":{"interfaces/AuthOptions.html":{}}}],["email",{"_index":119,"title":{},"body":{"classes/AuthDto.html":{},"injectables/AuthService.html":{},"classes/CreateUserDto.html":{},"classes/UserEntity.html":{}}}],["email!'})@isdefined({message",{"_index":126,"title":{},"body":{"classes/AuthDto.html":{},"classes/CreateUserDto.html":{}}}],["empty",{"_index":127,"title":{},"body":{"classes/AuthDto.html":{},"classes/CreateUserDto.html":{}}}],["empty!'})@minlength(4",{"_index":255,"title":{},"body":{"classes/CreateUserDto.html":{}}}],["empty!'})@minlength(6",{"_index":130,"title":{},"body":{"classes/AuthDto.html":{},"classes/CreateUserDto.html":{}}}],["entityfilterquery",{"_index":287,"title":{},"body":{"classes/EntityRepository.html":{},"injectables/UserRepository.html":{}}}],["entityid",{"_index":293,"title":{},"body":{"classes/EntityRepository.html":{},"injectables/UserRepository.html":{}}}],["entitymodal",{"_index":278,"title":{},"body":{"classes/EntityRepository.html":{}}}],["entityrepository",{"_index":267,"title":{"classes/EntityRepository.html":{}},"body":{"classes/EntityRepository.html":{},"injectables/UserRepository.html":{},"coverage.html":{}}}],["enum",{"_index":383,"title":{},"body":{"classes/UserEntity.html":{}}}],["enumerations",{"_index":471,"title":{"miscellaneous/enumerations.html":{}},"body":{"miscellaneous/enumerations.html":{}}}],["env",{"_index":22,"title":{},"body":{"interfaces/ApiOptions.html":{},"interfaces/ConnectionOptions.html":{}}}],["envalid",{"_index":452,"title":{},"body":{"dependencies.html":{}}}],["environment",{"_index":48,"title":{},"body":{"interfaces/ApiOptions.html":{},"miscellaneous/enumerations.html":{}}}],["etc",{"_index":321,"title":{},"body":{"interfaces/RuntimeSetismConfig.html":{}}}],["executioncontext",{"_index":312,"title":{},"body":{"guards/RolesGuard.html":{}}}],["exports",{"_index":144,"title":{},"body":{"modules/AuthModule.html":{},"modules/ConfigModule.html":{},"modules/DatabaseModule.html":{}}}],["exposed",{"_index":12,"title":{},"body":{"interfaces/ApiOptions.html":{}}}],["exposedheaders",{"_index":36,"title":{},"body":{"interfaces/ApiOptions.html":{}}}],["express",{"_index":43,"title":{},"body":{"interfaces/ApiOptions.html":{},"dependencies.html":{}}}],["expressed",{"_index":173,"title":{},"body":{"interfaces/AuthOptions.html":{}}}],["extended",{"_index":16,"title":{},"body":{"interfaces/ApiOptions.html":{}}}],["extends",{"_index":368,"title":{},"body":{"classes/UserEntity.html":{},"injectables/UserRepository.html":{}}}],["extra",{"_index":160,"title":{},"body":{"interfaces/AuthOptions.html":{}}}],["failed",{"_index":99,"title":{},"body":{"controllers/AuthController.html":{},"controllers/UserController.html":{}}}],["false})@isoptional",{"_index":335,"title":{},"body":{"classes/UpdateUserDto.html":{}}}],["false})@isoptional()@isdate({message",{"_index":338,"title":{},"body":{"classes/UpdateUserDto.html":{}}}],["false})@isoptional()@minlength(20",{"_index":336,"title":{},"body":{"classes/UpdateUserDto.html":{}}}],["false})@isoptional()@minlength(4",{"_index":343,"title":{},"body":{"classes/UpdateUserDto.html":{}}}],["file",{"_index":5,"title":{},"body":{"interfaces/ApiOptions.html":{},"modules/AppModule.html":{},"controllers/AuthController.html":{},"classes/AuthDto.html":{},"modules/AuthModule.html":{},"interfaces/AuthOptions.html":{},"injectables/AuthService.html":{},"classes/BaseEntitySchema.html":{},"modules/ConfigModule.html":{},"classes/ConfigService.html":{},"interfaces/ConnectionOptions.html":{},"classes/CreateReadingListDto.html":{},"classes/CreateUserDto.html":{},"modules/DatabaseModule.html":{},"injectables/DatabaseService.html":{},"classes/EntityRepository.html":{},"injectables/JwtAuthGuard.html":{},"injectables/JwtStrategy.html":{},"guards/RolesGuard.html":{},"interfaces/RuntimeSetismConfig.html":{},"interfaces/SuperadminCredentials.html":{},"interfaces/SwaggerOptions.html":{},"classes/UpdateUserDto.html":{},"controllers/UserController.html":{},"classes/UserEntity.html":{},"modules/UserModule.html":{},"injectables/UserRepository.html":{},"injectables/UserService.html":{},"coverage.html":{}}}],["filterquery",{"_index":286,"title":{},"body":{"classes/EntityRepository.html":{},"injectables/UserRepository.html":{}}}],["find",{"_index":272,"title":{},"body":{"classes/EntityRepository.html":{},"controllers/UserController.html":{},"injectables/UserRepository.html":{}}}],["find(entityfilterquery",{"_index":289,"title":{},"body":{"classes/EntityRepository.html":{},"injectables/UserRepository.html":{}}}],["find(id",{"_index":354,"title":{},"body":{"controllers/UserController.html":{}}}],["findbyid",{"_index":273,"title":{},"body":{"classes/EntityRepository.html":{},"injectables/UserRepository.html":{}}}],["findbyid(entityid",{"_index":292,"title":{},"body":{"classes/EntityRepository.html":{},"injectables/UserRepository.html":{}}}],["findbyidandupdate",{"_index":274,"title":{},"body":{"classes/EntityRepository.html":{},"injectables/UserRepository.html":{}}}],["findbyidandupdate(entityid",{"_index":294,"title":{},"body":{"classes/EntityRepository.html":{},"injectables/UserRepository.html":{}}}],["findone",{"_index":275,"title":{},"body":{"classes/EntityRepository.html":{},"injectables/UserRepository.html":{}}}],["findone(entityfilterquery",{"_index":297,"title":{},"body":{"classes/EntityRepository.html":{},"injectables/UserRepository.html":{}}}],["firstlogin",{"_index":369,"title":{},"body":{"classes/UserEntity.html":{}}}],["forbidden!'})@apiparam({name",{"_index":358,"title":{},"body":{"controllers/UserController.html":{}}}],["forbidden!'})@post(':id/list",{"_index":353,"title":{},"body":{"controllers/UserController.html":{}}}],["forbidden!'})@post('signin",{"_index":103,"title":{},"body":{"controllers/AuthController.html":{}}}],["forbidden!'})@post('signup",{"_index":115,"title":{},"body":{"controllers/AuthController.html":{}}}],["forbidden!'})@useroles(role.admin)@useguards(jwtauthguard",{"_index":360,"title":{},"body":{"controllers/UserController.html":{}}}],["found.'})@apiforbiddenresponse({description",{"_index":357,"title":{},"body":{"controllers/UserController.html":{}}}],["full",{"_index":253,"title":{},"body":{"classes/CreateUserDto.html":{}}}],["fullname",{"_index":202,"title":{},"body":{"injectables/AuthService.html":{},"classes/CreateUserDto.html":{},"classes/UserEntity.html":{}}}],["fullname'})@isdefined({message",{"_index":254,"title":{},"body":{"classes/CreateUserDto.html":{}}}],["function",{"_index":422,"title":{},"body":{"coverage.html":{}}}],["functions",{"_index":489,"title":{"miscellaneous/functions.html":{}},"body":{"miscellaneous/functions.html":{}}}],["getapioptions",{"_index":225,"title":{},"body":{"classes/ConfigService.html":{}}}],["getauthoptions",{"_index":226,"title":{},"body":{"classes/ConfigService.html":{}}}],["getdbhandle",{"_index":265,"title":{},"body":{"injectables/DatabaseService.html":{}}}],["getdboptions",{"_index":227,"title":{},"body":{"classes/ConfigService.html":{}}}],["getisdevelopment",{"_index":222,"title":{},"body":{"classes/ConfigService.html":{}}}],["getisproduction",{"_index":223,"title":{},"body":{"classes/ConfigService.html":{}}}],["getistest",{"_index":224,"title":{},"body":{"classes/ConfigService.html":{}}}],["getting",{"_index":496,"title":{"index.html":{}},"body":{}}],["guard",{"_index":304,"title":{"guards/RolesGuard.html":{}},"body":{"coverage.html":{},"overview.html":{}}}],["guards",{"_index":306,"title":{},"body":{"guards/RolesGuard.html":{}}}],["handling",{"_index":40,"title":{},"body":{"interfaces/ApiOptions.html":{}}}],["hash",{"_index":201,"title":{},"body":{"injectables/AuthService.html":{}}}],["hashing",{"_index":162,"title":{},"body":{"interfaces/AuthOptions.html":{}}}],["helmet",{"_index":454,"title":{},"body":{"dependencies.html":{}}}],["hostname",{"_index":23,"title":{},"body":{"interfaces/ApiOptions.html":{},"interfaces/RuntimeSetismConfig.html":{}}}],["id",{"_index":199,"title":{},"body":{"injectables/AuthService.html":{},"controllers/UserController.html":{},"injectables/UserService.html":{}}}],["id'})@delete(':id",{"_index":363,"title":{},"body":{"controllers/UserController.html":{}}}],["id'})@get(':id",{"_index":359,"title":{},"body":{"controllers/UserController.html":{}}}],["id'})@patch(':id",{"_index":365,"title":{},"body":{"controllers/UserController.html":{}}}],["identifier",{"_index":398,"title":{},"body":{"coverage.html":{}}}],["imports",{"_index":81,"title":{},"body":{"modules/AppModule.html":{}}}],["including",{"_index":319,"title":{},"body":{"interfaces/RuntimeSetismConfig.html":{}}}],["index",{"_index":18,"title":{"index.html":{}},"body":{"interfaces/ApiOptions.html":{},"controllers/AuthController.html":{},"classes/AuthDto.html":{},"interfaces/AuthOptions.html":{},"injectables/AuthService.html":{},"classes/BaseEntitySchema.html":{},"classes/ConfigService.html":{},"interfaces/ConnectionOptions.html":{},"classes/CreateReadingListDto.html":{},"classes/CreateUserDto.html":{},"injectables/DatabaseService.html":{},"classes/EntityRepository.html":{},"injectables/JwtStrategy.html":{},"guards/RolesGuard.html":{},"interfaces/RuntimeSetismConfig.html":{},"interfaces/SuperadminCredentials.html":{},"interfaces/SwaggerOptions.html":{},"classes/UpdateUserDto.html":{},"controllers/UserController.html":{},"classes/UserEntity.html":{},"injectables/UserRepository.html":{},"injectables/UserService.html":{},"miscellaneous/enumerations.html":{},"miscellaneous/functions.html":{},"miscellaneous/typealiases.html":{},"miscellaneous/variables.html":{}}}],["inestapplication",{"_index":493,"title":{},"body":{"miscellaneous/functions.html":{}}}],["info",{"_index":4,"title":{},"body":{"interfaces/ApiOptions.html":{},"modules/AppModule.html":{},"controllers/AuthController.html":{},"classes/AuthDto.html":{},"modules/AuthModule.html":{},"interfaces/AuthOptions.html":{},"injectables/AuthService.html":{},"classes/BaseEntitySchema.html":{},"modules/ConfigModule.html":{},"classes/ConfigService.html":{},"interfaces/ConnectionOptions.html":{},"classes/CreateReadingListDto.html":{},"classes/CreateUserDto.html":{},"modules/DatabaseModule.html":{},"injectables/DatabaseService.html":{},"classes/EntityRepository.html":{},"injectables/JwtAuthGuard.html":{},"injectables/JwtStrategy.html":{},"guards/RolesGuard.html":{},"interfaces/RuntimeSetismConfig.html":{},"interfaces/SuperadminCredentials.html":{},"interfaces/SwaggerOptions.html":{},"classes/UpdateUserDto.html":{},"controllers/UserController.html":{},"classes/UserEntity.html":{},"modules/UserModule.html":{},"injectables/UserRepository.html":{},"injectables/UserService.html":{}}}],["injectable",{"_index":183,"title":{"injectables/AuthService.html":{},"injectables/DatabaseService.html":{},"injectables/JwtAuthGuard.html":{},"injectables/JwtStrategy.html":{},"injectables/UserRepository.html":{},"injectables/UserService.html":{}},"body":{"coverage.html":{}}}],["injectables",{"_index":184,"title":{},"body":{"injectables/AuthService.html":{},"injectables/DatabaseService.html":{},"injectables/JwtAuthGuard.html":{},"injectables/JwtStrategy.html":{},"injectables/UserRepository.html":{},"injectables/UserService.html":{},"overview.html":{}}}],["interface",{"_index":0,"title":{"interfaces/ApiOptions.html":{},"interfaces/AuthOptions.html":{},"interfaces/ConnectionOptions.html":{},"interfaces/RuntimeSetismConfig.html":{},"interfaces/SuperadminCredentials.html":{},"interfaces/SwaggerOptions.html":{}},"body":{"interfaces/RuntimeSetismConfig.html":{},"coverage.html":{}}}],["interfaces",{"_index":2,"title":{},"body":{"interfaces/ApiOptions.html":{},"interfaces/AuthOptions.html":{},"interfaces/ConnectionOptions.html":{},"interfaces/RuntimeSetismConfig.html":{},"interfaces/SuperadminCredentials.html":{},"interfaces/SwaggerOptions.html":{},"overview.html":{}}}],["internal",{"_index":113,"title":{},"body":{"controllers/AuthController.html":{},"controllers/UserController.html":{}}}],["internalcomment",{"_index":370,"title":{},"body":{"classes/UserEntity.html":{}}}],["isdevelopment",{"_index":217,"title":{},"body":{"classes/ConfigService.html":{}}}],["isenum(readinglistkind)@isdefined",{"_index":246,"title":{},"body":{"classes/CreateReadingListDto.html":{}}}],["isproduction",{"_index":218,"title":{},"body":{"classes/ConfigService.html":{}}}],["isstring()@isdefined()@minlength(3",{"_index":247,"title":{},"body":{"classes/CreateReadingListDto.html":{}}}],["isstring()@isoptional()@minlength(20",{"_index":241,"title":{},"body":{"classes/CreateReadingListDto.html":{}}}],["isstring({each",{"_index":239,"title":{},"body":{"classes/CreateReadingListDto.html":{}}}],["istest",{"_index":219,"title":{},"body":{"classes/ConfigService.html":{}}}],["jwt",{"_index":157,"title":{},"body":{"interfaces/AuthOptions.html":{},"dependencies.html":{}}}],["jwtauthguard",{"_index":298,"title":{"injectables/JwtAuthGuard.html":{}},"body":{"injectables/JwtAuthGuard.html":{},"coverage.html":{}}}],["jwtsecretkey",{"_index":148,"title":{},"body":{"interfaces/AuthOptions.html":{}}}],["jwtservice",{"_index":191,"title":{},"body":{"injectables/AuthService.html":{}}}],["jwtstrategy",{"_index":140,"title":{"injectables/JwtStrategy.html":{}},"body":{"modules/AuthModule.html":{},"injectables/JwtStrategy.html":{},"coverage.html":{},"overview.html":{}}}],["key",{"_index":154,"title":{},"body":{"interfaces/AuthOptions.html":{}}}],["kind",{"_index":238,"title":{},"body":{"classes/CreateReadingListDto.html":{}}}],["lastlogin",{"_index":371,"title":{},"body":{"classes/UserEntity.html":{}}}],["layer",{"_index":15,"title":{},"body":{"interfaces/ApiOptions.html":{},"interfaces/AuthOptions.html":{}}}],["length",{"_index":169,"title":{},"body":{"interfaces/AuthOptions.html":{}}}],["list.enum.ts",{"_index":475,"title":{},"body":{"miscellaneous/enumerations.html":{},"miscellaneous/typealiases.html":{}}}],["listen",{"_index":55,"title":{},"body":{"interfaces/ApiOptions.html":{}}}],["literal",{"_index":46,"title":{},"body":{"interfaces/ApiOptions.html":{}}}],["localhost",{"_index":51,"title":{},"body":{"interfaces/ApiOptions.html":{}}}],["loginwithemailandpassword",{"_index":89,"title":{},"body":{"controllers/AuthController.html":{},"injectables/AuthService.html":{}}}],["loginwithemailandpassword(authdto",{"_index":91,"title":{},"body":{"controllers/AuthController.html":{}}}],["loginwithemailandpassword(r",{"_index":193,"title":{},"body":{"injectables/AuthService.html":{}}}],["lowercase",{"_index":386,"title":{},"body":{"classes/UserEntity.html":{}}}],["managed",{"_index":147,"title":{},"body":{"interfaces/AuthOptions.html":{}}}],["matching",{"_index":66,"title":{},"body":{"interfaces/ApiOptions.html":{},"modules/AppModule.html":{},"controllers/AuthController.html":{},"classes/AuthDto.html":{},"modules/AuthModule.html":{},"interfaces/AuthOptions.html":{},"injectables/AuthService.html":{},"classes/BaseEntitySchema.html":{},"modules/ConfigModule.html":{},"classes/ConfigService.html":{},"interfaces/ConnectionOptions.html":{},"classes/CreateReadingListDto.html":{},"classes/CreateUserDto.html":{},"modules/DatabaseModule.html":{},"injectables/DatabaseService.html":{},"classes/EntityRepository.html":{},"injectables/JwtAuthGuard.html":{},"injectables/JwtStrategy.html":{},"guards/RolesGuard.html":{},"interfaces/RuntimeSetismConfig.html":{},"interfaces/SuperadminCredentials.html":{},"interfaces/SwaggerOptions.html":{},"classes/UpdateUserDto.html":{},"controllers/UserController.html":{},"classes/UserEntity.html":{},"modules/UserModule.html":{},"injectables/UserRepository.html":{},"injectables/UserService.html":{},"coverage.html":{},"dependencies.html":{},"miscellaneous/enumerations.html":{},"miscellaneous/functions.html":{},"index.html":{},"modules.html":{},"overview.html":{},"miscellaneous/typealiases.html":{},"miscellaneous/variables.html":{}}}],["maxage",{"_index":32,"title":{},"body":{"interfaces/ApiOptions.html":{}}}],["maxlength",{"_index":385,"title":{},"body":{"classes/UserEntity.html":{}}}],["message",{"_index":124,"title":{},"body":{"classes/AuthDto.html":{},"classes/CreateReadingListDto.html":{},"classes/CreateUserDto.html":{},"classes/UpdateUserDto.html":{}}}],["metadata",{"_index":462,"title":{},"body":{"dependencies.html":{}}}],["methods",{"_index":86,"title":{},"body":{"controllers/AuthController.html":{},"injectables/AuthService.html":{},"classes/ConfigService.html":{},"injectables/DatabaseService.html":{},"classes/EntityRepository.html":{},"injectables/JwtStrategy.html":{},"guards/RolesGuard.html":{},"controllers/UserController.html":{},"injectables/UserRepository.html":{},"injectables/UserService.html":{}}}],["middleware",{"_index":17,"title":{},"body":{"interfaces/ApiOptions.html":{},"interfaces/RuntimeSetismConfig.html":{}}}],["minlength",{"_index":384,"title":{},"body":{"classes/UserEntity.html":{}}}],["miscellaneous",{"_index":470,"title":{"miscellaneous/enumerations.html":{},"miscellaneous/functions.html":{},"miscellaneous/typealiases.html":{},"miscellaneous/variables.html":{}},"body":{"miscellaneous/enumerations.html":{},"miscellaneous/functions.html":{},"miscellaneous/typealiases.html":{},"miscellaneous/variables.html":{}}}],["model",{"_index":277,"title":{},"body":{"classes/EntityRepository.html":{},"injectables/UserRepository.html":{}}}],["module",{"_index":67,"title":{"modules/AppModule.html":{},"modules/AuthModule.html":{},"modules/ConfigModule.html":{},"modules/DatabaseModule.html":{},"modules/UserModule.html":{}},"body":{}}],["modules",{"_index":69,"title":{"modules.html":{}},"body":{"modules/AppModule.html":{},"modules/AuthModule.html":{},"modules/ConfigModule.html":{},"modules/DatabaseModule.html":{},"modules/UserModule.html":{},"modules.html":{},"overview.html":{}}}],["mongoose",{"_index":456,"title":{},"body":{"dependencies.html":{}}}],["name",{"_index":105,"title":{},"body":{"controllers/AuthController.html":{},"injectables/AuthService.html":{},"classes/CreateReadingListDto.html":{},"classes/CreateUserDto.html":{},"injectables/DatabaseService.html":{},"classes/EntityRepository.html":{},"injectables/JwtStrategy.html":{},"guards/RolesGuard.html":{},"controllers/UserController.html":{},"injectables/UserRepository.html":{},"injectables/UserService.html":{},"miscellaneous/functions.html":{}}}],["nestjs/common",{"_index":432,"title":{},"body":{"dependencies.html":{}}}],["nestjs/config",{"_index":434,"title":{},"body":{"dependencies.html":{}}}],["nestjs/core",{"_index":436,"title":{},"body":{"dependencies.html":{}}}],["nestjs/jwt",{"_index":437,"title":{},"body":{"dependencies.html":{}}}],["nestjs/mongoose",{"_index":438,"title":{},"body":{"dependencies.html":{}}}],["nestjs/passport",{"_index":440,"title":{},"body":{"dependencies.html":{}}}],["nestjs/platform",{"_index":441,"title":{},"body":{"dependencies.html":{}}}],["nestjs/swagger",{"_index":442,"title":{},"body":{"dependencies.html":{}}}],["new",{"_index":339,"title":{},"body":{"classes/UpdateUserDto.html":{},"coverage.html":{}}}],["newwish",{"_index":333,"title":{},"body":{"classes/UpdateUserDto.html":{}}}],["null",{"_index":376,"title":{},"body":{"classes/UserEntity.html":{}}}],["number",{"_index":52,"title":{},"body":{"interfaces/ApiOptions.html":{},"interfaces/AuthOptions.html":{},"classes/UpdateUserDto.html":{}}}],["object",{"_index":279,"title":{},"body":{"classes/EntityRepository.html":{},"injectables/UserRepository.html":{}}}],["objectid",{"_index":207,"title":{},"body":{"classes/BaseEntitySchema.html":{},"classes/UserEntity.html":{}}}],["openapiobject",{"_index":495,"title":{},"body":{"miscellaneous/functions.html":{}}}],["optional",{"_index":20,"title":{},"body":{"interfaces/ApiOptions.html":{},"controllers/AuthController.html":{},"interfaces/AuthOptions.html":{},"injectables/AuthService.html":{},"interfaces/ConnectionOptions.html":{},"classes/CreateReadingListDto.html":{},"injectables/DatabaseService.html":{},"classes/EntityRepository.html":{},"injectables/JwtStrategy.html":{},"guards/RolesGuard.html":{},"interfaces/SwaggerOptions.html":{},"classes/UpdateUserDto.html":{},"controllers/UserController.html":{},"injectables/UserRepository.html":{},"injectables/UserService.html":{},"miscellaneous/functions.html":{}}}],["options",{"_index":64,"title":{},"body":{"interfaces/ApiOptions.html":{},"interfaces/RuntimeSetismConfig.html":{}}}],["optionssuccessstatus",{"_index":34,"title":{},"body":{"interfaces/ApiOptions.html":{}}}],["origin",{"_index":31,"title":{},"body":{"interfaces/ApiOptions.html":{}}}],["out",{"_index":79,"title":{},"body":{"modules/AppModule.html":{},"modules/AuthModule.html":{},"modules/ConfigModule.html":{},"modules/DatabaseModule.html":{},"modules/UserModule.html":{},"overview.html":{}}}],["overall",{"_index":60,"title":{},"body":{"interfaces/ApiOptions.html":{}}}],["overview",{"_index":512,"title":{"overview.html":{}},"body":{"overview.html":{}}}],["package",{"_index":431,"title":{"dependencies.html":{}},"body":{}}],["page",{"_index":63,"title":{},"body":{"interfaces/ApiOptions.html":{},"interfaces/SwaggerOptions.html":{}}}],["parameters",{"_index":104,"title":{},"body":{"controllers/AuthController.html":{},"injectables/AuthService.html":{},"injectables/DatabaseService.html":{},"classes/EntityRepository.html":{},"injectables/JwtStrategy.html":{},"guards/RolesGuard.html":{},"controllers/UserController.html":{},"injectables/UserRepository.html":{},"injectables/UserService.html":{},"miscellaneous/functions.html":{}}}],["partial",{"_index":282,"title":{},"body":{"classes/EntityRepository.html":{},"injectables/UserRepository.html":{}}}],["passowrd",{"_index":131,"title":{},"body":{"classes/AuthDto.html":{},"classes/CreateUserDto.html":{}}}],["passport",{"_index":458,"title":{},"body":{"dependencies.html":{}}}],["password",{"_index":120,"title":{},"body":{"classes/AuthDto.html":{},"classes/CreateUserDto.html":{},"interfaces/SuperadminCredentials.html":{},"classes/UserEntity.html":{}}}],["password123'})@isdefined({message",{"_index":129,"title":{},"body":{"classes/AuthDto.html":{},"classes/CreateUserDto.html":{}}}],["passwords",{"_index":163,"title":{},"body":{"interfaces/AuthOptions.html":{}}}],["path",{"_index":59,"title":{},"body":{"interfaces/ApiOptions.html":{}}}],["payload",{"_index":303,"title":{},"body":{"injectables/JwtStrategy.html":{}}}],["pepper",{"_index":149,"title":{},"body":{"interfaces/AuthOptions.html":{}}}],["per",{"_index":176,"title":{},"body":{"interfaces/AuthOptions.html":{}}}],["port",{"_index":24,"title":{},"body":{"interfaces/ApiOptions.html":{},"interfaces/RuntimeSetismConfig.html":{}}}],["possible",{"_index":315,"title":{},"body":{"interfaces/RuntimeSetismConfig.html":{}}}],["prefix",{"_index":25,"title":{},"body":{"interfaces/ApiOptions.html":{}}}],["private",{"_index":186,"title":{},"body":{"injectables/AuthService.html":{},"classes/ConfigService.html":{},"classes/EntityRepository.html":{},"injectables/UserRepository.html":{},"miscellaneous/enumerations.html":{}}}],["production",{"_index":477,"title":{},"body":{"miscellaneous/enumerations.html":{}}}],["projection",{"_index":290,"title":{},"body":{"classes/EntityRepository.html":{},"injectables/UserRepository.html":{}}}],["promise",{"_index":284,"title":{},"body":{"classes/EntityRepository.html":{},"injectables/UserRepository.html":{}}}],["prop",{"_index":208,"title":{},"body":{"classes/BaseEntitySchema.html":{},"classes/UserEntity.html":{}}}],["prop(['createreadinglistdto",{"_index":382,"title":{},"body":{"classes/UserEntity.html":{}}}],["prop({default",{"_index":373,"title":{},"body":{"classes/UserEntity.html":{}}}],["prop({require",{"_index":381,"title":{},"body":{"classes/UserEntity.html":{}}}],["prop({required",{"_index":379,"title":{},"body":{"classes/UserEntity.html":{}}}],["prop({type",{"_index":377,"title":{},"body":{"classes/UserEntity.html":{}}}],["properties",{"_index":19,"title":{},"body":{"interfaces/ApiOptions.html":{},"classes/AuthDto.html":{},"interfaces/AuthOptions.html":{},"classes/BaseEntitySchema.html":{},"classes/ConfigService.html":{},"interfaces/ConnectionOptions.html":{},"classes/CreateReadingListDto.html":{},"classes/CreateUserDto.html":{},"classes/EntityRepository.html":{},"interfaces/RuntimeSetismConfig.html":{},"interfaces/SuperadminCredentials.html":{},"interfaces/SwaggerOptions.html":{},"classes/UpdateUserDto.html":{},"classes/UserEntity.html":{},"injectables/UserRepository.html":{}}}],["providers",{"_index":143,"title":{},"body":{"modules/AuthModule.html":{},"modules/DatabaseModule.html":{},"modules/UserModule.html":{}}}],["public",{"_index":87,"title":{},"body":{"controllers/AuthController.html":{},"injectables/AuthService.html":{},"classes/EntityRepository.html":{},"injectables/JwtStrategy.html":{},"classes/UserEntity.html":{},"injectables/UserRepository.html":{},"injectables/UserService.html":{},"miscellaneous/enumerations.html":{}}}],["publisher",{"_index":485,"title":{},"body":{"miscellaneous/enumerations.html":{}}}],["r",{"_index":194,"title":{},"body":{"injectables/AuthService.html":{}}}],["reader",{"_index":484,"title":{},"body":{"miscellaneous/enumerations.html":{}}}],["readinglist",{"_index":372,"title":{},"body":{"classes/UserEntity.html":{}}}],["readinglistkind",{"_index":473,"title":{},"body":{"miscellaneous/enumerations.html":{},"miscellaneous/typealiases.html":{}}}],["readinglisttype",{"_index":245,"title":{},"body":{"classes/CreateReadingListDto.html":{},"miscellaneous/typealiases.html":{}}}],["readonly",{"_index":205,"title":{},"body":{"classes/BaseEntitySchema.html":{},"classes/ConfigService.html":{},"classes/EntityRepository.html":{},"classes/UserEntity.html":{},"injectables/UserRepository.html":{}}}],["record",{"_index":96,"title":{},"body":{"controllers/AuthController.html":{},"classes/EntityRepository.html":{},"controllers/UserController.html":{},"injectables/UserRepository.html":{}}}],["reflect",{"_index":461,"title":{},"body":{"dependencies.html":{}}}],["reflector",{"_index":310,"title":{},"body":{"guards/RolesGuard.html":{}}}],["refreshed",{"_index":172,"title":{},"body":{"interfaces/AuthOptions.html":{}}}],["remove",{"_index":349,"title":{},"body":{"controllers/UserController.html":{},"injectables/UserService.html":{}}}],["remove(id",{"_index":362,"title":{},"body":{"controllers/UserController.html":{},"injectables/UserService.html":{}}}],["required",{"_index":61,"title":{},"body":{"interfaces/ApiOptions.html":{},"interfaces/RuntimeSetismConfig.html":{},"classes/UpdateUserDto.html":{}}}],["reset",{"_index":78,"title":{},"body":{"modules/AppModule.html":{},"modules/AuthModule.html":{},"modules/ConfigModule.html":{},"modules/DatabaseModule.html":{},"modules/UserModule.html":{},"overview.html":{}}}],["rest",{"_index":10,"title":{},"body":{"interfaces/ApiOptions.html":{},"interfaces/RuntimeSetismConfig.html":{}}}],["results",{"_index":65,"title":{},"body":{"interfaces/ApiOptions.html":{},"modules/AppModule.html":{},"controllers/AuthController.html":{},"classes/AuthDto.html":{},"modules/AuthModule.html":{},"interfaces/AuthOptions.html":{},"injectables/AuthService.html":{},"classes/BaseEntitySchema.html":{},"modules/ConfigModule.html":{},"classes/ConfigService.html":{},"interfaces/ConnectionOptions.html":{},"classes/CreateReadingListDto.html":{},"classes/CreateUserDto.html":{},"modules/DatabaseModule.html":{},"injectables/DatabaseService.html":{},"classes/EntityRepository.html":{},"injectables/JwtAuthGuard.html":{},"injectables/JwtStrategy.html":{},"guards/RolesGuard.html":{},"interfaces/RuntimeSetismConfig.html":{},"interfaces/SuperadminCredentials.html":{},"interfaces/SwaggerOptions.html":{},"classes/UpdateUserDto.html":{},"controllers/UserController.html":{},"classes/UserEntity.html":{},"modules/UserModule.html":{},"injectables/UserRepository.html":{},"injectables/UserService.html":{},"coverage.html":{},"dependencies.html":{},"miscellaneous/enumerations.html":{},"miscellaneous/functions.html":{},"index.html":{},"modules.html":{},"overview.html":{},"miscellaneous/typealiases.html":{},"miscellaneous/variables.html":{}}}],["returned.'})@apibadrequestresponse({description",{"_index":98,"title":{},"body":{"controllers/AuthController.html":{}}}],["returned.'})@apinotfoundresponse({description",{"_index":356,"title":{},"body":{"controllers/UserController.html":{}}}],["returns",{"_index":106,"title":{},"body":{"controllers/AuthController.html":{},"injectables/AuthService.html":{},"classes/ConfigService.html":{},"injectables/DatabaseService.html":{},"classes/EntityRepository.html":{},"injectables/JwtStrategy.html":{},"guards/RolesGuard.html":{},"controllers/UserController.html":{},"injectables/UserRepository.html":{},"injectables/UserService.html":{},"miscellaneous/functions.html":{}}}],["rimraf",{"_index":464,"title":{},"body":{"dependencies.html":{}}}],["role",{"_index":197,"title":{},"body":{"injectables/AuthService.html":{},"classes/UserEntity.html":{},"miscellaneous/enumerations.html":{},"miscellaneous/typealiases.html":{},"miscellaneous/variables.html":{}}}],["roles",{"_index":521,"title":{},"body":{"miscellaneous/variables.html":{}}}],["roles_key",{"_index":404,"title":{},"body":{"coverage.html":{},"miscellaneous/variables.html":{}}}],["rolesguard",{"_index":305,"title":{"guards/RolesGuard.html":{}},"body":{"guards/RolesGuard.html":{},"coverage.html":{}}}],["rolesguard)@get",{"_index":361,"title":{},"body":{"controllers/UserController.html":{}}}],["roletype",{"_index":198,"title":{},"body":{"injectables/AuthService.html":{},"classes/UserEntity.html":{},"miscellaneous/typealiases.html":{}}}],["runtimesetismconfig",{"_index":221,"title":{"interfaces/RuntimeSetismConfig.html":{}},"body":{"classes/ConfigService.html":{},"interfaces/RuntimeSetismConfig.html":{},"coverage.html":{}}}],["rxjs",{"_index":466,"title":{},"body":{"dependencies.html":{}}}],["schemafactory.createforclass(userentity",{"_index":523,"title":{},"body":{"miscellaneous/variables.html":{}}}],["secret",{"_index":153,"title":{},"body":{"interfaces/AuthOptions.html":{}}}],["security",{"_index":161,"title":{},"body":{"interfaces/AuthOptions.html":{}}}],["see",{"_index":42,"title":{},"body":{"interfaces/ApiOptions.html":{}}}],["server",{"_index":41,"title":{},"body":{"interfaces/ApiOptions.html":{}}}],["set",{"_index":39,"title":{},"body":{"interfaces/ApiOptions.html":{}}}],["setdefaultconfig",{"_index":214,"title":{},"body":{"classes/ConfigService.html":{}}}],["setism",{"_index":9,"title":{},"body":{"interfaces/ApiOptions.html":{}}}],["setismconfig",{"_index":318,"title":{},"body":{"interfaces/RuntimeSetismConfig.html":{}}}],["setmetadata(roles_key",{"_index":522,"title":{},"body":{"miscellaneous/variables.html":{}}}],["sets",{"_index":152,"title":{},"body":{"interfaces/AuthOptions.html":{}}}],["settings",{"_index":320,"title":{},"body":{"interfaces/RuntimeSetismConfig.html":{}}}],["show",{"_index":395,"title":{},"body":{"injectables/UserService.html":{}}}],["show(id",{"_index":396,"title":{},"body":{"injectables/UserService.html":{}}}],["signupwithemailandpassword",{"_index":90,"title":{},"body":{"controllers/AuthController.html":{},"injectables/AuthService.html":{}}}],["signupwithemailandpassword(createuserdto",{"_index":108,"title":{},"body":{"controllers/AuthController.html":{}}}],["signupwithemailandpassword(undefined",{"_index":195,"title":{},"body":{"injectables/AuthService.html":{}}}],["signuser",{"_index":187,"title":{},"body":{"injectables/AuthService.html":{}}}],["signuser(id",{"_index":196,"title":{},"body":{"injectables/AuthService.html":{}}}],["span",{"_index":175,"title":{},"body":{"interfaces/AuthOptions.html":{}}}],["src/.../config.interface.ts",{"_index":472,"title":{},"body":{"miscellaneous/enumerations.html":{}}}],["src/.../main.ts",{"_index":490,"title":{},"body":{"miscellaneous/functions.html":{}}}],["src/.../reading",{"_index":474,"title":{},"body":{"miscellaneous/enumerations.html":{},"miscellaneous/typealiases.html":{}}}],["src/.../role.decorator.ts",{"_index":519,"title":{},"body":{"miscellaneous/variables.html":{}}}],["src/.../role.enum.ts",{"_index":476,"title":{},"body":{"miscellaneous/enumerations.html":{},"miscellaneous/typealiases.html":{}}}],["src/.../swagger.ts",{"_index":491,"title":{},"body":{"miscellaneous/functions.html":{}}}],["src/.../user.entity.ts",{"_index":517,"title":{},"body":{"miscellaneous/typealiases.html":{},"miscellaneous/variables.html":{}}}],["src/app.module.ts",{"_index":80,"title":{},"body":{"modules/AppModule.html":{}}}],["src/auth/auth.controller.ts",{"_index":85,"title":{},"body":{"controllers/AuthController.html":{},"coverage.html":{}}}],["src/auth/auth.module.ts",{"_index":142,"title":{},"body":{"modules/AuthModule.html":{}}}],["src/auth/auth.service.ts",{"_index":185,"title":{},"body":{"injectables/AuthService.html":{},"coverage.html":{}}}],["src/auth/decorators/role.decorator.ts",{"_index":402,"title":{},"body":{"coverage.html":{},"miscellaneous/variables.html":{}}}],["src/auth/dto/auth.dto.ts",{"_index":118,"title":{},"body":{"classes/AuthDto.html":{},"coverage.html":{}}}],["src/auth/dto/create",{"_index":251,"title":{},"body":{"classes/CreateUserDto.html":{},"coverage.html":{}}}],["src/auth/guards/jwt.guard.ts",{"_index":299,"title":{},"body":{"injectables/JwtAuthGuard.html":{},"coverage.html":{}}}],["src/auth/guards/role.guard.ts",{"_index":307,"title":{},"body":{"guards/RolesGuard.html":{},"coverage.html":{}}}],["src/auth/role.enum.ts",{"_index":481,"title":{},"body":{"miscellaneous/enumerations.html":{},"miscellaneous/typealiases.html":{}}}],["src/auth/strategies/jwt.strategy.ts",{"_index":300,"title":{},"body":{"injectables/JwtStrategy.html":{},"coverage.html":{}}}],["src/config/config.interface.ts",{"_index":6,"title":{},"body":{"interfaces/ApiOptions.html":{},"interfaces/AuthOptions.html":{},"interfaces/ConnectionOptions.html":{},"interfaces/RuntimeSetismConfig.html":{},"interfaces/SuperadminCredentials.html":{},"interfaces/SwaggerOptions.html":{},"coverage.html":{},"miscellaneous/enumerations.html":{}}}],["src/config/config.module.ts",{"_index":211,"title":{},"body":{"modules/ConfigModule.html":{}}}],["src/config/config.service.ts",{"_index":212,"title":{},"body":{"classes/ConfigService.html":{},"coverage.html":{}}}],["src/db/base.schema.ts",{"_index":204,"title":{},"body":{"classes/BaseEntitySchema.html":{},"coverage.html":{}}}],["src/db/db.module.ts",{"_index":263,"title":{},"body":{"modules/DatabaseModule.html":{}}}],["src/db/db.service.ts",{"_index":264,"title":{},"body":{"injectables/DatabaseService.html":{},"coverage.html":{}}}],["src/db/entity.repository.ts",{"_index":268,"title":{},"body":{"classes/EntityRepository.html":{},"coverage.html":{}}}],["src/main.ts",{"_index":421,"title":{},"body":{"coverage.html":{},"miscellaneous/functions.html":{}}}],["src/swagger.ts",{"_index":424,"title":{},"body":{"coverage.html":{},"miscellaneous/functions.html":{}}}],["src/user/dto/readinglist",{"_index":235,"title":{},"body":{"classes/CreateReadingListDto.html":{},"coverage.html":{}}}],["src/user/dto/update",{"_index":329,"title":{},"body":{"classes/UpdateUserDto.html":{},"coverage.html":{}}}],["src/user/models/user.entity.ts",{"_index":367,"title":{},"body":{"classes/UserEntity.html":{},"coverage.html":{},"miscellaneous/typealiases.html":{},"miscellaneous/variables.html":{}}}],["src/user/models/user.repository.ts",{"_index":391,"title":{},"body":{"injectables/UserRepository.html":{},"coverage.html":{}}}],["src/user/reading",{"_index":479,"title":{},"body":{"miscellaneous/enumerations.html":{},"miscellaneous/typealiases.html":{}}}],["src/user/user.controller.ts",{"_index":347,"title":{},"body":{"controllers/UserController.html":{},"coverage.html":{}}}],["src/user/user.module.ts",{"_index":390,"title":{},"body":{"modules/UserModule.html":{}}}],["src/user/user.service.ts",{"_index":394,"title":{},"body":{"injectables/UserService.html":{},"coverage.html":{}}}],["started",{"_index":497,"title":{"index.html":{}},"body":{}}],["statements",{"_index":399,"title":{},"body":{"coverage.html":{}}}],["storeuserrecord",{"_index":188,"title":{},"body":{"injectables/AuthService.html":{}}}],["storeuserrecord(email",{"_index":200,"title":{},"body":{"injectables/AuthService.html":{}}}],["string",{"_index":49,"title":{},"body":{"interfaces/ApiOptions.html":{},"classes/AuthDto.html":{},"interfaces/AuthOptions.html":{},"injectables/AuthService.html":{},"interfaces/ConnectionOptions.html":{},"classes/CreateReadingListDto.html":{},"classes/CreateUserDto.html":{},"classes/EntityRepository.html":{},"interfaces/SuperadminCredentials.html":{},"interfaces/SwaggerOptions.html":{},"classes/UpdateUserDto.html":{},"controllers/UserController.html":{},"classes/UserEntity.html":{},"injectables/UserRepository.html":{},"injectables/UserService.html":{},"miscellaneous/variables.html":{}}}],["successfully",{"_index":97,"title":{},"body":{"controllers/AuthController.html":{},"controllers/UserController.html":{}}}],["super_admin",{"_index":482,"title":{},"body":{"miscellaneous/enumerations.html":{}}}],["superadmin",{"_index":167,"title":{},"body":{"interfaces/AuthOptions.html":{},"interfaces/SuperadminCredentials.html":{}}}],["superadmincredentials",{"_index":150,"title":{"interfaces/SuperadminCredentials.html":{}},"body":{"interfaces/AuthOptions.html":{},"interfaces/SuperadminCredentials.html":{},"coverage.html":{}}}],["support",{"_index":509,"title":{},"body":{"modules.html":{}}}],["svg",{"_index":510,"title":{},"body":{"modules.html":{}}}],["swagger",{"_index":26,"title":{},"body":{"interfaces/ApiOptions.html":{},"dependencies.html":{}}}],["swaggeroptions",{"_index":324,"title":{"interfaces/SwaggerOptions.html":{}},"body":{"interfaces/SwaggerOptions.html":{},"coverage.html":{}}}],["table",{"_index":430,"title":{},"body":{"coverage.html":{}}}],["tablesort(document.getelementbyid('coverage",{"_index":429,"title":{},"body":{"coverage.html":{}}}],["team",{"_index":500,"title":{},"body":{"index.html":{}}}],["template",{"_index":45,"title":{},"body":{"interfaces/ApiOptions.html":{}}}],["test",{"_index":478,"title":{},"body":{"miscellaneous/enumerations.html":{}}}],["test@email.com'})@isemail",{"_index":123,"title":{},"body":{"classes/AuthDto.html":{},"classes/CreateUserDto.html":{}}}],["testconnectionuri",{"_index":230,"title":{},"body":{"interfaces/ConnectionOptions.html":{}}}],["testing",{"_index":233,"title":{},"body":{"interfaces/ConnectionOptions.html":{}}}],["time",{"_index":170,"title":{},"body":{"interfaces/AuthOptions.html":{}}}],["title",{"_index":325,"title":{},"body":{"interfaces/SwaggerOptions.html":{}}}],["token",{"_index":159,"title":{},"body":{"interfaces/AuthOptions.html":{}}}],["transformer",{"_index":446,"title":{},"body":{"dependencies.html":{}}}],["trim",{"_index":374,"title":{},"body":{"classes/UserEntity.html":{}}}],["true",{"_index":375,"title":{},"body":{"classes/UserEntity.html":{}}}],["true})@isdefined",{"_index":240,"title":{},"body":{"classes/CreateReadingListDto.html":{}}}],["type",{"_index":38,"title":{},"body":{"interfaces/ApiOptions.html":{},"controllers/AuthController.html":{},"classes/AuthDto.html":{},"interfaces/AuthOptions.html":{},"injectables/AuthService.html":{},"classes/BaseEntitySchema.html":{},"classes/ConfigService.html":{},"interfaces/ConnectionOptions.html":{},"classes/CreateReadingListDto.html":{},"classes/CreateUserDto.html":{},"injectables/DatabaseService.html":{},"classes/EntityRepository.html":{},"injectables/JwtStrategy.html":{},"guards/RolesGuard.html":{},"interfaces/RuntimeSetismConfig.html":{},"interfaces/SuperadminCredentials.html":{},"interfaces/SwaggerOptions.html":{},"classes/UpdateUserDto.html":{},"controllers/UserController.html":{},"classes/UserEntity.html":{},"injectables/UserRepository.html":{},"injectables/UserService.html":{},"coverage.html":{},"miscellaneous/functions.html":{},"miscellaneous/typealiases.html":{},"miscellaneous/variables.html":{}}}],["typealiases",{"_index":514,"title":{"miscellaneous/typealiases.html":{}},"body":{}}],["ui",{"_index":468,"title":{},"body":{"dependencies.html":{}}}],["unauthorized",{"_index":101,"title":{},"body":{"controllers/AuthController.html":{}}}],["undefined",{"_index":378,"title":{},"body":{"classes/UserEntity.html":{}}}],["unique",{"_index":380,"title":{},"body":{"classes/UserEntity.html":{}}}],["unknown",{"_index":107,"title":{},"body":{"controllers/AuthController.html":{},"injectables/AuthService.html":{},"injectables/JwtStrategy.html":{},"injectables/UserService.html":{}}}],["update",{"_index":350,"title":{},"body":{"controllers/UserController.html":{},"injectables/UserService.html":{}}}],["update(id",{"_index":364,"title":{},"body":{"controllers/UserController.html":{},"injectables/UserService.html":{}}}],["updateentitydata",{"_index":295,"title":{},"body":{"classes/EntityRepository.html":{},"injectables/UserRepository.html":{}}}],["updatequery",{"_index":296,"title":{},"body":{"classes/EntityRepository.html":{},"injectables/UserRepository.html":{}}}],["updateuserdto",{"_index":328,"title":{"classes/UpdateUserDto.html":{}},"body":{"classes/UpdateUserDto.html":{},"controllers/UserController.html":{},"injectables/UserService.html":{},"coverage.html":{}}}],["used",{"_index":57,"title":{},"body":{"interfaces/ApiOptions.html":{},"interfaces/AuthOptions.html":{},"interfaces/RuntimeSetismConfig.html":{},"interfaces/SuperadminCredentials.html":{}}}],["user",{"_index":128,"title":{},"body":{"classes/AuthDto.html":{},"classes/CreateUserDto.html":{},"classes/UpdateUserDto.html":{},"controllers/UserController.html":{}}}],["user.dto.ts",{"_index":252,"title":{},"body":{"classes/CreateUserDto.html":{},"classes/UpdateUserDto.html":{},"coverage.html":{}}}],["usercontroller",{"_index":346,"title":{"controllers/UserController.html":{}},"body":{"controllers/UserController.html":{},"modules/UserModule.html":{},"coverage.html":{}}}],["userdocument",{"_index":516,"title":{},"body":{"miscellaneous/typealiases.html":{}}}],["userentity",{"_index":366,"title":{"classes/UserEntity.html":{}},"body":{"classes/UserEntity.html":{},"coverage.html":{}}}],["userentityschema",{"_index":427,"title":{},"body":{"coverage.html":{},"miscellaneous/variables.html":{}}}],["usermodel",{"_index":393,"title":{},"body":{"injectables/UserRepository.html":{}}}],["usermodule",{"_index":76,"title":{"modules/UserModule.html":{}},"body":{"modules/AppModule.html":{},"modules/UserModule.html":{},"modules.html":{},"overview.html":{}}}],["username",{"_index":334,"title":{},"body":{"classes/UpdateUserDto.html":{},"classes/UserEntity.html":{}}}],["useroles",{"_index":406,"title":{},"body":{"coverage.html":{},"miscellaneous/variables.html":{}}}],["userrepository",{"_index":141,"title":{"injectables/UserRepository.html":{}},"body":{"modules/AuthModule.html":{},"injectables/AuthService.html":{},"modules/UserModule.html":{},"injectables/UserRepository.html":{},"injectables/UserService.html":{},"coverage.html":{},"overview.html":{}}}],["userservice",{"_index":389,"title":{"injectables/UserService.html":{}},"body":{"modules/UserModule.html":{},"injectables/UserService.html":{},"coverage.html":{},"overview.html":{}}}],["v33",{"_index":498,"title":{},"body":{"index.html":{}}}],["valid",{"_index":125,"title":{},"body":{"classes/AuthDto.html":{},"interfaces/AuthOptions.html":{},"classes/CreateUserDto.html":{},"classes/UpdateUserDto.html":{}}}],["validate",{"_index":215,"title":{},"body":{"classes/ConfigService.html":{},"injectables/JwtStrategy.html":{}}}],["validate(payload",{"_index":302,"title":{},"body":{"injectables/JwtStrategy.html":{}}}],["validating",{"_index":156,"title":{},"body":{"interfaces/AuthOptions.html":{}}}],["validation.'})@apiconflictresponse({description",{"_index":112,"title":{},"body":{"controllers/AuthController.html":{},"controllers/UserController.html":{}}}],["validation.'})@apiunauthorizedresponse({description",{"_index":100,"title":{},"body":{"controllers/AuthController.html":{}}}],["validator",{"_index":448,"title":{},"body":{"dependencies.html":{}}}],["value",{"_index":29,"title":{},"body":{"interfaces/ApiOptions.html":{},"interfaces/AuthOptions.html":{},"classes/EntityRepository.html":{},"interfaces/SuperadminCredentials.html":{},"injectables/UserRepository.html":{},"miscellaneous/enumerations.html":{},"miscellaneous/variables.html":{}}}],["variable",{"_index":403,"title":{},"body":{"coverage.html":{}}}],["variables",{"_index":518,"title":{"miscellaneous/variables.html":{}},"body":{"miscellaneous/variables.html":{}}}],["vendure",{"_index":54,"title":{},"body":{"interfaces/ApiOptions.html":{}}}],["verification",{"_index":171,"title":{},"body":{"interfaces/AuthOptions.html":{}}}],["verificationtokenduration",{"_index":151,"title":{},"body":{"interfaces/AuthOptions.html":{}}}],["version",{"_index":326,"title":{},"body":{"interfaces/SwaggerOptions.html":{}}}],["voyage",{"_index":503,"title":{},"body":{"index.html":{}}}],["well",{"_index":13,"title":{},"body":{"interfaces/ApiOptions.html":{}}}],["wishlist",{"_index":342,"title":{},"body":{"classes/UpdateUserDto.html":{},"classes/UserEntity.html":{}}}],["yes",{"_index":291,"title":{},"body":{"classes/EntityRepository.html":{},"injectables/UserRepository.html":{}}}],["zeit/ms",{"_index":177,"title":{},"body":{"interfaces/AuthOptions.html":{}}}],["zoom",{"_index":77,"title":{},"body":{"modules/AppModule.html":{},"modules/AuthModule.html":{},"modules/ConfigModule.html":{},"modules/DatabaseModule.html":{},"modules/UserModule.html":{},"overview.html":{}}}]],"pipeline":["stemmer"]},
    "store": {"interfaces/ApiOptions.html":{"url":"interfaces/ApiOptions.html","title":"interface - ApiOptions","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  \n  ApiOptions\n\n\n\n        \n            API Info\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/config/config.interface.ts\n        \n\n\n            \n                Description\n            \n            \n                The ApiOptions define how the Setism REST APIs are exposed, as well as allowing the API layer\nto be extended with middleware.\n\n            \n\n\n        \n            Index\n            \n                \n                    \n                        \n                            Properties\n                        \n                    \n                    \n                        \n                            \n                                \n                                            Optional\n                                        \n                                            cors\n                                        \n                                \n                                \n                                            Optional\n                                        \n                                            env\n                                        \n                                \n                                \n                                            Optional\n                                        \n                                            hostname\n                                        \n                                \n                                \n                                        \n                                            port\n                                        \n                                \n                                \n                                            Optional\n                                        \n                                            prefix\n                                        \n                                \n                                \n                                            Optional\n                                        \n                                            swagger\n                                        \n                                \n                            \n                        \n                    \n                \n            \n        \n\n\n\n            \n                Properties\n                    \n                        \n                                \n                                    \n                                        \n                                        cors\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        cors:     CorsOptions\n\n                                    \n                                \n\n                                \n                                    \n                                        Default value : {\norigin: \"*\",\nmaxAge: 0,\noptionsSuccessStatus: 200,\nexposedHeaders: [\"Authorization\"]\n}\n\n                                    \n                                \n\n                                    \n                                        \n                                            Type :     CorsOptions\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                            \n                                \n                                    Set the CORS handling for the server. See the express CORS docs.\n  origin: \"*\",\n  maxAge: 0,\n  optionsSuccessStatus: 200,\n  exposedHeaders: [\"Authorization\"]\n}\n\n                                \n                            \n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        env\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        env:     template literal type\n\n                                    \n                                \n\n                                \n                                    \n                                        Default value : 'development'\n\n                                    \n                                \n\n                                    \n                                        \n                                            Type :     template literal type\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                            \n                                \n                                    Set the environment of the server. If not set, the environment will be development.\n\n                                \n                            \n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        hostname\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        hostname:         string\n\n                                    \n                                \n\n                                \n                                    \n                                        Default value : ''\n\n                                    \n                                \n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                            \n                                \n                                    Set the hostname of the server. If not set, the server will be available on localhost.\n\n                                \n                            \n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        port\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        port:         number\n\n                                    \n                                \n\n                                \n                                    \n                                        Default value : 3000\n\n                                    \n                                \n\n                                    \n                                        \n                                            Type :         number\n\n                                        \n                                    \n\n\n\n\n\n                            \n                                \n                                    Which port the Vendure server should listen on.\n\n                                \n                            \n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        prefix\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        prefix:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                            \n                                \n                                    API base prefix, used for both swagger server path, and overall API path\n\n                                \n                            \n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        swagger\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        swagger:         Required\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         Required\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                            \n                                \n                                    Swagger API Documentation page options\n\n                                \n                            \n                        \n                    \n            \n    \n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"modules/AppModule.html":{"url":"modules/AppModule.html","title":"module - AppModule","body":"\n                   \n\n\n\n\n    Modules\n    AppModule\n\n\n\n    \n        \n\n\n\n\n\ndependencies\n\ndependencies\n\ncluster_AppModule\n\n\n\ncluster_AppModule_imports\n\n\n\n\nAuthModule\n\nAuthModule\n\n\n\nAppModule\n\nAppModule\n\nAppModule -->\n\nAuthModule->AppModule\n\n\n\n\n\nConfigModule\n\nConfigModule\n\nAppModule -->\n\nConfigModule->AppModule\n\n\n\n\n\nDatabaseModule\n\nDatabaseModule\n\nAppModule -->\n\nDatabaseModule->AppModule\n\n\n\n\n\nUserModule\n\nUserModule\n\nAppModule -->\n\nUserModule->AppModule\n\n\n\n\n\n\n    \n    \n    \n        Zoom in\n        Reset\n        Zoom out\n    \n\n\n\n\n\n    \n        API Info\n    \n\n\n\n    \n\n        \n            File\n        \n        \n            src/app.module.ts\n        \n\n\n\n\n\n        \n            \n                \n                    Imports\n                    \n                        \n                            AuthModule\n                        \n                        \n                            ConfigModule\n                        \n                        \n                            DatabaseModule\n                        \n                        \n                            UserModule\n                        \n                    \n                \n            \n        \n\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"controllers/AuthController.html":{"url":"controllers/AuthController.html","title":"controller - AuthController","body":"\n                   \n\n\n\n\n\n\n  Controllers\n  AuthController\n\n\n\n        \n            API Info\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/auth/auth.controller.ts\n        \n\n\n\n\n\n\n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    Public\n                                    Async\n                                loginWithEmailAndPassword\n                            \n                            \n                                    Public\n                                    Async\n                                signUpWithEmailAndPassword\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        Public\n                        Async\n                        loginWithEmailAndPassword\n                        \n                    \n                \n            \n            \n                \n                    \n                    loginWithEmailAndPassword(authDto: AuthDto)\n                \n            \n\n            \n                \n                    Decorators : \n                    \n                    @ApiBody({type: AuthDto})@ApiOkResponse({description: 'The record has been successfully returned.'})@ApiBadRequestResponse({description: 'The record has failed validation.'})@ApiUnauthorizedResponse({description: 'Unauthorized action.'})@ApiForbiddenResponse({description: 'Forbidden!'})@Post('signin')\n                \n            \n\n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    authDto\n                                    \n                                                AuthDto\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     unknown\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        Public\n                        Async\n                        signUpWithEmailAndPassword\n                        \n                    \n                \n            \n            \n                \n                    \n                    signUpWithEmailAndPassword(createUserDto: CreateUserDto)\n                \n            \n\n            \n                \n                    Decorators : \n                    \n                    @ApiBody({type: CreateUserDto})@ApiCreatedResponse({description: 'The record has been successfully created.'})@ApiBadRequestResponse({description: 'The record has failed validation.'})@ApiConflictResponse({description: 'The record has an internal conflict.'})@ApiForbiddenResponse({description: 'Forbidden!'})@Post('signup')\n                \n            \n\n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    createUserDto\n                                    \n                                                CreateUserDto\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     unknown\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/AuthDto.html":{"url":"classes/AuthDto.html","title":"class - AuthDto","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  AuthDto\n\n\n\n        \n            API Info\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/auth/dto/auth.dto.ts\n        \n\n\n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                email\n                            \n                            \n                                password\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n\n            \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                        email\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @ApiProperty({type: 'String', description: 'Email address', default: 'test@email.com'})@IsEmail({}, {message: 'Email address must be a valid email!'})@IsDefined({message: 'Email address must not be empty!'})\n                        \n                    \n                \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        password\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @ApiProperty({type: 'String', description: 'User password', default: 'password123'})@IsDefined({message: 'Password must not be empty!'})@MinLength(6, {message: 'Passowrd must have at least 6 characters!'})@MaxLength(32, {message: 'Password must be at most 32 characters!'})\n                        \n                    \n                \n\n\n        \n    \n\n\n\n\n\n\n\n\n    \n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"modules/AuthModule.html":{"url":"modules/AuthModule.html","title":"module - AuthModule","body":"\n                   \n\n\n\n\n    Modules\n    AuthModule\n\n\n\n    \n        \n\n\n\n\n\ndependencies\n\ndependencies\n\ncluster_AuthModule\n\n\n\ncluster_AuthModule_exports\n\n\n\ncluster_AuthModule_providers\n\n\n\n\nAuthService \n\nAuthService \n\n\n\nAuthModule\n\nAuthModule\n\nAuthService  -->\n\nAuthModule->AuthService \n\n\n\n\n\nAuthService\n\nAuthService\n\nAuthModule -->\n\nAuthService->AuthModule\n\n\n\n\n\nJwtStrategy\n\nJwtStrategy\n\nAuthModule -->\n\nJwtStrategy->AuthModule\n\n\n\n\n\nUserRepository\n\nUserRepository\n\nAuthModule -->\n\nUserRepository->AuthModule\n\n\n\n\n\n\n    \n    \n    \n        Zoom in\n        Reset\n        Zoom out\n    \n\n\n\n\n\n    \n        API Info\n    \n\n\n\n    \n\n        \n            File\n        \n        \n            src/auth/auth.module.ts\n        \n\n\n\n\n\n        \n            \n                \n                    Providers\n                    \n                        \n                            AuthService\n                        \n                        \n                            JwtStrategy\n                        \n                        \n                            UserRepository\n                        \n                    \n                \n                \n                    Controllers\n                    \n                        \n                            AuthController\n                        \n                    \n                \n                \n                    Exports\n                    \n                        \n                            AuthService\n                        \n                    \n                \n            \n        \n\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/AuthOptions.html":{"url":"interfaces/AuthOptions.html","title":"interface - AuthOptions","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  \n  AuthOptions\n\n\n\n        \n            API Info\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/config/config.interface.ts\n        \n\n\n            \n                Description\n            \n            \n                The AuthOptions define how authentication and authorization is managed.\n\n            \n\n\n        \n            Index\n            \n                \n                    \n                        \n                            Properties\n                        \n                    \n                    \n                        \n                            \n                                \n                                            Optional\n                                        \n                                            jwtSecretKey\n                                        \n                                \n                                \n                                            Optional\n                                        \n                                            pepper\n                                        \n                                \n                                \n                                            Optional\n                                        \n                                            superadminCredentials\n                                        \n                                \n                                \n                                            Optional\n                                        \n                                            verificationTokenDuration\n                                        \n                                \n                            \n                        \n                    \n                \n            \n        \n\n\n\n            \n                Properties\n                    \n                        \n                                \n                                    \n                                        \n                                        jwtSecretKey\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        jwtSecretKey:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                            \n                                \n                                    Sets the secret key for decoding and validating a JWT access token\n\n                                \n                            \n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        pepper\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        pepper:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                            \n                                \n                                    Extra security layer for hashing passwords\n\n                                \n                            \n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        superadminCredentials\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        superadminCredentials:         SuperadminCredentials\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         SuperadminCredentials\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                            \n                                \n                                    Configures the credentials to be used to create a superadmin\n\n                                \n                            \n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        verificationTokenDuration\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        verificationTokenDuration:     string | number\n\n                                    \n                                \n\n                                \n                                    \n                                        Default value : '7d'\n\n                                    \n                                \n\n                                    \n                                        \n                                            Type :     string | number\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                            \n                                \n                                    Sets the length of time that a verification token is valid for, after which the verification token must be refreshed.\nExpressed as a string describing a time span per\nzeit/ms.  Eg: 60, '2 days', '10h', '7d'\n\n                                \n                            \n                        \n                    \n            \n    \n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/AuthService.html":{"url":"injectables/AuthService.html","title":"injectable - AuthService","body":"\n                   \n\n\n\n\n\n\n\n\n  Injectables\n  AuthService\n\n\n\n        \n            API Info\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/auth/auth.service.ts\n        \n\n\n\n\n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    Public\n                                    Async\n                                loginWithEmailAndPassword\n                            \n                            \n                                    Public\n                                    Async\n                                signUpWithEmailAndPassword\n                            \n                            \n                                    Private\n                                signUser\n                            \n                            \n                                    Private\n                                    Async\n                                storeUserRecord\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(userRepository: UserRepository, jwtService: JwtService, configService: ConfigService)\n                    \n                \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        userRepository\n                                                  \n                                                        \n                                                                        UserRepository\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        jwtService\n                                                  \n                                                        \n                                                                    JwtService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        configService\n                                                  \n                                                        \n                                                                        ConfigService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        Public\n                        Async\n                        loginWithEmailAndPassword\n                        \n                    \n                \n            \n            \n                \n                    \n                    loginWithEmailAndPassword(r: AuthDto)\n                \n            \n\n\n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    r\n                                    \n                                                AuthDto\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     unknown\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        Public\n                        Async\n                        signUpWithEmailAndPassword\n                        \n                    \n                \n            \n            \n                \n                    \n                    signUpWithEmailAndPassword(undefined: CreateUserDto)\n                \n            \n\n\n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    \n                                                CreateUserDto\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     unknown\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        Private\n                        signUser\n                        \n                    \n                \n            \n            \n                \n                    \n                    signUser(id: string, role: RoleType)\n                \n            \n\n\n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    id\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    role\n                                    \n                                                RoleType\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         any\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        Private\n                        Async\n                        storeUserRecord\n                        \n                    \n                \n            \n            \n                \n                    \n                    storeUserRecord(email: string, hash: string, fullName: string)\n                \n            \n\n\n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    email\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    hash\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    fullName\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     unknown\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/BaseEntitySchema.html":{"url":"classes/BaseEntitySchema.html","title":"class - BaseEntitySchema","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  BaseEntitySchema\n\n\n\n        \n            API Info\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/db/base.schema.ts\n        \n\n\n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Readonly\n                                _id\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n\n            \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                            Readonly\n                        _id\n                        \n                    \n                \n            \n                \n                    \n                        Type :     ObjectID\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @Prop()\n                        \n                    \n                \n\n\n        \n    \n\n\n\n\n\n\n\n\n    \n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"modules/ConfigModule.html":{"url":"modules/ConfigModule.html","title":"module - ConfigModule","body":"\n                   \n\n\n\n\n    Modules\n    ConfigModule\n\n\n\n    \n        \n\n\n\n\n\ndependencies\n\ndependencies\n\ncluster_ConfigModule\n\n\n\ncluster_ConfigModule_exports\n\n\n\n\nConfigService \n\nConfigService \n\n\n\nConfigModule\n\nConfigModule\n\nConfigService  -->\n\nConfigModule->ConfigService \n\n\n\n\n\n\n    \n    \n    \n        Zoom in\n        Reset\n        Zoom out\n    \n\n\n\n\n\n    \n        API Info\n    \n\n\n\n    \n\n        \n            File\n        \n        \n            src/config/config.module.ts\n        \n\n\n\n\n\n        \n            \n                \n                    Exports\n                    \n                        \n                            ConfigService\n                        \n                    \n                \n            \n        \n\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/ConfigService.html":{"url":"classes/ConfigService.html","title":"class - ConfigService","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  ConfigService\n\n\n\n        \n            API Info\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/config/config.service.ts\n        \n\n\n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Private\n                                    Readonly\n                                config\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    Private\n                                setDefaultConfig\n                            \n                            \n                                    Private\n                                validate\n                            \n                        \n                    \n                \n\n\n\n\n\n                    \n                        \n                            Accessors\n                        \n                    \n                    \n                        \n                            \n                                \n                                    isDevelopment\n                                \n                                \n                                    isProduction\n                                \n                                \n                                    isTest\n                                \n                                \n                                    apiOptions\n                                \n                                \n                                    authOptions\n                                \n                                \n                                    dbOptions\n                                \n                            \n                        \n                    \n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor()\n                    \n                \n\n            \n        \n\n\n            \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                            Private\n                            Readonly\n                        config\n                        \n                    \n                \n            \n                \n                    \n                        Type :         RuntimeSetismConfig\n\n                    \n                \n\n\n        \n    \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        Private\n                        setDefaultConfig\n                        \n                    \n                \n            \n            \n                \n                    \n                    setDefaultConfig()\n                \n            \n\n\n\n\n            \n                \n\n                    \n                        Returns :         RuntimeSetismConfig\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        Private\n                        validate\n                        \n                    \n                \n            \n            \n                \n                    \n                    validate()\n                \n            \n\n\n\n\n            \n                \n\n                    \n                        Returns :         any\n\n                    \n                \n            \n        \n    \n\n\n\n\n\n\n            \n    \n        Accessors\n    \n        \n            \n                \n                    \n                        \n                        isDevelopment\n                    \n                \n\n                \n                    \n                        getisDevelopment()\n                    \n                \n\n            \n        \n        \n            \n                \n                    \n                        \n                        isProduction\n                    \n                \n\n                \n                    \n                        getisProduction()\n                    \n                \n\n            \n        \n        \n            \n                \n                    \n                        \n                        isTest\n                    \n                \n\n                \n                    \n                        getisTest()\n                    \n                \n\n            \n        \n        \n            \n                \n                    \n                        \n                        apiOptions\n                    \n                \n\n                \n                    \n                        getapiOptions()\n                    \n                \n\n            \n        \n        \n            \n                \n                    \n                        \n                        authOptions\n                    \n                \n\n                \n                    \n                        getauthOptions()\n                    \n                \n\n            \n        \n        \n            \n                \n                    \n                        \n                        dbOptions\n                    \n                \n\n                \n                    \n                        getdbOptions()\n                    \n                \n\n            \n        \n\n    \n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/ConnectionOptions.html":{"url":"interfaces/ConnectionOptions.html","title":"interface - ConnectionOptions","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  \n  ConnectionOptions\n\n\n\n        \n            API Info\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/config/config.interface.ts\n        \n\n\n\n\n        \n            Index\n            \n                \n                    \n                        \n                            Properties\n                        \n                    \n                    \n                        \n                            \n                                \n                                            Optional\n                                        \n                                            connectionUri\n                                        \n                                \n                                \n                                            Optional\n                                        \n                                            testConnectionUri\n                                        \n                                \n                            \n                        \n                    \n                \n            \n        \n\n\n\n            \n                Properties\n                    \n                        \n                                \n                                    \n                                        \n                                        connectionUri\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        connectionUri:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                            \n                                \n                                    Database connection string\n\n                                \n                            \n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        testConnectionUri\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        testConnectionUri:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                            \n                                \n                                    Database connection string for testing env\n\n                                \n                            \n                        \n                    \n            \n    \n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/CreateReadingListDto.html":{"url":"classes/CreateReadingListDto.html","title":"class - CreateReadingListDto","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  CreateReadingListDto\n\n\n\n        \n            API Info\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/user/dto/readingList-create.dto.ts\n        \n\n\n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                books\n                            \n                            \n                                    Optional\n                                description\n                            \n                            \n                                kind\n                            \n                            \n                                name\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n\n            \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                        books\n                        \n                    \n                \n            \n                \n                    \n                        Type :     string[]\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @IsString({each: true})@IsDefined()\n                        \n                    \n                \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Optional\n                        description\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @IsString()@IsOptional()@MinLength(20, {message: 'Name must have at least 20 characters'})@MaxLength(1024, {message: 'Name must have at most 1024 characters'})\n                        \n                    \n                \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        kind\n                        \n                    \n                \n            \n                \n                    \n                        Type :         ReadingListType\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @IsEnum(ReadingListKind)@IsDefined()\n                        \n                    \n                \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        name\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @IsString()@IsDefined()@MinLength(3, {message: 'Name must have at least 3 characters'})@MaxLength(54, {message: 'Name must have at most 54 characters'})\n                        \n                    \n                \n\n\n        \n    \n\n\n\n\n\n\n\n\n    \n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/CreateUserDto.html":{"url":"classes/CreateUserDto.html","title":"class - CreateUserDto","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  CreateUserDto\n\n\n\n        \n            API Info\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/auth/dto/create-user.dto.ts\n        \n\n\n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                email\n                            \n                            \n                                fullName\n                            \n                            \n                                password\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n\n            \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                        email\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @ApiProperty({type: 'String', description: 'Email address', default: 'test@email.com'})@IsEmail({}, {message: 'Email address must be a valid email!'})@IsDefined({message: 'Email address must not be empty!'})\n                        \n                    \n                \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        fullName\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @ApiProperty({type: 'String', description: 'User full name', default: 'Api Fullname'})@IsDefined({message: 'Name must not be empty!'})@MinLength(4, {message: 'Name must be at least 4 characters!'})@MaxLength(26, {message: 'Name must be at most 26 characters!'})\n                        \n                    \n                \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        password\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @ApiProperty({type: 'String', description: 'User password', default: 'password123'})@IsDefined({message: 'Password must not be empty!'})@MinLength(6, {message: 'Passowrd must have at least 6 characters!'})@MaxLength(32, {message: 'Password must be at most 32 characters!'})\n                        \n                    \n                \n\n\n        \n    \n\n\n\n\n\n\n\n\n    \n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"modules/DatabaseModule.html":{"url":"modules/DatabaseModule.html","title":"module - DatabaseModule","body":"\n                   \n\n\n\n\n    Modules\n    DatabaseModule\n\n\n\n    \n        \n\n\n\n\n\ndependencies\n\ndependencies\n\ncluster_DatabaseModule\n\n\n\ncluster_DatabaseModule_exports\n\n\n\ncluster_DatabaseModule_providers\n\n\n\n\nDatabaseService \n\nDatabaseService \n\n\n\nDatabaseModule\n\nDatabaseModule\n\nDatabaseService  -->\n\nDatabaseModule->DatabaseService \n\n\n\n\n\nDatabaseService\n\nDatabaseService\n\nDatabaseModule -->\n\nDatabaseService->DatabaseModule\n\n\n\n\n\n\n    \n    \n    \n        Zoom in\n        Reset\n        Zoom out\n    \n\n\n\n\n\n    \n        API Info\n    \n\n\n\n    \n\n        \n            File\n        \n        \n            src/db/db.module.ts\n        \n\n\n\n\n\n        \n            \n                \n                    Providers\n                    \n                        \n                            DatabaseService\n                        \n                    \n                \n                \n                    Exports\n                    \n                        \n                            DatabaseService\n                        \n                    \n                \n            \n        \n\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/DatabaseService.html":{"url":"injectables/DatabaseService.html","title":"injectable - DatabaseService","body":"\n                   \n\n\n\n\n\n\n\n\n  Injectables\n  DatabaseService\n\n\n\n        \n            API Info\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/db/db.service.ts\n        \n\n\n\n\n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                getDbHandle\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(connection: Connection)\n                    \n                \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        connection\n                                                  \n                                                        \n                                                                    Connection\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        getDbHandle\n                        \n                    \n                \n            \n            \n                \ngetDbHandle()\n                \n            \n\n\n\n\n            \n                \n\n                    \n                        Returns :     Connection\n\n                    \n                \n            \n        \n    \n\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/EntityRepository.html":{"url":"classes/EntityRepository.html","title":"class - EntityRepository","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  EntityRepository\n\n\n\n        \n            API Info\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/db/entity.repository.ts\n        \n\n\n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Private\n                                    Readonly\n                                baseProjection\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    Public\n                                    Async\n                                create\n                            \n                            \n                                    Public\n                                    Async\n                                deleteMany\n                            \n                            \n                                    Public\n                                    Async\n                                deleteOne\n                            \n                            \n                                    Public\n                                    Async\n                                find\n                            \n                            \n                                    Public\n                                    Async\n                                findById\n                            \n                            \n                                    Public\n                                    Async\n                                findByIdAndUpdate\n                            \n                            \n                                    Public\n                                    Async\n                                findOne\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(entityModal: Model)\n                    \n                \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        entityModal\n                                                  \n                                                        \n                                                                    Model\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                            Private\n                            Readonly\n                        baseProjection\n                        \n                    \n                \n            \n                \n                    \n                        Type :         object\n\n                    \n                \n                \n                    \n                        Default value : { __v: 0 }\n                    \n                \n\n\n        \n    \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        Public\n                        Async\n                        create\n                        \n                    \n                \n            \n            \n                \n                    \n                    create(createEntityData: Partial)\n                \n            \n\n\n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    createEntityData\n                                    \n                                            Partial\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     Promise\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        Public\n                        Async\n                        deleteMany\n                        \n                    \n                \n            \n            \n                \n                    \n                    deleteMany(entityFilterQuery: FilterQuery)\n                \n            \n\n\n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    entityFilterQuery\n                                    \n                                            FilterQuery\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     Promise\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        Public\n                        Async\n                        deleteOne\n                        \n                    \n                \n            \n            \n                \n                    \n                    deleteOne(entityFilterQuery: FilterQuery)\n                \n            \n\n\n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    entityFilterQuery\n                                    \n                                            FilterQuery\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     Promise\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        Public\n                        Async\n                        find\n                        \n                    \n                \n            \n            \n                \n                    \n                    find(entityFilterQuery?: FilterQuery, projection?: Record)\n                \n            \n\n\n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    entityFilterQuery\n                                    \n                                            FilterQuery\n                                    \n\n                                    \n                                        Yes\n                                    \n\n\n                                \n                                \n                                    projection\n                                    \n                                            Record\n                                    \n\n                                    \n                                        Yes\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     Promise\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        Public\n                        Async\n                        findById\n                        \n                    \n                \n            \n            \n                \n                    \n                    findById(entityId: string, projection?: Record)\n                \n            \n\n\n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    entityId\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    projection\n                                    \n                                            Record\n                                    \n\n                                    \n                                        Yes\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     Promise\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        Public\n                        Async\n                        findByIdAndUpdate\n                        \n                    \n                \n            \n            \n                \n                    \n                    findByIdAndUpdate(entityId: string, updateEntityData: UpdateQuery)\n                \n            \n\n\n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    entityId\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    updateEntityData\n                                    \n                                            UpdateQuery\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     Promise\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        Public\n                        Async\n                        findOne\n                        \n                    \n                \n            \n            \n                \n                    \n                    findOne(entityFilterQuery: FilterQuery, projection?: Record)\n                \n            \n\n\n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    entityFilterQuery\n                                    \n                                            FilterQuery\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    projection\n                                    \n                                            Record\n                                    \n\n                                    \n                                        Yes\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     Promise\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n\n\n\n\n\n\n    \n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/JwtAuthGuard.html":{"url":"injectables/JwtAuthGuard.html","title":"injectable - JwtAuthGuard","body":"\n                   \n\n\n\n\n\n\n\n\n  Injectables\n  JwtAuthGuard\n\n\n\n        \n            API Info\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/auth/guards/jwt.guard.ts\n        \n\n\n\n\n\n\n\n\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/JwtStrategy.html":{"url":"injectables/JwtStrategy.html","title":"injectable - JwtStrategy","body":"\n                   \n\n\n\n\n\n\n\n\n  Injectables\n  JwtStrategy\n\n\n\n        \n            API Info\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/auth/strategies/jwt.strategy.ts\n        \n\n\n\n\n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    Public\n                                    Async\n                                validate\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(configService: ConfigService)\n                    \n                \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        configService\n                                                  \n                                                        \n                                                                        ConfigService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        Public\n                        Async\n                        validate\n                        \n                    \n                \n            \n            \n                \n                    \n                    validate(payload: any)\n                \n            \n\n\n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    payload\n                                    \n                                                any\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     unknown\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"guards/RolesGuard.html":{"url":"guards/RolesGuard.html","title":"guard - RolesGuard","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n    Guards\n    RolesGuard\n\n\n\n        \n            API Info\n        \n\n\n\n        \n            \n            File\n            \n            \n                src/auth/guards/role.guard.ts\n            \n\n\n\n\n\n\n                \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                canActivate\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n                \n    Constructor\n        \n            \n                \n                    \nconstructor(reflector: Reflector)\n                    \n                \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        reflector\n                                                  \n                                                        \n                                                                    Reflector\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n                \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        canActivate\n                        \n                    \n                \n            \n            \n                \ncanActivate(context: ExecutionContext)\n                \n            \n\n\n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    context\n                                    \n                                            ExecutionContext\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         boolean\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n\n        \n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/RuntimeSetismConfig.html":{"url":"interfaces/RuntimeSetismConfig.html","title":"interface - RuntimeSetismConfig","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  \n  RuntimeSetismConfig\n\n\n\n        \n            API Info\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/config/config.interface.ts\n        \n\n\n            \n                Description\n            \n            \n                All possible configuration options are defined by the\nSetismConfig interface.\n\n            \n\n\n        \n            Index\n            \n                \n                    \n                        \n                            Properties\n                        \n                    \n                    \n                        \n                            \n                                \n                                        \n                                            apiOptions\n                                        \n                                \n                                \n                                        \n                                            authOptions\n                                        \n                                \n                                \n                                        \n                                            dbOptions\n                                        \n                                \n                            \n                        \n                    \n                \n            \n        \n\n\n\n            \n                Properties\n                    \n                        \n                                \n                                    \n                                        \n                                        apiOptions\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        apiOptions:         Required\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         Required\n\n                                        \n                                    \n\n\n\n\n\n                            \n                                \n                                    Configuration for the REST APIs, including hostname, port, CORS settings,\nmiddleware etc.\n\n                                \n                            \n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        authOptions\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        authOptions:         Required\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         Required\n\n                                        \n                                    \n\n\n\n\n\n                            \n                                \n                                    Configuration for authorization.\n\n                                \n                            \n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        dbOptions\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        dbOptions:         Required\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         Required\n\n                                        \n                                    \n\n\n\n\n\n                            \n                                \n                                    The connection options used to connect to the database.\n\n                                \n                            \n                        \n                    \n            \n    \n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/SuperadminCredentials.html":{"url":"interfaces/SuperadminCredentials.html","title":"interface - SuperadminCredentials","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  \n  SuperadminCredentials\n\n\n\n        \n            API Info\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/config/config.interface.ts\n        \n\n\n\n\n        \n            Index\n            \n                \n                    \n                        \n                            Properties\n                        \n                    \n                    \n                        \n                            \n                                \n                                        \n                                            password\n                                        \n                                \n                            \n                        \n                    \n                \n            \n        \n\n\n\n            \n                Properties\n                    \n                        \n                                \n                                    \n                                        \n                                        password\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        password:         string\n\n                                    \n                                \n\n                                \n                                    \n                                        Default value : 'superadmin'\n\n                                    \n                                \n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                            \n                                \n                                    The password to be used to create a superadmin account\n\n                                \n                            \n                        \n                    \n            \n    \n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/SwaggerOptions.html":{"url":"interfaces/SwaggerOptions.html","title":"interface - SwaggerOptions","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  \n  SwaggerOptions\n\n\n\n        \n            API Info\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/config/config.interface.ts\n        \n\n\n\n\n        \n            Index\n            \n                \n                    \n                        \n                            Properties\n                        \n                    \n                    \n                        \n                            \n                                \n                                            Optional\n                                        \n                                            description\n                                        \n                                \n                                \n                                            Optional\n                                        \n                                            title\n                                        \n                                \n                                \n                                            Optional\n                                        \n                                            version\n                                        \n                                \n                            \n                        \n                    \n                \n            \n        \n\n\n\n            \n                Properties\n                    \n                        \n                                \n                                    \n                                        \n                                        description\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        description:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                            \n                                \n                                    Documentation page API description\n\n                                \n                            \n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        title\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        title:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                            \n                                \n                                    Documentation page title\n\n                                \n                            \n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        version\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        version:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                            \n                                \n                                    Documentation API current version\n\n                                \n                            \n                        \n                    \n            \n    \n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/UpdateUserDto.html":{"url":"classes/UpdateUserDto.html","title":"class - UpdateUserDto","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  UpdateUserDto\n\n\n\n        \n            API Info\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/user/dto/update-user.dto.ts\n        \n\n\n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Optional\n                                avatar\n                            \n                            \n                                    Optional\n                                biography\n                            \n                            \n                                    Optional\n                                birthday\n                            \n                            \n                                    Optional\n                                newWish\n                            \n                            \n                                    Optional\n                                username\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n\n            \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                            Optional\n                        avatar\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @ApiProperty({type: 'string', description: 'User avatar', required: false})@IsOptional()\n                        \n                    \n                \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Optional\n                        biography\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @ApiProperty({type: 'string', description: 'User biography', required: false})@IsOptional()@MinLength(20, {message: 'Biography must be at least 20 characters!'})\n                        \n                    \n                \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Optional\n                        birthday\n                        \n                    \n                \n            \n                \n                    \n                        Type :         Date\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @ApiProperty({type: 'date', description: 'User birthday', required: false})@IsOptional()@IsDate({message: 'Birthday must be a valid date!'})\n                        \n                    \n                \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Optional\n                        newWish\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @ApiProperty({type: 'number', description: 'New book to be added to wishlist', required: false})@IsOptional()\n                        \n                    \n                \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Optional\n                        username\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @ApiProperty({type: 'string', description: 'Username', required: false})@IsOptional()@MinLength(4, {message: 'Username must be at least 4 characters!'})@MaxLength(14, {message: 'Username must be at least 12 characters!'})\n                        \n                    \n                \n\n\n        \n    \n\n\n\n\n\n\n\n\n    \n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"controllers/UserController.html":{"url":"controllers/UserController.html","title":"controller - UserController","body":"\n                   \n\n\n\n\n\n\n  Controllers\n  UserController\n\n\n\n        \n            API Info\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/user/user.controller.ts\n        \n\n\n\n\n\n\n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                createList\n                            \n                            \n                                find\n                            \n                            \n                                index\n                            \n                            \n                                remove\n                            \n                            \n                                update\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        createList\n                        \n                    \n                \n            \n            \n                \ncreateList(id: string, createReadingListDto: CreateReadingListDto)\n                \n            \n\n            \n                \n                    Decorators : \n                    \n                    @ApiBody({type: CreateReadingListDto})@ApiCreatedResponse({description: 'The record has been successfully created.'})@ApiBadRequestResponse({description: 'The record has failed validation.'})@ApiConflictResponse({description: 'The record has an internal conflict.'})@ApiForbiddenResponse({description: 'Forbidden!'})@Post(':id/list')\n                \n            \n\n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    id\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    createReadingListDto\n                                    \n                                                CreateReadingListDto\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         any\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        find\n                        \n                    \n                \n            \n            \n                \nfind(id: string)\n                \n            \n\n            \n                \n                    Decorators : \n                    \n                    @ApiOkResponse({description: 'The record has been successfully returned.'})@ApiNotFoundResponse({description: 'The record was not found.'})@ApiForbiddenResponse({description: 'Forbidden!'})@ApiParam({name: 'id', type: 'String', description: 'User id'})@Get(':id')\n                \n            \n\n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    id\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         any\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        index\n                        \n                    \n                \n            \n            \n                \nindex()\n                \n            \n\n            \n                \n                    Decorators : \n                    \n                    @ApiOkResponse({description: 'The record has been successfully returned.'})@ApiNotFoundResponse({description: 'The record was not found.'})@ApiForbiddenResponse({description: 'Forbidden!'})@UseRoles(Role.ADMIN)@UseGuards(JwtAuthGuard, RolesGuard)@Get()\n                \n            \n\n\n\n            \n                \n\n                    \n                        Returns :         any\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        remove\n                        \n                    \n                \n            \n            \n                \nremove(id: string)\n                \n            \n\n            \n                \n                    Decorators : \n                    \n                    @ApiOkResponse({description: 'The record has been successfully returned.'})@ApiNotFoundResponse({description: 'The record was not found.'})@ApiForbiddenResponse({description: 'Forbidden!'})@ApiParam({name: 'id', type: 'String', description: 'User id'})@Delete(':id')\n                \n            \n\n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    id\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         any\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        update\n                        \n                    \n                \n            \n            \n                \nupdate(id: string, updateUserDto: UpdateUserDto)\n                \n            \n\n            \n                \n                    Decorators : \n                    \n                    @ApiOkResponse({description: 'The record has been successfully returned.'})@ApiNotFoundResponse({description: 'The record was not found.'})@ApiForbiddenResponse({description: 'Forbidden!'})@ApiParam({name: 'id', type: 'String', description: 'User id'})@Patch(':id')\n                \n            \n\n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    id\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    updateUserDto\n                                    \n                                                UpdateUserDto\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         any\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/UserEntity.html":{"url":"classes/UserEntity.html","title":"class - UserEntity","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  UserEntity\n\n\n\n        \n            API Info\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/user/models/user.entity.ts\n        \n\n\n\n            \n                Extends\n            \n            \n                        BaseEntitySchema\n            \n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Public\n                                avatar\n                            \n                            \n                                    Public\n                                biography\n                            \n                            \n                                    Public\n                                birthday\n                            \n                            \n                                    Public\n                                email\n                            \n                            \n                                    Public\n                                firstLogin\n                            \n                            \n                                    Public\n                                fullName\n                            \n                            \n                                    Public\n                                internalComment\n                            \n                            \n                                    Public\n                                lastLogin\n                            \n                            \n                                    Public\n                                password\n                            \n                            \n                                    Public\n                                readingList\n                            \n                            \n                                    Public\n                                role\n                            \n                            \n                                    Public\n                                username\n                            \n                            \n                                    Public\n                                wishList\n                            \n                            \n                                    Readonly\n                                _id\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n\n            \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                            Public\n                        avatar\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @Prop({default: '', trim: true})\n                        \n                    \n                \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Public\n                        biography\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @Prop({default: '', trim: true})\n                        \n                    \n                \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Public\n                        birthday\n                        \n                    \n                \n            \n                \n                    \n                        Type :     Date | null\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @Prop({type: String, default: undefined})\n                        \n                    \n                \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Public\n                        email\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @Prop({required: true, unique: true, trim: true})\n                        \n                    \n                \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Public\n                        firstLogin\n                        \n                    \n                \n            \n                \n                    \n                        Type :         Date\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @Prop({require: true})\n                        \n                    \n                \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Public\n                        fullName\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @Prop({required: true, trim: true})\n                        \n                    \n                \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Public\n                        internalComment\n                        \n                    \n                \n            \n                \n                    \n                        Type :     string | null\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @Prop({type: String, default: undefined})\n                        \n                    \n                \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Public\n                        lastLogin\n                        \n                    \n                \n            \n                \n                    \n                        Type :         Date\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @Prop({required: true})\n                        \n                    \n                \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Public\n                        password\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @Prop({required: true, trim: true})\n                        \n                    \n                \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Public\n                        readingList\n                        \n                    \n                \n            \n                \n                    \n                        Type :         CreateReadingListDto[]\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @Prop(['CreateReadingListDto'])\n                        \n                    \n                \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Public\n                        role\n                        \n                    \n                \n            \n                \n                    \n                        Type :         RoleType\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @Prop({required: true, enum: undefined, default: undefined})\n                        \n                    \n                \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Public\n                        username\n                        \n                    \n                \n            \n                \n                    \n                        Type :     string | null\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @Prop({type: String, trim: true, default: undefined, minlength: 3, maxlength: 12, lowercase: true})\n                        \n                    \n                \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Public\n                        wishList\n                        \n                    \n                \n            \n                \n                    \n                        Type :     string[]\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @Prop({type: undefined})\n                        \n                    \n                \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Readonly\n                        _id\n                        \n                    \n                \n            \n                \n                    \n                        Type :     ObjectID\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @Prop()\n                        \n                    \n                \n\n\n        \n    \n\n\n\n\n\n\n\n\n    \n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"modules/UserModule.html":{"url":"modules/UserModule.html","title":"module - UserModule","body":"\n                   \n\n\n\n\n    Modules\n    UserModule\n\n\n\n    \n        \n\n\n\n\n\ndependencies\n\ndependencies\n\ncluster_UserModule\n\n\n\ncluster_UserModule_providers\n\n\n\n\nUserRepository\n\nUserRepository\n\n\n\nUserModule\n\nUserModule\n\nUserModule -->\n\nUserRepository->UserModule\n\n\n\n\n\nUserService\n\nUserService\n\nUserModule -->\n\nUserService->UserModule\n\n\n\n\n\n\n    \n    \n    \n        Zoom in\n        Reset\n        Zoom out\n    \n\n\n\n\n\n    \n        API Info\n    \n\n\n\n    \n\n        \n            File\n        \n        \n            src/user/user.module.ts\n        \n\n\n\n\n\n        \n            \n                \n                    Providers\n                    \n                        \n                            UserRepository\n                        \n                        \n                            UserService\n                        \n                    \n                \n                \n                    Controllers\n                    \n                        \n                            UserController\n                        \n                    \n                \n            \n        \n\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/UserRepository.html":{"url":"injectables/UserRepository.html","title":"injectable - UserRepository","body":"\n                   \n\n\n\n\n\n\n\n\n  Injectables\n  UserRepository\n\n\n\n        \n            API Info\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/user/models/user.repository.ts\n        \n\n\n\n            \n                Extends\n            \n            \n                        EntityRepository\n            \n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Private\n                                    Readonly\n                                baseProjection\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    Public\n                                    Async\n                                create\n                            \n                            \n                                    Public\n                                    Async\n                                deleteMany\n                            \n                            \n                                    Public\n                                    Async\n                                deleteOne\n                            \n                            \n                                    Public\n                                    Async\n                                find\n                            \n                            \n                                    Public\n                                    Async\n                                findById\n                            \n                            \n                                    Public\n                                    Async\n                                findByIdAndUpdate\n                            \n                            \n                                    Public\n                                    Async\n                                findOne\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(userModel: Model)\n                    \n                \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        userModel\n                                                  \n                                                        \n                                                                        Model\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        Public\n                        Async\n                        create\n                        \n                    \n                \n            \n            \n                \n                    \n                    create(createEntityData: Partial)\n                \n            \n\n\n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    createEntityData\n                                    \n                                            Partial\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     Promise\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        Public\n                        Async\n                        deleteMany\n                        \n                    \n                \n            \n            \n                \n                    \n                    deleteMany(entityFilterQuery: FilterQuery)\n                \n            \n\n\n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    entityFilterQuery\n                                    \n                                            FilterQuery\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     Promise\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        Public\n                        Async\n                        deleteOne\n                        \n                    \n                \n            \n            \n                \n                    \n                    deleteOne(entityFilterQuery: FilterQuery)\n                \n            \n\n\n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    entityFilterQuery\n                                    \n                                            FilterQuery\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     Promise\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        Public\n                        Async\n                        find\n                        \n                    \n                \n            \n            \n                \n                    \n                    find(entityFilterQuery?: FilterQuery, projection?: Record)\n                \n            \n\n\n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    entityFilterQuery\n                                    \n                                            FilterQuery\n                                    \n\n                                    \n                                        Yes\n                                    \n\n\n                                \n                                \n                                    projection\n                                    \n                                            Record\n                                    \n\n                                    \n                                        Yes\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     Promise\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        Public\n                        Async\n                        findById\n                        \n                    \n                \n            \n            \n                \n                    \n                    findById(entityId: string, projection?: Record)\n                \n            \n\n\n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    entityId\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    projection\n                                    \n                                            Record\n                                    \n\n                                    \n                                        Yes\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     Promise\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        Public\n                        Async\n                        findByIdAndUpdate\n                        \n                    \n                \n            \n            \n                \n                    \n                    findByIdAndUpdate(entityId: string, updateEntityData: UpdateQuery)\n                \n            \n\n\n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    entityId\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    updateEntityData\n                                    \n                                            UpdateQuery\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     Promise\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        Public\n                        Async\n                        findOne\n                        \n                    \n                \n            \n            \n                \n                    \n                    findOne(entityFilterQuery: FilterQuery, projection?: Record)\n                \n            \n\n\n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    entityFilterQuery\n                                    \n                                            FilterQuery\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    projection\n                                    \n                                            Record\n                                    \n\n                                    \n                                        Yes\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     Promise\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n\n            \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                            Private\n                            Readonly\n                        baseProjection\n                        \n                    \n                \n            \n                \n                    \n                        Type :         object\n\n                    \n                \n                \n                    \n                        Default value : { __v: 0 }\n                    \n                \n\n\n        \n    \n\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/UserService.html":{"url":"injectables/UserService.html","title":"injectable - UserService","body":"\n                   \n\n\n\n\n\n\n\n\n  Injectables\n  UserService\n\n\n\n        \n            API Info\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/user/user.service.ts\n        \n\n\n\n\n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    Public\n                                    Async\n                                createList\n                            \n                            \n                                    Public\n                                    Async\n                                index\n                            \n                            \n                                    Public\n                                    Async\n                                remove\n                            \n                            \n                                    Public\n                                    Async\n                                show\n                            \n                            \n                                    Public\n                                    Async\n                                update\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(userRepository: UserRepository)\n                    \n                \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        userRepository\n                                                  \n                                                        \n                                                                        UserRepository\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        Public\n                        Async\n                        createList\n                        \n                    \n                \n            \n            \n                \n                    \n                    createList(id: string, createReadingListDto: CreateReadingListDto)\n                \n            \n\n\n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    id\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    createReadingListDto\n                                    \n                                                CreateReadingListDto\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     unknown\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        Public\n                        Async\n                        index\n                        \n                    \n                \n            \n            \n                \n                    \n                    index()\n                \n            \n\n\n\n\n            \n                \n\n                    \n                        Returns :     unknown\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        Public\n                        Async\n                        remove\n                        \n                    \n                \n            \n            \n                \n                    \n                    remove(id: string)\n                \n            \n\n\n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    id\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     unknown\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        Public\n                        Async\n                        show\n                        \n                    \n                \n            \n            \n                \n                    \n                    show(id: string)\n                \n            \n\n\n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    id\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     unknown\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        Public\n                        Async\n                        update\n                        \n                    \n                \n            \n            \n                \n                    \n                    update(id: string, updateUserDto: UpdateUserDto)\n                \n            \n\n\n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    id\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    updateUserDto\n                                    \n                                                UpdateUserDto\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     unknown\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"coverage.html":{"url":"coverage.html","title":"coverage - coverage","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n    Documentation coverage\n\n\n\n    \n\n\n\n    \n        \n            File\n            Type\n            Identifier\n            Statements\n        \n    \n    \n        \n            \n                \n                src/auth/auth.controller.ts\n            \n            controller\n            AuthController\n            \n                0 %\n                (0/3)\n            \n        \n        \n            \n                \n                src/auth/auth.service.ts\n            \n            injectable\n            AuthService\n            \n                0 %\n                (0/6)\n            \n        \n        \n            \n                \n                src/auth/decorators/role.decorator.ts\n            \n            variable\n            ROLES_KEY\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                src/auth/decorators/role.decorator.ts\n            \n            variable\n            UseRoles\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                src/auth/dto/auth.dto.ts\n            \n            class\n            AuthDto\n            \n                0 %\n                (0/3)\n            \n        \n        \n            \n                \n                src/auth/dto/create-user.dto.ts\n            \n            class\n            CreateUserDto\n            \n                0 %\n                (0/4)\n            \n        \n        \n            \n                \n                src/auth/guards/jwt.guard.ts\n            \n            injectable\n            JwtAuthGuard\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                src/auth/guards/role.guard.ts\n            \n            guard\n            RolesGuard\n            \n                0 %\n                (0/3)\n            \n        \n        \n            \n                \n                src/auth/strategies/jwt.strategy.ts\n            \n            injectable\n            JwtStrategy\n            \n                0 %\n                (0/3)\n            \n        \n        \n            \n                \n                src/config/config.interface.ts\n            \n            interface\n            ApiOptions\n            \n                100 %\n                (7/7)\n            \n        \n        \n            \n                \n                src/config/config.interface.ts\n            \n            interface\n            AuthOptions\n            \n                100 %\n                (5/5)\n            \n        \n        \n            \n                \n                src/config/config.interface.ts\n            \n            interface\n            ConnectionOptions\n            \n                66 %\n                (2/3)\n            \n        \n        \n            \n                \n                src/config/config.interface.ts\n            \n            interface\n            RuntimeSetismConfig\n            \n                100 %\n                (4/4)\n            \n        \n        \n            \n                \n                src/config/config.interface.ts\n            \n            interface\n            SuperadminCredentials\n            \n                50 %\n                (1/2)\n            \n        \n        \n            \n                \n                src/config/config.interface.ts\n            \n            interface\n            SwaggerOptions\n            \n                75 %\n                (3/4)\n            \n        \n        \n            \n                \n                src/config/config.service.ts\n            \n            class\n            ConfigService\n            \n                0 %\n                (0/5)\n            \n        \n        \n            \n                \n                src/db/base.schema.ts\n            \n            class\n            BaseEntitySchema\n            \n                0 %\n                (0/2)\n            \n        \n        \n            \n                \n                src/db/db.service.ts\n            \n            injectable\n            DatabaseService\n            \n                0 %\n                (0/3)\n            \n        \n        \n            \n                \n                src/db/entity.repository.ts\n            \n            class\n            EntityRepository\n            \n                0 %\n                (0/10)\n            \n        \n        \n            \n                \n                src/main.ts\n            \n            function\n            bootstrap\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                src/swagger.ts\n            \n            function\n            createdocument\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                src/user/dto/readingList-create.dto.ts\n            \n            class\n            CreateReadingListDto\n            \n                0 %\n                (0/5)\n            \n        \n        \n            \n                \n                src/user/dto/update-user.dto.ts\n            \n            class\n            UpdateUserDto\n            \n                0 %\n                (0/6)\n            \n        \n        \n            \n                \n                src/user/models/user.entity.ts\n            \n            class\n            UserEntity\n            \n                0 %\n                (0/15)\n            \n        \n        \n            \n                \n                src/user/models/user.entity.ts\n            \n            variable\n            UserEntitySchema\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                src/user/models/user.repository.ts\n            \n            injectable\n            UserRepository\n            \n                0 %\n                (0/10)\n            \n        \n        \n            \n                \n                src/user/user.controller.ts\n            \n            controller\n            UserController\n            \n                0 %\n                (0/6)\n            \n        \n        \n            \n                \n                src/user/user.service.ts\n            \n            injectable\n            UserService\n            \n                0 %\n                (0/7)\n            \n        \n    \n\n\n\n\n\n    new Tablesort(document.getElementById('coverage-table'));\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"dependencies.html":{"url":"dependencies.html","title":"package-dependencies - dependencies","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n    \n        Dependencies\n    \n    \n        \n            @nestjs/common : ^8.0.0\n        \n            @nestjs/config : ^1.0.1\n        \n            @nestjs/core : ^8.0.0\n        \n            @nestjs/jwt : ^8.0.0\n        \n            @nestjs/mongoose : ^8.0.1\n        \n            @nestjs/passport : ^8.0.1\n        \n            @nestjs/platform-express : ^8.0.0\n        \n            @nestjs/swagger : ^5.0.9\n        \n            argon2 : ^0.28.2\n        \n            class-transformer : ^0.4.0\n        \n            class-validator : ^0.13.1\n        \n            csurf : ^1.11.0\n        \n            envalid : ^6.0.2\n        \n            helmet : ^4.6.0\n        \n            mongoose : ^5.13.8\n        \n            passport : ^0.4.1\n        \n            passport-jwt : ^4.0.0\n        \n            reflect-metadata : ^0.1.13\n        \n            rimraf : ^3.0.2\n        \n            rxjs : ^7.2.0\n        \n            swagger-ui-express : ^4.1.6\n    \n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"miscellaneous/enumerations.html":{"url":"miscellaneous/enumerations.html","title":"miscellaneous-enumerations - enumerations","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n  Miscellaneous\n  Enumerations\n\n\n\n    Index\n    \n        \n            \n                \n                    \n                        \n                            Environment   (src/.../config.interface.ts)\n                        \n                        \n                            ReadingListKind   (src/.../reading-list.enum.ts)\n                        \n                        \n                            Role   (src/.../role.enum.ts)\n                        \n                    \n                \n            \n        \n    \n\n\n    src/config/config.interface.ts\n    \n        \n            \n                \n                    \n                        \n                        Environment\n                    \n                \n                        \n                            \n                                 Development\n                            \n                        \n                        \n                            \n                                Value : development\n                            \n                        \n                        \n                            \n                                 Production\n                            \n                        \n                        \n                            \n                                Value : production\n                            \n                        \n                        \n                            \n                                 Test\n                            \n                        \n                        \n                            \n                                Value : test\n                            \n                        \n            \n        \n\n    src/user/reading-list.enum.ts\n    \n        \n            \n                \n                    \n                        \n                        ReadingListKind\n                    \n                \n                        \n                            \n                                 PUBLIC\n                            \n                        \n                        \n                            \n                                Value : 0\n                            \n                        \n                        \n                            \n                                 PRIVATE\n                            \n                        \n                        \n                            \n                                Value : 1\n                            \n                        \n            \n        \n\n    src/auth/role.enum.ts\n    \n        \n            \n                \n                    \n                        \n                        Role\n                    \n                \n                        \n                            \n                                 SUPER_ADMIN\n                            \n                        \n                        \n                            \n                                Value : 1\n                            \n                        \n                        \n                            \n                                 ADMIN\n                            \n                        \n                        \n                            \n                                Value : 2\n                            \n                        \n                        \n                            \n                                 READER\n                            \n                        \n                        \n                            \n                                Value : 3\n                            \n                        \n                        \n                            \n                                 PUBLISHER\n                            \n                        \n                        \n                            \n                                Value : 4\n                            \n                        \n                        \n                            \n                                 CRITIC\n                            \n                        \n                        \n                            \n                                Value : 5\n                            \n                        \n                        \n                            \n                                 AUTHOR\n                            \n                        \n                        \n                            \n                                Value : 6\n                            \n                        \n            \n        \n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"miscellaneous/functions.html":{"url":"miscellaneous/functions.html","title":"miscellaneous-functions - functions","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n  Miscellaneous\n  Functions\n\n\n\n    Index\n    \n        \n            \n                \n                    \n                        \n                            bootstrap   (src/.../main.ts)\n                        \n                        \n                            createdocument   (src/.../swagger.ts)\n                        \n                    \n                \n            \n        \n    \n\n\n    src/main.ts\n    \n        \n        \n            \n                \n                    \n                    \n                        bootstrap\n                        \n                    \n                \n            \n            \n                \nbootstrap()\n                \n            \n\n\n\n\n        \n    \n    src/swagger.ts\n    \n        \n        \n            \n                \n                    \n                    \n                        createdocument\n                        \n                    \n                \n            \n            \n                \ncreatedocument(app: INestApplication)\n                \n            \n\n\n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    app\n                                    \n                                            INestApplication\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     OpenAPIObject\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"index.html":{"url":"index.html","title":"getting-started - index","body":"\n                   \n\nv33-bears-team-15be\nChingu Voyage 33 Bears 15 Backend application\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"modules.html":{"url":"modules.html","title":"modules - modules","body":"\n                   \n\n\n\n\n    Modules\n\n\n    \n            \n                \n                    \n                        AppModule\n                    \n                    \n                                \n                                    \n                                        Your browser does not support SVG\n                                    \n                                \n                        \n                            Browse\n                        \n                    \n                \n            \n            \n                \n                    \n                        AuthModule\n                    \n                    \n                                \n                                    \n                                        Your browser does not support SVG\n                                    \n                                \n                        \n                            Browse\n                        \n                    \n                \n            \n            \n                \n                    \n                        ConfigModule\n                    \n                    \n                                \n                                    \n                                        Your browser does not support SVG\n                                    \n                                \n                        \n                            Browse\n                        \n                    \n                \n            \n            \n                \n                    \n                        DatabaseModule\n                    \n                    \n                                \n                                    \n                                        Your browser does not support SVG\n                                    \n                                \n                        \n                            Browse\n                        \n                    \n                \n            \n            \n                \n                    \n                        UserModule\n                    \n                    \n                                \n                                    \n                                        Your browser does not support SVG\n                                    \n                                \n                        \n                            Browse\n                        \n                    \n                \n            \n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"overview.html":{"url":"overview.html","title":"overview - overview","body":"\n                   \n\n\n\n    Overview\n\n  \n\n    \n        \n\n\n\n\n\ndependencies\n\ndependencies\n\ncluster_AppModule\n\n\n\ncluster_AppModule_imports\n\n\n\ncluster_AuthModule\n\n\n\ncluster_AuthModule_exports\n\n\n\ncluster_AuthModule_providers\n\n\n\ncluster_ConfigModule\n\n\n\ncluster_ConfigModule_exports\n\n\n\ncluster_DatabaseModule\n\n\n\ncluster_DatabaseModule_exports\n\n\n\ncluster_DatabaseModule_providers\n\n\n\ncluster_UserModule\n\n\n\ncluster_UserModule_providers\n\n\n\n\nAuthModule\n\nAuthModule\n\n\n\nAppModule\n\nAppModule\n\nAppModule -->\n\nAuthModule->AppModule\n\n\n\n\n\nAuthService \n\nAuthService \n\nAuthService  -->\n\nAuthModule->AuthService \n\n\n\n\n\nConfigModule\n\nConfigModule\n\nAppModule -->\n\nConfigModule->AppModule\n\n\n\n\n\nConfigService \n\nConfigService \n\nConfigService  -->\n\nConfigModule->ConfigService \n\n\n\n\n\nDatabaseModule\n\nDatabaseModule\n\nAppModule -->\n\nDatabaseModule->AppModule\n\n\n\n\n\nDatabaseService \n\nDatabaseService \n\nDatabaseService  -->\n\nDatabaseModule->DatabaseService \n\n\n\n\n\nUserModule\n\nUserModule\n\nAppModule -->\n\nUserModule->AppModule\n\n\n\n\n\nAuthService\n\nAuthService\n\nAuthModule -->\n\nAuthService->AuthModule\n\n\n\n\n\nJwtStrategy\n\nJwtStrategy\n\nAuthModule -->\n\nJwtStrategy->AuthModule\n\n\n\n\n\nUserRepository\n\nUserRepository\n\nAuthModule -->\n\nUserRepository->AuthModule\n\n\n\nUserModule -->\n\nUserRepository->UserModule\n\n\n\n\n\nDatabaseService\n\nDatabaseService\n\nDatabaseModule -->\n\nDatabaseService->DatabaseModule\n\n\n\n\n\nUserService\n\nUserService\n\nUserModule -->\n\nUserService->UserModule\n\n\n\n\n\n\n    \n    \n    \n        Zoom in\n        Reset\n        Zoom out\n    \n\n  \n\n    \n        \n            \n                \n                    \n                    \n                        5 Modules\n                    \n                \n            \n        \n        \n            \n                \n                    \n                    2 Controllers\n                \n            \n        \n        \n            \n                \n                    \n                    6 Injectables\n                \n            \n        \n        \n            \n                \n                    \n                    8 Classes\n                \n            \n        \n        \n            \n                \n                    \n                    1 Guard\n                \n            \n        \n        \n            \n                \n                    \n                    6 Interfaces\n                \n            \n        \n    \n\n\n \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"miscellaneous/typealiases.html":{"url":"miscellaneous/typealiases.html","title":"miscellaneous-typealiases - typealiases","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n  Miscellaneous\n  Type aliases\n\n\n\n    Index\n    \n        \n            \n                \n                    \n                        \n                            ReadingListType   (src/.../reading-list.enum.ts)\n                        \n                        \n                            RoleType   (src/.../role.enum.ts)\n                        \n                        \n                            UserDocument   (src/.../user.entity.ts)\n                        \n                    \n                \n            \n        \n    \n\n\n    src/user/reading-list.enum.ts\n    \n    \n        \n            \n                \n                    \n                    ReadingListType\n                \n            \n            \n                \n                             `${ReadingListKind}`\n\n                \n            \n        \n    \n    src/auth/role.enum.ts\n    \n    \n        \n            \n                \n                    \n                    RoleType\n                \n            \n            \n                \n                             `${Role}`\n\n                \n            \n        \n    \n    src/user/models/user.entity.ts\n    \n    \n        \n            \n                \n                    \n                    UserDocument\n                \n            \n            \n                \n                        \n\n                \n            \n        \n    \n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"miscellaneous/variables.html":{"url":"miscellaneous/variables.html","title":"miscellaneous-variables - variables","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n  Miscellaneous\n  Variables\n\n\n\n    Index\n    \n        \n            \n                \n                    \n                        \n                            ROLES_KEY   (src/.../role.decorator.ts)\n                        \n                        \n                            UserEntitySchema   (src/.../user.entity.ts)\n                        \n                        \n                            UseRoles   (src/.../role.decorator.ts)\n                        \n                    \n                \n            \n        \n    \n\n\n    src/auth/decorators/role.decorator.ts\n    \n        \n        \n            \n                \n                    \n                    \n                        ROLES_KEY\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Default value : \"claim\"\n                    \n                \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        UseRoles\n                        \n                    \n                \n            \n                \n                    \n                        Default value : (...roles: Role[]) => SetMetadata(ROLES_KEY, roles)\n                    \n                \n\n\n        \n    \n\n    src/user/models/user.entity.ts\n    \n        \n        \n            \n                \n                    \n                    \n                        UserEntitySchema\n                        \n                    \n                \n            \n                \n                    \n                        Default value : SchemaFactory.createForClass(UserEntity)\n                    \n                \n\n\n        \n    \n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"}}
}
